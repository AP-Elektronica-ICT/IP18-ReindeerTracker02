   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"nbiot_func.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.assembleMqtt,"ax",%progbits
  18              		.align	1
  19              		.global	assembleMqtt
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	assembleMqtt:
  26              	.LFB1:
  27              		.file 1 "../source/nbiot_func.c"
   1:../source/nbiot_func.c **** /*
   2:../source/nbiot_func.c ****  * nbiot_func.c
   3:../source/nbiot_func.c ****  *
   4:../source/nbiot_func.c ****  *  Created on: Mar 16, 2018
   5:../source/nbiot_func.c ****  *      Author: teemu
   6:../source/nbiot_func.c ****  */
   7:../source/nbiot_func.c **** #include <stdint.h>
   8:../source/nbiot_func.c **** #include <stdio.h>
   9:../source/nbiot_func.c **** #include <stdlib.h>
  10:../source/nbiot_func.c **** #include <string.h>
  11:../source/nbiot_func.c **** #include "nbiot_func.h"
  12:../source/nbiot_func.c **** #include "at_func.h"
  13:../source/nbiot_func.c **** #include "timing.h"
  14:../source/nbiot_func.c **** 
  15:../source/nbiot_func.c **** 
  16:../source/nbiot_func.c **** extern volatile uint8_t UART3_strReady;
  17:../source/nbiot_func.c **** 
  18:../source/nbiot_func.c **** extern char UART3_recBuf[];
  19:../source/nbiot_func.c **** extern char UART3_bufPtr;
  20:../source/nbiot_func.c **** 
  21:../source/nbiot_func.c **** uint8_t res;
  22:../source/nbiot_func.c **** 
  23:../source/nbiot_func.c **** const char postHeader[] =
  24:../source/nbiot_func.c **** 		"POST /Reindeertracker/API/data/index.php HTTP/1.1\r\n"
  25:../source/nbiot_func.c **** 				"Host: 168.235.64.81\r\n"
  26:../source/nbiot_func.c **** 				"Content-Length: %d\r\n"
  27:../source/nbiot_func.c **** 				"Content-Type: application/json\r\n"
  28:../source/nbiot_func.c **** 				"Cache-Control: no-cache\r\n\r\n";
  29:../source/nbiot_func.c **** 
  30:../source/nbiot_func.c **** const char* client_id = "reindeertracker";
  31:../source/nbiot_func.c **** const char* topic = "reindeer";
  32:../source/nbiot_func.c **** const char* username = "reindeer";
  33:../source/nbiot_func.c **** const char* passwd = "reindeer1234";
  34:../source/nbiot_func.c **** 
  35:../source/nbiot_func.c **** uint8_t assembleMqtt(reindeerData_t *reindeerData, char *mqttMessage)
  36:../source/nbiot_func.c **** {
  28              		.loc 1 36 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 368
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  34              		.cfi_def_cfa_offset 36
  35              		.cfi_offset 4, -36
  36              		.cfi_offset 5, -32
  37              		.cfi_offset 6, -28
  38              		.cfi_offset 7, -24
  39              		.cfi_offset 8, -20
  40              		.cfi_offset 9, -16
  41              		.cfi_offset 10, -12
  42              		.cfi_offset 11, -8
  43              		.cfi_offset 14, -4
  37:../source/nbiot_func.c **** 
  38:../source/nbiot_func.c **** 	uint8_t clientid_lt = strlen(client_id);
  44              		.loc 1 38 0
  45 0004 674B     		ldr	r3, .L4
  36:../source/nbiot_func.c **** 
  46              		.loc 1 36 0
  47 0006 8946     		mov	r9, r1
  48              		.loc 1 38 0
  49 0008 1968     		ldr	r1, [r3]
  50              	.LVL1:
  36:../source/nbiot_func.c **** 
  51              		.loc 1 36 0
  52 000a DDB0     		sub	sp, sp, #372
  53              		.cfi_def_cfa_offset 408
  36:../source/nbiot_func.c **** 
  54              		.loc 1 36 0
  55 000c 8046     		mov	r8, r0
  56              		.loc 1 38 0
  57 000e 0846     		mov	r0, r1
  58              	.LVL2:
  59 0010 0191     		str	r1, [sp, #4]
  60 0012 FFF7FEFF 		bl	strlen
  61              	.LVL3:
  39:../source/nbiot_func.c **** 	uint8_t pass_lt = strlen(passwd);
  62              		.loc 1 39 0
  63 0016 644B     		ldr	r3, .L4+4
  64 0018 D3F800A0 		ldr	r10, [r3]
  38:../source/nbiot_func.c **** 	uint8_t pass_lt = strlen(passwd);
  65              		.loc 1 38 0
  66 001c 5FFA80FB 		uxtb	fp, r0
  67              	.LVL4:
  68              		.loc 1 39 0
  69 0020 5046     		mov	r0, r10
  70 0022 FFF7FEFF 		bl	strlen
  71              	.LVL5:
  40:../source/nbiot_func.c **** 	uint8_t user_lt = strlen(username);
  72              		.loc 1 40 0
  73 0026 614B     		ldr	r3, .L4+8
  74 0028 1B68     		ldr	r3, [r3]
  75 002a 0093     		str	r3, [sp]
  39:../source/nbiot_func.c **** 	uint8_t pass_lt = strlen(passwd);
  76              		.loc 1 39 0
  77 002c C5B2     		uxtb	r5, r0
  78              	.LVL6:
  79              		.loc 1 40 0
  80 002e 1846     		mov	r0, r3
  41:../source/nbiot_func.c **** 	//M		Q		T    T   prLe  flag  kea   kea
  42:../source/nbiot_func.c **** 	uint8_t connect_command[] =
  43:../source/nbiot_func.c **** 	{ 0x10, clientid_lt + pass_lt + user_lt + 10 + 6, 0x00, 0x04, 0x4d, 0x51,
  44:../source/nbiot_func.c **** 			0x54, 0x54, 0x04, 0xc2, 0x00, 0x0a, 0x00, clientid_lt };
  45:../source/nbiot_func.c **** 
  46:../source/nbiot_func.c **** 	uint8_t packet_ptr = 0;
  47:../source/nbiot_func.c **** 
  48:../source/nbiot_func.c **** 	char udpMessage[350];
  49:../source/nbiot_func.c **** 
  50:../source/nbiot_func.c **** 	memmove(udpMessage, connect_command, sizeof(connect_command)); //move connect command header to th
  81              		.loc 1 50 0
  82 0030 04AC     		add	r4, sp, #16
  40:../source/nbiot_func.c **** 	uint8_t user_lt = strlen(username);
  83              		.loc 1 40 0
  84 0032 FFF7FEFF 		bl	strlen
  85              	.LVL7:
  86              		.loc 1 50 0
  87 0036 1022     		movs	r2, #16
  88 0038 2270     		strb	r2, [r4]
  43:../source/nbiot_func.c **** 			0x54, 0x54, 0x04, 0xc2, 0x00, 0x0a, 0x00, clientid_lt };
  89              		.loc 1 43 0
  90 003a 0BEB0502 		add	r2, fp, r5
  40:../source/nbiot_func.c **** 	uint8_t user_lt = strlen(username);
  91              		.loc 1 40 0
  92 003e C6B2     		uxtb	r6, r0
  93              	.LVL8:
  43:../source/nbiot_func.c **** 			0x54, 0x54, 0x04, 0xc2, 0x00, 0x0a, 0x00, clientid_lt };
  94              		.loc 1 43 0
  95 0040 1032     		adds	r2, r2, #16
  96 0042 3244     		add	r2, r2, r6
  97              		.loc 1 50 0
  98 0044 6270     		strb	r2, [r4, #1]
  99 0046 4D20     		movs	r0, #77
 100 0048 0422     		movs	r2, #4
 101 004a E270     		strb	r2, [r4, #3]
 102 004c 2071     		strb	r0, [r4, #4]
 103 004e 2272     		strb	r2, [r4, #8]
 104 0050 5120     		movs	r0, #81
 105 0052 C222     		movs	r2, #194
 106 0054 6071     		strb	r0, [r4, #5]
 107 0056 6272     		strb	r2, [r4, #9]
 108 0058 5420     		movs	r0, #84
 109 005a 0A22     		movs	r2, #10
 110 005c 0027     		movs	r7, #0
 111 005e A071     		strb	r0, [r4, #6]
 112 0060 E071     		strb	r0, [r4, #7]
 113 0062 E272     		strb	r2, [r4, #11]
  51:../source/nbiot_func.c **** 	packet_ptr += sizeof(connect_command); //increment packet pointer by the added data length so we k
  52:../source/nbiot_func.c **** 
  53:../source/nbiot_func.c **** 	memmove(udpMessage + packet_ptr, client_id, clientid_lt); //add client id next
 114              		.loc 1 53 0
 115 0064 0199     		ldr	r1, [sp, #4]
  50:../source/nbiot_func.c **** 	packet_ptr += sizeof(connect_command); //increment packet pointer by the added data length so we k
 116              		.loc 1 50 0
 117 0066 84F80DB0 		strb	fp, [r4, #13]
 118              	.LVL9:
 119              		.loc 1 53 0
 120 006a 5A46     		mov	r2, fp
 121 006c 0DF11E00 		add	r0, sp, #30
  50:../source/nbiot_func.c **** 	packet_ptr += sizeof(connect_command); //increment packet pointer by the added data length so we k
 122              		.loc 1 50 0
 123 0070 A770     		strb	r7, [r4, #2]
 124 0072 A772     		strb	r7, [r4, #10]
 125 0074 2773     		strb	r7, [r4, #12]
 126              		.loc 1 53 0
 127 0076 FFF7FEFF 		bl	memcpy
 128              	.LVL10:
  54:../source/nbiot_func.c **** 	packet_ptr += clientid_lt;
 129              		.loc 1 54 0
 130 007a 0BF10E02 		add	r2, fp, #14
  55:../source/nbiot_func.c **** 
  56:../source/nbiot_func.c **** 	uint8_t w_buf[5] =
 131              		.loc 1 56 0
 132 007e 0297     		str	r7, [sp, #8]
 133              	.LVL11:
  57:../source/nbiot_func.c **** 	{ 0x00, user_lt };
  58:../source/nbiot_func.c **** 
  59:../source/nbiot_func.c **** 	memmove(udpMessage + packet_ptr, w_buf, 2); //put user length..
  60:../source/nbiot_func.c **** 	packet_ptr += 2;
  61:../source/nbiot_func.c **** 
  62:../source/nbiot_func.c **** 	memmove(udpMessage + packet_ptr, username, user_lt); 	//put user
 134              		.loc 1 62 0
 135 0080 009B     		ldr	r3, [sp]
  56:../source/nbiot_func.c **** 	{ 0x00, user_lt };
 136              		.loc 1 56 0
 137 0082 8DF80960 		strb	r6, [sp, #9]
  59:../source/nbiot_func.c **** 	packet_ptr += 2;
 138              		.loc 1 59 0
 139 0086 D2B2     		uxtb	r2, r2
  60:../source/nbiot_func.c **** 
 140              		.loc 1 60 0
 141 0088 0BF1100B 		add	fp, fp, #16
 142              	.LVL12:
  59:../source/nbiot_func.c **** 	packet_ptr += 2;
 143              		.loc 1 59 0
 144 008c BDF80810 		ldrh	r1, [sp, #8]
 145 0090 A152     		strh	r1, [r4, r2]	@ unaligned
  60:../source/nbiot_func.c **** 
 146              		.loc 1 60 0
 147 0092 5FFA8BFB 		uxtb	fp, fp
 148              	.LVL13:
 149              		.loc 1 62 0
 150 0096 3246     		mov	r2, r6
 151 0098 1946     		mov	r1, r3
 152 009a 04EB0B00 		add	r0, r4, fp
  63:../source/nbiot_func.c **** 	packet_ptr += user_lt;
 153              		.loc 1 63 0
 154 009e 5E44     		add	r6, r6, fp
 155              	.LVL14:
  62:../source/nbiot_func.c **** 	packet_ptr += user_lt;
 156              		.loc 1 62 0
 157 00a0 FFF7FEFF 		bl	memcpy
 158              	.LVL15:
 159              		.loc 1 63 0
 160 00a4 F6B2     		uxtb	r6, r6
 161              	.LVL16:
  64:../source/nbiot_func.c **** 
  65:../source/nbiot_func.c **** 	w_buf[1] = pass_lt;
 162              		.loc 1 65 0
 163 00a6 8DF80950 		strb	r5, [sp, #9]
 164              	.LVL17:
  66:../source/nbiot_func.c **** 
  67:../source/nbiot_func.c **** 	memmove(udpMessage + packet_ptr, w_buf, 2); //put passwd length..
 165              		.loc 1 67 0
 166 00aa BDF80830 		ldrh	r3, [sp, #8]
 167 00ae A353     		strh	r3, [r4, r6]	@ unaligned
  68:../source/nbiot_func.c **** 	packet_ptr += 2;
 168              		.loc 1 68 0
 169 00b0 0236     		adds	r6, r6, #2
 170              	.LVL18:
 171 00b2 F6B2     		uxtb	r6, r6
 172              	.LVL19:
  69:../source/nbiot_func.c **** 
  70:../source/nbiot_func.c **** 	memmove(udpMessage + packet_ptr, passwd, pass_lt); 	//put passwd
 173              		.loc 1 70 0
 174 00b4 2A46     		mov	r2, r5
 175 00b6 5146     		mov	r1, r10
 176 00b8 A019     		adds	r0, r4, r6
 177 00ba FFF7FEFF 		bl	memcpy
 178              	.LVL20:
  71:../source/nbiot_func.c **** 	packet_ptr += pass_lt;
  72:../source/nbiot_func.c **** 
  73:../source/nbiot_func.c **** 	uint8_t topic_lt = strlen(topic);
 179              		.loc 1 73 0
 180 00be 3C4B     		ldr	r3, .L4+12
 181 00c0 0093     		str	r3, [sp]
 182 00c2 1868     		ldr	r0, [r3]
  74:../source/nbiot_func.c **** 
  75:../source/nbiot_func.c **** 	int length = 0;
  76:../source/nbiot_func.c **** 
  77:../source/nbiot_func.c **** 	static char jsonMessage[150];
  78:../source/nbiot_func.c **** 
  79:../source/nbiot_func.c **** 	length += sprintf(jsonMessage, "{\r\n\r\n    \"serialnumber\":\"%s\",\r\n",
 183              		.loc 1 79 0
 184 00c4 DFF808B1 		ldr	fp, .L4+44
  73:../source/nbiot_func.c **** 
 185              		.loc 1 73 0
 186 00c8 FFF7FEFF 		bl	strlen
 187              	.LVL21:
 188              		.loc 1 79 0
 189 00cc 4246     		mov	r2, r8
  73:../source/nbiot_func.c **** 
 190              		.loc 1 73 0
 191 00ce 5FFA80FA 		uxtb	r10, r0
 192              		.loc 1 79 0
 193 00d2 3849     		ldr	r1, .L4+16
 194 00d4 5846     		mov	r0, fp
 195 00d6 FFF7FEFF 		bl	sprintf
 196              	.LVL22:
  71:../source/nbiot_func.c **** 	packet_ptr += pass_lt;
 197              		.loc 1 71 0
 198 00da 3544     		add	r5, r5, r6
 199              	.LVL23:
  80:../source/nbiot_func.c **** 			reindeerData->serialNum);
  81:../source/nbiot_func.c **** 	length += sprintf(jsonMessage + length, "    \"lat\":\"%s\",\r\n",
 200              		.loc 1 81 0
 201 00dc 08F10602 		add	r2, r8, #6
  79:../source/nbiot_func.c **** 			reindeerData->serialNum);
 202              		.loc 1 79 0
 203 00e0 0646     		mov	r6, r0
 204              	.LVL24:
 205              		.loc 1 81 0
 206 00e2 3549     		ldr	r1, .L4+20
 207 00e4 5844     		add	r0, fp, r0
 208 00e6 FFF7FEFF 		bl	sprintf
 209              	.LVL25:
 210 00ea 0644     		add	r6, r6, r0
  82:../source/nbiot_func.c **** 			reindeerData->latitude);
  83:../source/nbiot_func.c **** 	length += sprintf(jsonMessage + length, "    \"long\":\"%s\",\r\n",
 211              		.loc 1 83 0
 212 00ec 08F11202 		add	r2, r8, #18
 213 00f0 3249     		ldr	r1, .L4+24
 214 00f2 0BEB0600 		add	r0, fp, r6
 215 00f6 FFF7FEFF 		bl	sprintf
 216              	.LVL26:
 217 00fa 0644     		add	r6, r6, r0
  84:../source/nbiot_func.c **** 			reindeerData->longitude);
  85:../source/nbiot_func.c **** 	length += sprintf(jsonMessage + length, "    \"status\":\"%s\",\r\n",
 218              		.loc 1 85 0
 219 00fc 08F11E02 		add	r2, r8, #30
 220 0100 2F49     		ldr	r1, .L4+28
 221 0102 0BEB0600 		add	r0, fp, r6
 222 0106 FFF7FEFF 		bl	sprintf
 223              	.LVL27:
 224 010a 0644     		add	r6, r6, r0
  86:../source/nbiot_func.c **** 			reindeerData->dead);
  87:../source/nbiot_func.c **** 	length += sprintf(jsonMessage + length, "    \"battery\":\"%d\"\r\n\r\n}",
 225              		.loc 1 87 0
 226 010c 98F82420 		ldrb	r2, [r8, #36]	@ zero_extendqisi2
 227 0110 2C49     		ldr	r1, .L4+32
 228 0112 0BEB0600 		add	r0, fp, r6
 229 0116 FFF7FEFF 		bl	sprintf
 230              	.LVL28:
 231 011a 0644     		add	r6, r6, r0
  88:../source/nbiot_func.c **** 			reindeerData->batteryLevel);
  89:../source/nbiot_func.c **** 
  90:../source/nbiot_func.c **** 	printf(jsonMessage);
 232              		.loc 1 90 0
 233 011c 5846     		mov	r0, fp
 234 011e FFF7FEFF 		bl	printf
 235              	.LVL29:
  91:../source/nbiot_func.c **** 
  92:../source/nbiot_func.c **** 	w_buf[0] = 0x30;
 236              		.loc 1 92 0
 237 0122 3022     		movs	r2, #48
 238 0124 8DF80820 		strb	r2, [sp, #8]
  93:../source/nbiot_func.c **** 	w_buf[1] = 0x00;
  94:../source/nbiot_func.c **** 	w_buf[2] = 0x00;
  95:../source/nbiot_func.c **** 	w_buf[3] = 0x00;
  96:../source/nbiot_func.c **** 	w_buf[4] = topic_lt; //put in publish command
  97:../source/nbiot_func.c **** 
  98:../source/nbiot_func.c **** 	w_buf[1] = topic_lt + length + 2; //replace 0 with length of publish message
 239              		.loc 1 98 0
 240 0128 5FFA86F8 		uxtb	r8, r6
 241              	.LVL30:
 242 012c 0AF10202 		add	r2, r10, #2
 243 0130 4244     		add	r2, r2, r8
 244 0132 D2B2     		uxtb	r2, r2
  99:../source/nbiot_func.c **** 
 100:../source/nbiot_func.c **** 	uint8_t x = w_buf[1];
 101:../source/nbiot_func.c **** 	uint8_t encodedByte = 0;
 102:../source/nbiot_func.c **** 
 103:../source/nbiot_func.c **** 	encodedByte = x % 128;
 104:../source/nbiot_func.c **** 
 105:../source/nbiot_func.c **** 	x = x / 128;
 106:../source/nbiot_func.c **** 
 107:../source/nbiot_func.c **** 	encodedByte = encodedByte | 128;
 245              		.loc 1 107 0
 246 0134 62F07F01 		orn	r1, r2, #127
 105:../source/nbiot_func.c **** 
 247              		.loc 1 105 0
 248 0138 D209     		lsrs	r2, r2, #7
  71:../source/nbiot_func.c **** 
 249              		.loc 1 71 0
 250 013a EDB2     		uxtb	r5, r5
 251              	.LVL31:
 108:../source/nbiot_func.c **** 
 109:../source/nbiot_func.c **** 	w_buf[1] = encodedByte;
 252              		.loc 1 109 0
 253 013c 8DF80910 		strb	r1, [sp, #9]
 254              	.LVL32:
 110:../source/nbiot_func.c **** 
 111:../source/nbiot_func.c **** 	w_buf[2] = x;
 112:../source/nbiot_func.c **** 
 113:../source/nbiot_func.c **** 	memmove(udpMessage + packet_ptr, w_buf, 5);
 255              		.loc 1 113 0
 256 0140 8DF80A20 		strb	r2, [sp, #10]
 257 0144 0298     		ldr	r0, [sp, #8]
 258 0146 6051     		str	r0, [r4, r5]	@ unaligned
 259 0148 6219     		adds	r2, r4, r5
 114:../source/nbiot_func.c **** 	packet_ptr += 5;
 260              		.loc 1 114 0
 261 014a 0535     		adds	r5, r5, #5
 262              	.LVL33:
 263 014c EDB2     		uxtb	r5, r5
 264              	.LVL34:
 115:../source/nbiot_func.c **** 
 116:../source/nbiot_func.c **** 	memmove(udpMessage + packet_ptr, topic, topic_lt);
 265              		.loc 1 116 0
 266 014e 009B     		ldr	r3, [sp]
 113:../source/nbiot_func.c **** 	packet_ptr += 5;
 267              		.loc 1 113 0
 268 0150 82F804A0 		strb	r10, [r2, #4]
 269 0154 8DF80CA0 		strb	r10, [sp, #12]
 270              		.loc 1 116 0
 271 0158 5246     		mov	r2, r10
 117:../source/nbiot_func.c **** 	packet_ptr += topic_lt;
 272              		.loc 1 117 0
 273 015a AA44     		add	r10, r10, r5
 274              	.LVL35:
 116:../source/nbiot_func.c **** 	packet_ptr += topic_lt;
 275              		.loc 1 116 0
 276 015c 1968     		ldr	r1, [r3]
 277 015e 6019     		adds	r0, r4, r5
 278              		.loc 1 117 0
 279 0160 5FFA8AFA 		uxtb	r10, r10
 116:../source/nbiot_func.c **** 	packet_ptr += topic_lt;
 280              		.loc 1 116 0
 281 0164 FFF7FEFF 		bl	memcpy
 282              	.LVL36:
 118:../source/nbiot_func.c **** 
 119:../source/nbiot_func.c **** 	memmove(udpMessage + packet_ptr, jsonMessage, length);
 283              		.loc 1 119 0
 284 0168 3246     		mov	r2, r6
 285 016a 5946     		mov	r1, fp
 286 016c 04EB0A00 		add	r0, r4, r10
 287 0170 FFF7FEFF 		bl	memcpy
 288              	.LVL37:
 120:../source/nbiot_func.c **** 	packet_ptr += length;
 289              		.loc 1 120 0
 290 0174 D044     		add	r8, r8, r10
 121:../source/nbiot_func.c **** 
 122:../source/nbiot_func.c **** 	uint8_t packet_len = packet_ptr;
 123:../source/nbiot_func.c **** 
 124:../source/nbiot_func.c **** 	char *messagePtr = mqttMessage;
 125:../source/nbiot_func.c **** 
 126:../source/nbiot_func.c **** 	for (packet_ptr = 0; packet_ptr < packet_len; packet_ptr++) //print the packet as hex dump for deb
 127:../source/nbiot_func.c **** 	{
 128:../source/nbiot_func.c **** 
 129:../source/nbiot_func.c **** 		messagePtr += sprintf(messagePtr,"%02x", (uint8_t)udpMessage[packet_ptr]);
 291              		.loc 1 129 0
 292 0176 144D     		ldr	r5, .L4+36
 120:../source/nbiot_func.c **** 	packet_ptr += length;
 293              		.loc 1 120 0
 294 0178 5FFA88F8 		uxtb	r8, r8
 295              	.LVL38:
 296              	.L2:
 126:../source/nbiot_func.c **** 	{
 297              		.loc 1 126 0 discriminator 1
 298 017c FBB2     		uxtb	r3, r7
 299 017e 9845     		cmp	r8, r3
 300 0180 07D8     		bhi	.L3
 130:../source/nbiot_func.c **** 
 131:../source/nbiot_func.c **** 		//if ((packet_ptr + 1) > 0 && ((packet_ptr + 1) % 15 == 0))
 132:../source/nbiot_func.c **** 			//printf("\n"); //this just changes line after 16 bytes printed
 133:../source/nbiot_func.c **** 
 134:../source/nbiot_func.c **** 	}
 135:../source/nbiot_func.c **** 
 136:../source/nbiot_func.c **** 	printf("packet length %d\r\n",packet_len);
 301              		.loc 1 136 0
 302 0182 4146     		mov	r1, r8
 303 0184 1148     		ldr	r0, .L4+40
 304 0186 FFF7FEFF 		bl	printf
 305              	.LVL39:
 137:../source/nbiot_func.c **** 
 138:../source/nbiot_func.c **** 	return packet_len;
 139:../source/nbiot_func.c **** }
 306              		.loc 1 139 0
 307 018a 4046     		mov	r0, r8
 308 018c 5DB0     		add	sp, sp, #372
 309              		.cfi_remember_state
 310              		.cfi_def_cfa_offset 36
 311              		@ sp needed
 312 018e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 313              	.LVL40:
 314              	.L3:
 315              		.cfi_restore_state
 129:../source/nbiot_func.c **** 
 316              		.loc 1 129 0 discriminator 3
 317 0192 E25D     		ldrb	r2, [r4, r7]	@ zero_extendqisi2
 318 0194 4846     		mov	r0, r9
 319 0196 2946     		mov	r1, r5
 320 0198 FFF7FEFF 		bl	sprintf
 321              	.LVL41:
 322 019c 0137     		adds	r7, r7, #1
 323              	.LVL42:
 324 019e 8144     		add	r9, r9, r0
 325              	.LVL43:
 326 01a0 ECE7     		b	.L2
 327              	.L5:
 328 01a2 00BF     		.align	2
 329              	.L4:
 330 01a4 00000000 		.word	.LANCHOR0
 331 01a8 00000000 		.word	.LANCHOR1
 332 01ac 00000000 		.word	.LANCHOR2
 333 01b0 00000000 		.word	.LANCHOR3
 334 01b4 00000000 		.word	.LC0
 335 01b8 20000000 		.word	.LC1
 336 01bc 32000000 		.word	.LC2
 337 01c0 45000000 		.word	.LC3
 338 01c4 5A000000 		.word	.LC4
 339 01c8 72000000 		.word	.LC5
 340 01cc 77000000 		.word	.LC6
 341 01d0 00000000 		.word	.LANCHOR4
 342              		.cfi_endproc
 343              	.LFE1:
 345              		.section	.text.assemblePacket,"ax",%progbits
 346              		.align	1
 347              		.global	assemblePacket
 348              		.syntax unified
 349              		.thumb
 350              		.thumb_func
 351              		.fpu fpv4-sp-d16
 353              	assemblePacket:
 354              	.LFB2:
 140:../source/nbiot_func.c **** 
 141:../source/nbiot_func.c **** void assemblePacket(reindeerData_t *reindeerData, char *udpMessage)
 142:../source/nbiot_func.c **** {
 355              		.loc 1 142 0
 356              		.cfi_startproc
 357              		@ args = 0, pretend = 0, frame = 0
 358              		@ frame_needed = 0, uses_anonymous_args = 0
 359              	.LVL44:
 360 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 361              		.cfi_def_cfa_offset 24
 362              		.cfi_offset 3, -24
 363              		.cfi_offset 4, -20
 364              		.cfi_offset 5, -16
 365              		.cfi_offset 6, -12
 366              		.cfi_offset 7, -8
 367              		.cfi_offset 14, -4
 143:../source/nbiot_func.c **** 
 144:../source/nbiot_func.c **** 	int length = 0;
 145:../source/nbiot_func.c **** 
 146:../source/nbiot_func.c **** 	static char jsonMessage[150];
 147:../source/nbiot_func.c **** 
 148:../source/nbiot_func.c **** 	length += sprintf(jsonMessage, "{\r\n\r\n    \"serialnumber\":\"%s\",\r\n",
 368              		.loc 1 148 0
 369 0002 264D     		ldr	r5, .L9
 142:../source/nbiot_func.c **** 
 370              		.loc 1 142 0
 371 0004 0746     		mov	r7, r0
 372 0006 0E46     		mov	r6, r1
 373              		.loc 1 148 0
 374 0008 0246     		mov	r2, r0
 375 000a 2549     		ldr	r1, .L9+4
 376              	.LVL45:
 377 000c 2846     		mov	r0, r5
 378              	.LVL46:
 379 000e FFF7FEFF 		bl	sprintf
 380              	.LVL47:
 149:../source/nbiot_func.c **** 			reindeerData->serialNum);
 150:../source/nbiot_func.c **** 	length += sprintf(jsonMessage + length, "    \"lat\":\"%s\",\r\n",
 381              		.loc 1 150 0
 382 0012 BA1D     		adds	r2, r7, #6
 148:../source/nbiot_func.c **** 			reindeerData->serialNum);
 383              		.loc 1 148 0
 384 0014 0446     		mov	r4, r0
 385              	.LVL48:
 386              		.loc 1 150 0
 387 0016 2349     		ldr	r1, .L9+8
 388 0018 2818     		adds	r0, r5, r0
 389              	.LVL49:
 390 001a FFF7FEFF 		bl	sprintf
 391              	.LVL50:
 392 001e 0444     		add	r4, r4, r0
 393              	.LVL51:
 151:../source/nbiot_func.c **** 			reindeerData->latitude);
 152:../source/nbiot_func.c **** 	length += sprintf(jsonMessage + length, "    \"long\":\"%s\",\r\n",
 394              		.loc 1 152 0
 395 0020 07F11202 		add	r2, r7, #18
 396 0024 2049     		ldr	r1, .L9+12
 397 0026 2819     		adds	r0, r5, r4
 398 0028 FFF7FEFF 		bl	sprintf
 399              	.LVL52:
 400 002c 0444     		add	r4, r4, r0
 401              	.LVL53:
 153:../source/nbiot_func.c **** 			reindeerData->longitude);
 154:../source/nbiot_func.c **** 	length += sprintf(jsonMessage + length, "    \"status\":\"%s\",\r\n",
 402              		.loc 1 154 0
 403 002e 07F11E02 		add	r2, r7, #30
 404 0032 1E49     		ldr	r1, .L9+16
 405 0034 2819     		adds	r0, r5, r4
 406 0036 FFF7FEFF 		bl	sprintf
 407              	.LVL54:
 408 003a 0444     		add	r4, r4, r0
 409              	.LVL55:
 155:../source/nbiot_func.c **** 			reindeerData->dead);
 156:../source/nbiot_func.c **** 	length += sprintf(jsonMessage + length, "    \"battery\":\"%d\"\r\n\r\n}",
 410              		.loc 1 156 0
 411 003c 97F82420 		ldrb	r2, [r7, #36]	@ zero_extendqisi2
 412 0040 1B49     		ldr	r1, .L9+20
 413 0042 2819     		adds	r0, r5, r4
 414 0044 FFF7FEFF 		bl	sprintf
 415              	.LVL56:
 416 0048 0746     		mov	r7, r0
 417              	.LVL57:
 157:../source/nbiot_func.c **** 			reindeerData->batteryLevel);
 158:../source/nbiot_func.c **** 
 159:../source/nbiot_func.c **** 	printf(jsonMessage);
 418              		.loc 1 159 0
 419 004a 2846     		mov	r0, r5
 420              	.LVL58:
 421 004c FFF7FEFF 		bl	printf
 422              	.LVL59:
 160:../source/nbiot_func.c **** 
 161:../source/nbiot_func.c **** 	//strcpy(udpMessage,postHeader);
 162:../source/nbiot_func.c **** 
 163:../source/nbiot_func.c **** 	int udpLength = sprintf(udpMessage, postHeader, length);
 423              		.loc 1 163 0
 424 0050 E219     		adds	r2, r4, r7
 425              	.LVL60:
 426 0052 1849     		ldr	r1, .L9+24
 427              	.LBB2:
 164:../source/nbiot_func.c **** 
 165:../source/nbiot_func.c **** 	strcpy(udpMessage + udpLength, jsonMessage);
 166:../source/nbiot_func.c **** 
 167:../source/nbiot_func.c **** 	printf("%s\r\n", udpMessage);
 168:../source/nbiot_func.c **** 
 169:../source/nbiot_func.c **** 	udpLength = strlen(udpMessage);
 170:../source/nbiot_func.c **** 
 171:../source/nbiot_func.c **** 	printf("length of udp msg %d \r\nPrinting UDP message in hex\r\n",
 172:../source/nbiot_func.c **** 			udpLength);
 173:../source/nbiot_func.c **** 
 174:../source/nbiot_func.c **** 	for (uint16_t p = 0; p < udpLength; p++)
 175:../source/nbiot_func.c **** 	{
 176:../source/nbiot_func.c **** 
 177:../source/nbiot_func.c **** 		printf("%02x", udpMessage[p]);
 428              		.loc 1 177 0
 429 0054 184F     		ldr	r7, .L9+28
 430              	.LBE2:
 163:../source/nbiot_func.c **** 
 431              		.loc 1 163 0
 432 0056 3046     		mov	r0, r6
 433 0058 FFF7FEFF 		bl	sprintf
 434              	.LVL61:
 165:../source/nbiot_func.c **** 
 435              		.loc 1 165 0
 436 005c 2946     		mov	r1, r5
 437 005e 3044     		add	r0, r0, r6
 438              	.LVL62:
 439 0060 FFF7FEFF 		bl	strcpy
 440              	.LVL63:
 167:../source/nbiot_func.c **** 
 441              		.loc 1 167 0
 442 0064 3146     		mov	r1, r6
 443 0066 1548     		ldr	r0, .L9+32
 444 0068 FFF7FEFF 		bl	printf
 445              	.LVL64:
 169:../source/nbiot_func.c **** 
 446              		.loc 1 169 0
 447 006c 3046     		mov	r0, r6
 448 006e FFF7FEFF 		bl	strlen
 449              	.LVL65:
 171:../source/nbiot_func.c **** 			udpLength);
 450              		.loc 1 171 0
 451 0072 0146     		mov	r1, r0
 169:../source/nbiot_func.c **** 
 452              		.loc 1 169 0
 453 0074 0446     		mov	r4, r0
 454              	.LVL66:
 171:../source/nbiot_func.c **** 			udpLength);
 455              		.loc 1 171 0
 456 0076 1248     		ldr	r0, .L9+36
 457              	.LVL67:
 458 0078 FFF7FEFF 		bl	printf
 459              	.LVL68:
 460              	.LBB3:
 174:../source/nbiot_func.c **** 	{
 461              		.loc 1 174 0
 462 007c 0023     		movs	r3, #0
 463              	.LVL69:
 464              	.L7:
 465 007e 5D1C     		adds	r5, r3, #1
 174:../source/nbiot_func.c **** 	{
 466              		.loc 1 174 0 is_stmt 0 discriminator 1
 467 0080 9BB2     		uxth	r3, r3
 468 0082 9C42     		cmp	r4, r3
 469 0084 04DC     		bgt	.L8
 470              	.LBE3:
 178:../source/nbiot_func.c **** 	}
 179:../source/nbiot_func.c **** 
 180:../source/nbiot_func.c **** 	printf("\r\n");
 471              		.loc 1 180 0 is_stmt 1
 472 0086 0F48     		ldr	r0, .L9+40
 181:../source/nbiot_func.c **** 
 182:../source/nbiot_func.c **** }
 473              		.loc 1 182 0
 474 0088 BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 475              		.cfi_remember_state
 476              		.cfi_restore 14
 477              		.cfi_restore 7
 478              		.cfi_restore 6
 479              		.cfi_restore 5
 480              		.cfi_restore 4
 481              		.cfi_restore 3
 482              		.cfi_def_cfa_offset 0
 483              	.LVL70:
 180:../source/nbiot_func.c **** 
 484              		.loc 1 180 0
 485 008c FFF7FEBF 		b	puts
 486              	.LVL71:
 487              	.L8:
 488              		.cfi_restore_state
 489              	.LBB4:
 177:../source/nbiot_func.c **** 	}
 490              		.loc 1 177 0 discriminator 3
 491 0090 F156     		ldrsb	r1, [r6, r3]
 492 0092 3846     		mov	r0, r7
 493 0094 FFF7FEFF 		bl	printf
 494              	.LVL72:
 495 0098 2B46     		mov	r3, r5
 496 009a F0E7     		b	.L7
 497              	.L10:
 498              		.align	2
 499              	.L9:
 500 009c 00000000 		.word	.LANCHOR5
 501 00a0 00000000 		.word	.LC0
 502 00a4 20000000 		.word	.LC1
 503 00a8 32000000 		.word	.LC2
 504 00ac 45000000 		.word	.LC3
 505 00b0 5A000000 		.word	.LC4
 506 00b4 00000000 		.word	.LANCHOR6
 507 00b8 72000000 		.word	.LC5
 508 00bc 00000000 		.word	.LC7
 509 00c0 05000000 		.word	.LC8
 510 00c4 3A000000 		.word	.LC9
 511              	.LBE4:
 512              		.cfi_endproc
 513              	.LFE2:
 515              		.section	.text.NB_received_data,"ax",%progbits
 516              		.align	1
 517              		.global	NB_received_data
 518              		.syntax unified
 519              		.thumb
 520              		.thumb_func
 521              		.fpu fpv4-sp-d16
 523              	NB_received_data:
 524              	.LFB3:
 183:../source/nbiot_func.c **** 
 184:../source/nbiot_func.c **** void NB_received_data(){
 525              		.loc 1 184 0
 526              		.cfi_startproc
 527              		@ args = 0, pretend = 0, frame = 0
 528              		@ frame_needed = 0, uses_anonymous_args = 0
 529              	.LVL73:
 530 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 531              		.cfi_def_cfa_offset 32
 532              		.cfi_offset 3, -32
 533              		.cfi_offset 4, -28
 534              		.cfi_offset 5, -24
 535              		.cfi_offset 6, -20
 536              		.cfi_offset 7, -16
 537              		.cfi_offset 8, -12
 538              		.cfi_offset 9, -8
 539              		.cfi_offset 14, -4
 185:../source/nbiot_func.c **** 
 186:../source/nbiot_func.c **** 	uint32_t time_limit = 1000000;
 187:../source/nbiot_func.c **** 
 188:../source/nbiot_func.c **** 	UART3_bufPtr = 0;
 540              		.loc 1 188 0
 541 0004 1A4E     		ldr	r6, .L20
 189:../source/nbiot_func.c **** 	memset(UART3_recBuf, 0, strlen(UART3_recBuf));
 542              		.loc 1 189 0
 543 0006 1B48     		ldr	r0, .L20+4
 190:../source/nbiot_func.c **** 
 191:../source/nbiot_func.c **** while(time_limit--){
 544              		.loc 1 191 0
 545 0008 1B4F     		ldr	r7, .L20+8
 192:../source/nbiot_func.c **** 
 193:../source/nbiot_func.c **** 	if (UART3_strReady)
 546              		.loc 1 193 0
 547 000a 1C4C     		ldr	r4, .L20+12
 194:../source/nbiot_func.c **** 			{
 195:../source/nbiot_func.c **** 
 196:../source/nbiot_func.c **** 			if(strstr(UART3_recBuf,"NSONMI") != NULL) //if received buffer contains expected answer
 548              		.loc 1 196 0
 549 000c DFF87480 		ldr	r8, .L20+20
 197:../source/nbiot_func.c **** 				{
 198:../source/nbiot_func.c **** 					printf(UART3_recBuf);
 199:../source/nbiot_func.c **** 					printf("received\r\n");
 200:../source/nbiot_func.c **** 					break;
 201:../source/nbiot_func.c **** 				}
 202:../source/nbiot_func.c **** 				else if (strstr(UART3_recBuf, "ERROR") != NULL)
 550              		.loc 1 202 0
 551 0010 DFF87490 		ldr	r9, .L20+24
 188:../source/nbiot_func.c **** 	memset(UART3_recBuf, 0, strlen(UART3_recBuf));
 552              		.loc 1 188 0
 553 0014 0025     		movs	r5, #0
 554 0016 3570     		strb	r5, [r6]
 189:../source/nbiot_func.c **** 
 555              		.loc 1 189 0
 556 0018 FFF7FEFF 		bl	strlen
 557              	.LVL74:
 558 001c 2946     		mov	r1, r5
 559 001e 0246     		mov	r2, r0
 560 0020 1448     		ldr	r0, .L20+4
 196:../source/nbiot_func.c **** 				{
 561              		.loc 1 196 0
 562 0022 144D     		ldr	r5, .L20+4
 189:../source/nbiot_func.c **** 
 563              		.loc 1 189 0
 564 0024 FFF7FEFF 		bl	memset
 565              	.LVL75:
 566              	.L12:
 191:../source/nbiot_func.c **** 
 567              		.loc 1 191 0
 568 0028 013F     		subs	r7, r7, #1
 569              	.LVL76:
 570 002a 0DD0     		beq	.L15
 571              	.LVL77:
 193:../source/nbiot_func.c **** 			{
 572              		.loc 1 193 0
 573 002c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 574 002e 002B     		cmp	r3, #0
 575 0030 FAD0     		beq	.L12
 196:../source/nbiot_func.c **** 				{
 576              		.loc 1 196 0
 577 0032 4146     		mov	r1, r8
 578 0034 2846     		mov	r0, r5
 579 0036 FFF7FEFF 		bl	strstr
 580              	.LVL78:
 581 003a 88B1     		cbz	r0, .L14
 198:../source/nbiot_func.c **** 					printf("received\r\n");
 582              		.loc 1 198 0
 583 003c 0D48     		ldr	r0, .L20+4
 584 003e FFF7FEFF 		bl	printf
 585              	.LVL79:
 199:../source/nbiot_func.c **** 					break;
 586              		.loc 1 199 0
 587 0042 0F48     		ldr	r0, .L20+16
 588 0044 FFF7FEFF 		bl	puts
 589              	.LVL80:
 590              	.L15:
 203:../source/nbiot_func.c **** 				{
 204:../source/nbiot_func.c **** 
 205:../source/nbiot_func.c **** 					break;
 206:../source/nbiot_func.c **** 				}
 207:../source/nbiot_func.c **** 				UART3_strReady = 0;
 208:../source/nbiot_func.c **** 			}
 209:../source/nbiot_func.c **** }
 210:../source/nbiot_func.c **** 	UART3_bufPtr = 0;
 591              		.loc 1 210 0
 592 0048 0024     		movs	r4, #0
 211:../source/nbiot_func.c **** 	memset(UART3_recBuf, 0, strlen(UART3_recBuf));
 593              		.loc 1 211 0
 594 004a 0A48     		ldr	r0, .L20+4
 210:../source/nbiot_func.c **** 	memset(UART3_recBuf, 0, strlen(UART3_recBuf));
 595              		.loc 1 210 0
 596 004c 3470     		strb	r4, [r6]
 597              		.loc 1 211 0
 598 004e FFF7FEFF 		bl	strlen
 599              	.LVL81:
 600 0052 2146     		mov	r1, r4
 601 0054 0246     		mov	r2, r0
 212:../source/nbiot_func.c **** }
 602              		.loc 1 212 0
 603 0056 BDE8F843 		pop	{r3, r4, r5, r6, r7, r8, r9, lr}
 604              		.cfi_remember_state
 605              		.cfi_restore 14
 606              		.cfi_restore 9
 607              		.cfi_restore 8
 608              		.cfi_restore 7
 609              		.cfi_restore 6
 610              		.cfi_restore 5
 611              		.cfi_restore 4
 612              		.cfi_restore 3
 613              		.cfi_def_cfa_offset 0
 211:../source/nbiot_func.c **** 	memset(UART3_recBuf, 0, strlen(UART3_recBuf));
 614              		.loc 1 211 0
 615 005a 0648     		ldr	r0, .L20+4
 616 005c FFF7FEBF 		b	memset
 617              	.LVL82:
 618              	.L14:
 619              		.cfi_restore_state
 202:../source/nbiot_func.c **** 				{
 620              		.loc 1 202 0
 621 0060 4946     		mov	r1, r9
 622 0062 2846     		mov	r0, r5
 623 0064 FFF7FEFF 		bl	strstr
 624              	.LVL83:
 625 0068 0028     		cmp	r0, #0
 626 006a EDD1     		bne	.L15
 207:../source/nbiot_func.c **** 			}
 627              		.loc 1 207 0
 628 006c 2070     		strb	r0, [r4]
 629 006e DBE7     		b	.L12
 630              	.L21:
 631              		.align	2
 632              	.L20:
 633 0070 00000000 		.word	UART3_bufPtr
 634 0074 00000000 		.word	UART3_recBuf
 635 0078 41420F00 		.word	1000001
 636 007c 00000000 		.word	UART3_strReady
 637 0080 07000000 		.word	.LC11
 638 0084 00000000 		.word	.LC10
 639 0088 11000000 		.word	.LC12
 640              		.cfi_endproc
 641              	.LFE3:
 643              		.section	.text.NB_reboot,"ax",%progbits
 644              		.align	1
 645              		.global	NB_reboot
 646              		.syntax unified
 647              		.thumb
 648              		.thumb_func
 649              		.fpu fpv4-sp-d16
 651              	NB_reboot:
 652              	.LFB5:
 213:../source/nbiot_func.c **** 
 214:../source/nbiot_func.c **** void NB_create_pdp_send(char *mqttMessage, uint8_t msgLen){
 215:../source/nbiot_func.c **** 
 216:../source/nbiot_func.c **** 	uint8_t reSend_msg = 0;
 217:../source/nbiot_func.c **** 
 218:../source/nbiot_func.c **** 	 NB_reboot();
 219:../source/nbiot_func.c **** 	  NB_setPin();
 220:../source/nbiot_func.c **** 
 221:../source/nbiot_func.c **** 	  delay_ms(1000);  //viivettä pitää olla
 222:../source/nbiot_func.c **** 	  NB_cops_register();
 223:../source/nbiot_func.c **** 
 224:../source/nbiot_func.c **** 	  NB_network_status();
 225:../source/nbiot_func.c **** 	  delay_ms(1000);
 226:../source/nbiot_func.c **** 
 227:../source/nbiot_func.c **** 	  NB_define_pdp();
 228:../source/nbiot_func.c **** 	  delay_ms(1000);
 229:../source/nbiot_func.c **** 
 230:../source/nbiot_func.c **** 	  do{
 231:../source/nbiot_func.c **** 
 232:../source/nbiot_func.c **** 	 NB_cops_deRegister();
 233:../source/nbiot_func.c **** 	  delay_ms(2200);
 234:../source/nbiot_func.c **** 
 235:../source/nbiot_func.c **** 	  NB_active_pdp();
 236:../source/nbiot_func.c **** 	  delay_ms(3000);
 237:../source/nbiot_func.c **** 
 238:../source/nbiot_func.c **** 	  if(reSend_msg == 1){
 239:../source/nbiot_func.c **** 	  NB_network_status();
 240:../source/nbiot_func.c **** 	  delay_ms(1000);
 241:../source/nbiot_func.c **** 	  }
 242:../source/nbiot_func.c **** 	  NB_show_ip();
 243:../source/nbiot_func.c **** 	  delay_ms(1000);
 244:../source/nbiot_func.c **** 
 245:../source/nbiot_func.c **** 	 NB_create_socket();
 246:../source/nbiot_func.c **** 	  delay_ms(1000);
 247:../source/nbiot_func.c **** 
 248:../source/nbiot_func.c **** 	  reSend_msg = NB_send_msg(mqttMessage, msgLen);
 249:../source/nbiot_func.c **** 
 250:../source/nbiot_func.c **** 	} while(reSend_msg == 1);
 251:../source/nbiot_func.c **** 
 252:../source/nbiot_func.c **** 	  //NB_received_data();
 253:../source/nbiot_func.c **** 	  delay_ms(4000);
 254:../source/nbiot_func.c **** 	  NB_read_msg();
 255:../source/nbiot_func.c **** }
 256:../source/nbiot_func.c **** 
 257:../source/nbiot_func.c **** 
 258:../source/nbiot_func.c **** 
 259:../source/nbiot_func.c **** void NB_reboot() {
 653              		.loc 1 259 0
 654              		.cfi_startproc
 655              		@ args = 0, pretend = 0, frame = 0
 656              		@ frame_needed = 0, uses_anonymous_args = 0
 657 0000 08B5     		push	{r3, lr}
 658              		.cfi_def_cfa_offset 8
 659              		.cfi_offset 3, -8
 660              		.cfi_offset 14, -4
 260:../source/nbiot_func.c **** 
 261:../source/nbiot_func.c **** 	res = AT_send(AT_NRB, "", "+UFOTAS");
 661              		.loc 1 261 0
 662 0002 0B4B     		ldr	r3, .L27
 663 0004 0B4A     		ldr	r2, .L27+4
 664 0006 1868     		ldr	r0, [r3]
 665 0008 0B49     		ldr	r1, .L27+8
 666 000a FFF7FEFF 		bl	AT_send
 667              	.LVL84:
 668 000e 0B4B     		ldr	r3, .L27+12
 669 0010 1870     		strb	r0, [r3]
 262:../source/nbiot_func.c **** 	if (res == 0) {
 670              		.loc 1 262 0
 671 0012 20B9     		cbnz	r0, .L23
 263:../source/nbiot_func.c **** 		printf("rebooted\r\n");
 672              		.loc 1 263 0
 673 0014 0A48     		ldr	r0, .L27+16
 674              	.L26:
 264:../source/nbiot_func.c **** 	} else if (res == 1) {
 265:../source/nbiot_func.c **** 		printf("error\r\n");
 266:../source/nbiot_func.c **** 	} else if (res == 2) {
 267:../source/nbiot_func.c **** 		printf("timeout error\r\n");
 268:../source/nbiot_func.c **** 	}
 269:../source/nbiot_func.c **** 
 270:../source/nbiot_func.c **** }
 675              		.loc 1 270 0
 676 0016 BDE80840 		pop	{r3, lr}
 677              		.cfi_remember_state
 678              		.cfi_restore 14
 679              		.cfi_restore 3
 680              		.cfi_def_cfa_offset 0
 267:../source/nbiot_func.c **** 	}
 681              		.loc 1 267 0
 682 001a FFF7FEBF 		b	puts
 683              	.LVL85:
 684              	.L23:
 685              		.cfi_restore_state
 264:../source/nbiot_func.c **** 	} else if (res == 1) {
 686              		.loc 1 264 0
 687 001e 0128     		cmp	r0, #1
 688 0020 01D1     		bne	.L24
 265:../source/nbiot_func.c **** 	} else if (res == 2) {
 689              		.loc 1 265 0
 690 0022 0848     		ldr	r0, .L27+20
 691 0024 F7E7     		b	.L26
 692              	.L24:
 266:../source/nbiot_func.c **** 		printf("timeout error\r\n");
 693              		.loc 1 266 0
 694 0026 0228     		cmp	r0, #2
 695 0028 01D1     		bne	.L22
 267:../source/nbiot_func.c **** 	}
 696              		.loc 1 267 0
 697 002a 0748     		ldr	r0, .L27+24
 698 002c F3E7     		b	.L26
 699              	.L22:
 700 002e 08BD     		pop	{r3, pc}
 701              	.L28:
 702              		.align	2
 703              	.L27:
 704 0030 00000000 		.word	AT_NRB
 705 0034 00000000 		.word	.LC13
 706 0038 08000000 		.word	.LC14
 707 003c 00000000 		.word	res
 708 0040 09000000 		.word	.LC15
 709 0044 13000000 		.word	.LC16
 710 0048 1A000000 		.word	.LC17
 711              		.cfi_endproc
 712              	.LFE5:
 714              		.section	.text.NB_setPin,"ax",%progbits
 715              		.align	1
 716              		.global	NB_setPin
 717              		.syntax unified
 718              		.thumb
 719              		.thumb_func
 720              		.fpu fpv4-sp-d16
 722              	NB_setPin:
 723              	.LFB6:
 271:../source/nbiot_func.c **** void NB_setPin() {
 724              		.loc 1 271 0
 725              		.cfi_startproc
 726              		@ args = 0, pretend = 0, frame = 0
 727              		@ frame_needed = 0, uses_anonymous_args = 0
 728 0000 08B5     		push	{r3, lr}
 729              		.cfi_def_cfa_offset 8
 730              		.cfi_offset 3, -8
 731              		.cfi_offset 14, -4
 272:../source/nbiot_func.c **** 
 273:../source/nbiot_func.c **** 	res = AT_send(AT_NPIN, "", "+NPIN: \"OK\"");
 732              		.loc 1 273 0
 733 0002 094B     		ldr	r3, .L33
 734 0004 094A     		ldr	r2, .L33+4
 735 0006 1868     		ldr	r0, [r3]
 736 0008 0949     		ldr	r1, .L33+8
 737 000a FFF7FEFF 		bl	AT_send
 738              	.LVL86:
 739 000e 094B     		ldr	r3, .L33+12
 740 0010 1870     		strb	r0, [r3]
 274:../source/nbiot_func.c **** 	if (res == 0) {
 741              		.loc 1 274 0
 742 0012 20B9     		cbnz	r0, .L30
 275:../source/nbiot_func.c **** 		printf("ack\r\n");
 743              		.loc 1 275 0
 744 0014 0848     		ldr	r0, .L33+16
 745              	.L32:
 276:../source/nbiot_func.c **** 	} else if (res == 1) {
 277:../source/nbiot_func.c **** 		printf("error\r\n");
 278:../source/nbiot_func.c **** 	}
 279:../source/nbiot_func.c **** 
 280:../source/nbiot_func.c **** }
 746              		.loc 1 280 0
 747 0016 BDE80840 		pop	{r3, lr}
 748              		.cfi_remember_state
 749              		.cfi_restore 14
 750              		.cfi_restore 3
 751              		.cfi_def_cfa_offset 0
 277:../source/nbiot_func.c **** 	}
 752              		.loc 1 277 0
 753 001a FFF7FEBF 		b	puts
 754              	.LVL87:
 755              	.L30:
 756              		.cfi_restore_state
 276:../source/nbiot_func.c **** 	} else if (res == 1) {
 757              		.loc 1 276 0
 758 001e 0128     		cmp	r0, #1
 759 0020 01D1     		bne	.L29
 277:../source/nbiot_func.c **** 	}
 760              		.loc 1 277 0
 761 0022 0648     		ldr	r0, .L33+20
 762 0024 F7E7     		b	.L32
 763              	.L29:
 764 0026 08BD     		pop	{r3, pc}
 765              	.L34:
 766              		.align	2
 767              	.L33:
 768 0028 00000000 		.word	AT_NPIN
 769 002c 00000000 		.word	.LC18
 770 0030 08000000 		.word	.LC14
 771 0034 00000000 		.word	res
 772 0038 0C000000 		.word	.LC19
 773 003c 13000000 		.word	.LC16
 774              		.cfi_endproc
 775              	.LFE6:
 777              		.section	.text.NB_cops_register,"ax",%progbits
 778              		.align	1
 779              		.global	NB_cops_register
 780              		.syntax unified
 781              		.thumb
 782              		.thumb_func
 783              		.fpu fpv4-sp-d16
 785              	NB_cops_register:
 786              	.LFB7:
 281:../source/nbiot_func.c **** void NB_cops_register() {
 787              		.loc 1 281 0
 788              		.cfi_startproc
 789              		@ args = 0, pretend = 0, frame = 0
 790              		@ frame_needed = 0, uses_anonymous_args = 0
 791 0000 08B5     		push	{r3, lr}
 792              		.cfi_def_cfa_offset 8
 793              		.cfi_offset 3, -8
 794              		.cfi_offset 14, -4
 282:../source/nbiot_func.c **** 
 283:../source/nbiot_func.c **** 	res = AT_send(AT_COPS, "=0", "OK");   //0 Register to network
 795              		.loc 1 283 0
 796 0002 094B     		ldr	r3, .L39
 797 0004 094A     		ldr	r2, .L39+4
 798 0006 1868     		ldr	r0, [r3]
 799 0008 0949     		ldr	r1, .L39+8
 800 000a FFF7FEFF 		bl	AT_send
 801              	.LVL88:
 802 000e 094B     		ldr	r3, .L39+12
 803 0010 1870     		strb	r0, [r3]
 284:../source/nbiot_func.c **** 	if (res == 0) {
 804              		.loc 1 284 0
 805 0012 20B9     		cbnz	r0, .L36
 285:../source/nbiot_func.c **** 		printf("Registered\r\n");
 806              		.loc 1 285 0
 807 0014 0848     		ldr	r0, .L39+16
 808              	.L38:
 286:../source/nbiot_func.c **** 	} else if (res == 1) {
 287:../source/nbiot_func.c **** 		printf("error\r\n");
 288:../source/nbiot_func.c **** 	}
 289:../source/nbiot_func.c **** }
 809              		.loc 1 289 0
 810 0016 BDE80840 		pop	{r3, lr}
 811              		.cfi_remember_state
 812              		.cfi_restore 14
 813              		.cfi_restore 3
 814              		.cfi_def_cfa_offset 0
 287:../source/nbiot_func.c **** 	}
 815              		.loc 1 287 0
 816 001a FFF7FEBF 		b	puts
 817              	.LVL89:
 818              	.L36:
 819              		.cfi_restore_state
 286:../source/nbiot_func.c **** 	} else if (res == 1) {
 820              		.loc 1 286 0
 821 001e 0128     		cmp	r0, #1
 822 0020 01D1     		bne	.L35
 287:../source/nbiot_func.c **** 	}
 823              		.loc 1 287 0
 824 0022 0648     		ldr	r0, .L39+20
 825 0024 F7E7     		b	.L38
 826              	.L35:
 827 0026 08BD     		pop	{r3, pc}
 828              	.L40:
 829              		.align	2
 830              	.L39:
 831 0028 00000000 		.word	AT_COPS
 832 002c 00000000 		.word	.LC20
 833 0030 03000000 		.word	.LC21
 834 0034 00000000 		.word	res
 835 0038 06000000 		.word	.LC22
 836 003c 13000000 		.word	.LC16
 837              		.cfi_endproc
 838              	.LFE7:
 840              		.section	.text.NB_cops_deRegister,"ax",%progbits
 841              		.align	1
 842              		.global	NB_cops_deRegister
 843              		.syntax unified
 844              		.thumb
 845              		.thumb_func
 846              		.fpu fpv4-sp-d16
 848              	NB_cops_deRegister:
 849              	.LFB8:
 290:../source/nbiot_func.c **** void NB_cops_deRegister() {
 850              		.loc 1 290 0
 851              		.cfi_startproc
 852              		@ args = 0, pretend = 0, frame = 0
 853              		@ frame_needed = 0, uses_anonymous_args = 0
 854 0000 08B5     		push	{r3, lr}
 855              		.cfi_def_cfa_offset 8
 856              		.cfi_offset 3, -8
 857              		.cfi_offset 14, -4
 291:../source/nbiot_func.c **** 
 292:../source/nbiot_func.c **** 	res = AT_send(AT_COPS, "=2", "OK");   //2 De-Register from network
 858              		.loc 1 292 0
 859 0002 094B     		ldr	r3, .L45
 860 0004 094A     		ldr	r2, .L45+4
 861 0006 1868     		ldr	r0, [r3]
 862 0008 0949     		ldr	r1, .L45+8
 863 000a FFF7FEFF 		bl	AT_send
 864              	.LVL90:
 865 000e 094B     		ldr	r3, .L45+12
 866 0010 1870     		strb	r0, [r3]
 293:../source/nbiot_func.c **** 	if (res == 0) {
 867              		.loc 1 293 0
 868 0012 20B9     		cbnz	r0, .L42
 294:../source/nbiot_func.c **** 		printf("De-registered\r\n");
 869              		.loc 1 294 0
 870 0014 0848     		ldr	r0, .L45+16
 871              	.L44:
 295:../source/nbiot_func.c **** 	} else if (res == 1) {
 296:../source/nbiot_func.c **** 		printf("error\r\n");
 297:../source/nbiot_func.c **** 	}
 298:../source/nbiot_func.c **** }
 872              		.loc 1 298 0
 873 0016 BDE80840 		pop	{r3, lr}
 874              		.cfi_remember_state
 875              		.cfi_restore 14
 876              		.cfi_restore 3
 877              		.cfi_def_cfa_offset 0
 296:../source/nbiot_func.c **** 	}
 878              		.loc 1 296 0
 879 001a FFF7FEBF 		b	puts
 880              	.LVL91:
 881              	.L42:
 882              		.cfi_restore_state
 295:../source/nbiot_func.c **** 	} else if (res == 1) {
 883              		.loc 1 295 0
 884 001e 0128     		cmp	r0, #1
 885 0020 01D1     		bne	.L41
 296:../source/nbiot_func.c **** 	}
 886              		.loc 1 296 0
 887 0022 0648     		ldr	r0, .L45+20
 888 0024 F7E7     		b	.L44
 889              	.L41:
 890 0026 08BD     		pop	{r3, pc}
 891              	.L46:
 892              		.align	2
 893              	.L45:
 894 0028 00000000 		.word	AT_COPS
 895 002c 00000000 		.word	.LC20
 896 0030 00000000 		.word	.LC23
 897 0034 00000000 		.word	res
 898 0038 03000000 		.word	.LC24
 899 003c 13000000 		.word	.LC16
 900              		.cfi_endproc
 901              	.LFE8:
 903              		.section	.text.NB_cops_readRegister,"ax",%progbits
 904              		.align	1
 905              		.global	NB_cops_readRegister
 906              		.syntax unified
 907              		.thumb
 908              		.thumb_func
 909              		.fpu fpv4-sp-d16
 911              	NB_cops_readRegister:
 912              	.LFB9:
 299:../source/nbiot_func.c **** void NB_cops_readRegister() {
 913              		.loc 1 299 0
 914              		.cfi_startproc
 915              		@ args = 0, pretend = 0, frame = 0
 916              		@ frame_needed = 0, uses_anonymous_args = 0
 917 0000 08B5     		push	{r3, lr}
 918              		.cfi_def_cfa_offset 8
 919              		.cfi_offset 3, -8
 920              		.cfi_offset 14, -4
 300:../source/nbiot_func.c **** 
 301:../source/nbiot_func.c **** 	res = AT_send(AT_COPS, "?", "OK");   //2 De-Register from network
 921              		.loc 1 301 0
 922 0002 094B     		ldr	r3, .L51
 923 0004 094A     		ldr	r2, .L51+4
 924 0006 1868     		ldr	r0, [r3]
 925 0008 0949     		ldr	r1, .L51+8
 926 000a FFF7FEFF 		bl	AT_send
 927              	.LVL92:
 928 000e 094B     		ldr	r3, .L51+12
 929 0010 1870     		strb	r0, [r3]
 302:../source/nbiot_func.c **** 	if (res == 0) {
 930              		.loc 1 302 0
 931 0012 20B9     		cbnz	r0, .L48
 303:../source/nbiot_func.c **** 		printf("readCOPS\r\n");
 932              		.loc 1 303 0
 933 0014 0848     		ldr	r0, .L51+16
 934              	.L50:
 304:../source/nbiot_func.c **** 	} else if (res == 1) {
 305:../source/nbiot_func.c **** 		printf("error\r\n");
 306:../source/nbiot_func.c **** 	}
 307:../source/nbiot_func.c **** }
 935              		.loc 1 307 0
 936 0016 BDE80840 		pop	{r3, lr}
 937              		.cfi_remember_state
 938              		.cfi_restore 14
 939              		.cfi_restore 3
 940              		.cfi_def_cfa_offset 0
 305:../source/nbiot_func.c **** 	}
 941              		.loc 1 305 0
 942 001a FFF7FEBF 		b	puts
 943              	.LVL93:
 944              	.L48:
 945              		.cfi_restore_state
 304:../source/nbiot_func.c **** 	} else if (res == 1) {
 946              		.loc 1 304 0
 947 001e 0128     		cmp	r0, #1
 948 0020 01D1     		bne	.L47
 305:../source/nbiot_func.c **** 	}
 949              		.loc 1 305 0
 950 0022 0648     		ldr	r0, .L51+20
 951 0024 F7E7     		b	.L50
 952              	.L47:
 953 0026 08BD     		pop	{r3, pc}
 954              	.L52:
 955              		.align	2
 956              	.L51:
 957 0028 00000000 		.word	AT_COPS
 958 002c 00000000 		.word	.LC20
 959 0030 00000000 		.word	.LC25
 960 0034 00000000 		.word	res
 961 0038 02000000 		.word	.LC26
 962 003c 13000000 		.word	.LC16
 963              		.cfi_endproc
 964              	.LFE9:
 966              		.section	.text.NB_network_status,"ax",%progbits
 967              		.align	1
 968              		.global	NB_network_status
 969              		.syntax unified
 970              		.thumb
 971              		.thumb_func
 972              		.fpu fpv4-sp-d16
 974              	NB_network_status:
 975              	.LFB10:
 308:../source/nbiot_func.c **** void NB_network_status() {
 976              		.loc 1 308 0
 977              		.cfi_startproc
 978              		@ args = 0, pretend = 0, frame = 0
 979              		@ frame_needed = 0, uses_anonymous_args = 0
 980 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 981              		.cfi_def_cfa_offset 24
 982              		.cfi_offset 3, -24
 983              		.cfi_offset 4, -20
 984              		.cfi_offset 5, -16
 985              		.cfi_offset 6, -12
 986              		.cfi_offset 7, -8
 987              		.cfi_offset 14, -4
 309:../source/nbiot_func.c **** 	res = 2;
 988              		.loc 1 309 0
 989 0002 0C4C     		ldr	r4, .L59
 310:../source/nbiot_func.c **** 	while (res != 0) {
 311:../source/nbiot_func.c **** 		res = AT_send(AT_CEREG, "", "+CEREG: 0,1");
 990              		.loc 1 311 0
 991 0004 0C4D     		ldr	r5, .L59+4
 992 0006 0D4E     		ldr	r6, .L59+8
 993 0008 0D4F     		ldr	r7, .L59+12
 309:../source/nbiot_func.c **** 	res = 2;
 994              		.loc 1 309 0
 995 000a 0223     		movs	r3, #2
 996 000c 2370     		strb	r3, [r4]
 997              	.L54:
 310:../source/nbiot_func.c **** 	while (res != 0) {
 998              		.loc 1 310 0
 999 000e 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1000 0010 03B9     		cbnz	r3, .L57
 312:../source/nbiot_func.c **** 		if (res == 0) {
 313:../source/nbiot_func.c **** 			printf("CEREG_OK\r\n");
 314:../source/nbiot_func.c **** 		} else if (res == 1) {
 315:../source/nbiot_func.c **** 			printf("error\r\n");
 316:../source/nbiot_func.c **** 		}
 317:../source/nbiot_func.c **** 	}
 318:../source/nbiot_func.c **** }
 1001              		.loc 1 318 0
 1002 0012 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1003              	.L57:
 311:../source/nbiot_func.c **** 		if (res == 0) {
 1004              		.loc 1 311 0
 1005 0014 3246     		mov	r2, r6
 1006 0016 3946     		mov	r1, r7
 1007 0018 2868     		ldr	r0, [r5]
 1008 001a FFF7FEFF 		bl	AT_send
 1009              	.LVL94:
 1010 001e 2070     		strb	r0, [r4]
 312:../source/nbiot_func.c **** 		if (res == 0) {
 1011              		.loc 1 312 0
 1012 0020 18B9     		cbnz	r0, .L55
 313:../source/nbiot_func.c **** 		} else if (res == 1) {
 1013              		.loc 1 313 0
 1014 0022 0848     		ldr	r0, .L59+16
 1015              	.L58:
 315:../source/nbiot_func.c **** 		}
 1016              		.loc 1 315 0
 1017 0024 FFF7FEFF 		bl	puts
 1018              	.LVL95:
 1019 0028 F1E7     		b	.L54
 1020              	.L55:
 314:../source/nbiot_func.c **** 			printf("error\r\n");
 1021              		.loc 1 314 0
 1022 002a 0128     		cmp	r0, #1
 1023 002c EFD1     		bne	.L54
 315:../source/nbiot_func.c **** 		}
 1024              		.loc 1 315 0
 1025 002e 0648     		ldr	r0, .L59+20
 1026 0030 F8E7     		b	.L58
 1027              	.L60:
 1028 0032 00BF     		.align	2
 1029              	.L59:
 1030 0034 00000000 		.word	res
 1031 0038 00000000 		.word	AT_CEREG
 1032 003c 00000000 		.word	.LC27
 1033 0040 08000000 		.word	.LC14
 1034 0044 0C000000 		.word	.LC28
 1035 0048 13000000 		.word	.LC16
 1036              		.cfi_endproc
 1037              	.LFE10:
 1039              		.section	.text.NB_define_pdp,"ax",%progbits
 1040              		.align	1
 1041              		.global	NB_define_pdp
 1042              		.syntax unified
 1043              		.thumb
 1044              		.thumb_func
 1045              		.fpu fpv4-sp-d16
 1047              	NB_define_pdp:
 1048              	.LFB11:
 319:../source/nbiot_func.c **** void NB_define_pdp() {
 1049              		.loc 1 319 0
 1050              		.cfi_startproc
 1051              		@ args = 0, pretend = 0, frame = 0
 1052              		@ frame_needed = 0, uses_anonymous_args = 0
 320:../source/nbiot_func.c **** 	res = AT_send(AT_CGDCONT, "", "OK");
 1053              		.loc 1 320 0
 1054 0000 0C4B     		ldr	r3, .L65
 1055 0002 0D4A     		ldr	r2, .L65+4
 1056 0004 1868     		ldr	r0, [r3]
 1057 0006 0D49     		ldr	r1, .L65+8
 319:../source/nbiot_func.c **** void NB_define_pdp() {
 1058              		.loc 1 319 0
 1059 0008 10B5     		push	{r4, lr}
 1060              		.cfi_def_cfa_offset 8
 1061              		.cfi_offset 4, -8
 1062              		.cfi_offset 14, -4
 1063              		.loc 1 320 0
 1064 000a FFF7FEFF 		bl	AT_send
 1065              	.LVL96:
 1066 000e 0C4C     		ldr	r4, .L65+12
 1067 0010 2070     		strb	r0, [r4]
 321:../source/nbiot_func.c **** 	delay_ms(1000);
 1068              		.loc 1 321 0
 1069 0012 4FF47A70 		mov	r0, #1000
 1070 0016 FFF7FEFF 		bl	delay_ms
 1071              	.LVL97:
 322:../source/nbiot_func.c **** 	if (res == 0) {
 1072              		.loc 1 322 0
 1073 001a 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1074 001c 23B9     		cbnz	r3, .L62
 323:../source/nbiot_func.c **** 		printf("PDP context 1 defined\r\n");
 1075              		.loc 1 323 0
 1076 001e 0948     		ldr	r0, .L65+16
 1077              	.L64:
 324:../source/nbiot_func.c **** 	} else if (res == 1) {
 325:../source/nbiot_func.c **** 		printf("error\r\n");
 326:../source/nbiot_func.c **** 	}
 327:../source/nbiot_func.c **** }
 1078              		.loc 1 327 0
 1079 0020 BDE81040 		pop	{r4, lr}
 1080              		.cfi_remember_state
 1081              		.cfi_restore 14
 1082              		.cfi_restore 4
 1083              		.cfi_def_cfa_offset 0
 325:../source/nbiot_func.c **** 	}
 1084              		.loc 1 325 0
 1085 0024 FFF7FEBF 		b	puts
 1086              	.LVL98:
 1087              	.L62:
 1088              		.cfi_restore_state
 324:../source/nbiot_func.c **** 	} else if (res == 1) {
 1089              		.loc 1 324 0
 1090 0028 012B     		cmp	r3, #1
 1091 002a 01D1     		bne	.L61
 325:../source/nbiot_func.c **** 	}
 1092              		.loc 1 325 0
 1093 002c 0648     		ldr	r0, .L65+20
 1094 002e F7E7     		b	.L64
 1095              	.L61:
 1096 0030 10BD     		pop	{r4, pc}
 1097              	.L66:
 1098 0032 00BF     		.align	2
 1099              	.L65:
 1100 0034 00000000 		.word	AT_CGDCONT
 1101 0038 00000000 		.word	.LC20
 1102 003c 08000000 		.word	.LC14
 1103 0040 00000000 		.word	res
 1104 0044 00000000 		.word	.LC29
 1105 0048 13000000 		.word	.LC16
 1106              		.cfi_endproc
 1107              	.LFE11:
 1109              		.section	.text.NB_active_pdp,"ax",%progbits
 1110              		.align	1
 1111              		.global	NB_active_pdp
 1112              		.syntax unified
 1113              		.thumb
 1114              		.thumb_func
 1115              		.fpu fpv4-sp-d16
 1117              	NB_active_pdp:
 1118              	.LFB12:
 328:../source/nbiot_func.c **** void NB_active_pdp() {
 1119              		.loc 1 328 0
 1120              		.cfi_startproc
 1121              		@ args = 0, pretend = 0, frame = 0
 1122              		@ frame_needed = 0, uses_anonymous_args = 0
 329:../source/nbiot_func.c **** 	res = AT_send(AT_CGACT, "=1,1", "OK");     //Active PDP context 1
 1123              		.loc 1 329 0
 1124 0000 0C4B     		ldr	r3, .L71
 1125 0002 0D4A     		ldr	r2, .L71+4
 1126 0004 1868     		ldr	r0, [r3]
 1127 0006 0D49     		ldr	r1, .L71+8
 328:../source/nbiot_func.c **** void NB_active_pdp() {
 1128              		.loc 1 328 0
 1129 0008 10B5     		push	{r4, lr}
 1130              		.cfi_def_cfa_offset 8
 1131              		.cfi_offset 4, -8
 1132              		.cfi_offset 14, -4
 1133              		.loc 1 329 0
 1134 000a FFF7FEFF 		bl	AT_send
 1135              	.LVL99:
 1136 000e 0C4C     		ldr	r4, .L71+12
 1137 0010 2070     		strb	r0, [r4]
 330:../source/nbiot_func.c **** 	delay_ms(1000);
 1138              		.loc 1 330 0
 1139 0012 4FF47A70 		mov	r0, #1000
 1140 0016 FFF7FEFF 		bl	delay_ms
 1141              	.LVL100:
 331:../source/nbiot_func.c **** 	if (res == 0) {
 1142              		.loc 1 331 0
 1143 001a 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1144 001c 23B9     		cbnz	r3, .L68
 332:../source/nbiot_func.c **** 		printf("PDP 1 activated\r\n");
 1145              		.loc 1 332 0
 1146 001e 0948     		ldr	r0, .L71+16
 1147              	.L70:
 333:../source/nbiot_func.c **** 	} else if (res == 1) {
 334:../source/nbiot_func.c **** 		printf("error\r\n");
 335:../source/nbiot_func.c **** 	}
 336:../source/nbiot_func.c **** }
 1148              		.loc 1 336 0
 1149 0020 BDE81040 		pop	{r4, lr}
 1150              		.cfi_remember_state
 1151              		.cfi_restore 14
 1152              		.cfi_restore 4
 1153              		.cfi_def_cfa_offset 0
 334:../source/nbiot_func.c **** 	}
 1154              		.loc 1 334 0
 1155 0024 FFF7FEBF 		b	puts
 1156              	.LVL101:
 1157              	.L68:
 1158              		.cfi_restore_state
 333:../source/nbiot_func.c **** 	} else if (res == 1) {
 1159              		.loc 1 333 0
 1160 0028 012B     		cmp	r3, #1
 1161 002a 01D1     		bne	.L67
 334:../source/nbiot_func.c **** 	}
 1162              		.loc 1 334 0
 1163 002c 0648     		ldr	r0, .L71+20
 1164 002e F7E7     		b	.L70
 1165              	.L67:
 1166 0030 10BD     		pop	{r4, pc}
 1167              	.L72:
 1168 0032 00BF     		.align	2
 1169              	.L71:
 1170 0034 00000000 		.word	AT_CGACT
 1171 0038 00000000 		.word	.LC20
 1172 003c 00000000 		.word	.LC30
 1173 0040 00000000 		.word	res
 1174 0044 05000000 		.word	.LC31
 1175 0048 13000000 		.word	.LC16
 1176              		.cfi_endproc
 1177              	.LFE12:
 1179              		.section	.text.NB_show_ip,"ax",%progbits
 1180              		.align	1
 1181              		.global	NB_show_ip
 1182              		.syntax unified
 1183              		.thumb
 1184              		.thumb_func
 1185              		.fpu fpv4-sp-d16
 1187              	NB_show_ip:
 1188              	.LFB13:
 337:../source/nbiot_func.c **** void NB_show_ip() {
 1189              		.loc 1 337 0
 1190              		.cfi_startproc
 1191              		@ args = 0, pretend = 0, frame = 0
 1192              		@ frame_needed = 0, uses_anonymous_args = 0
 1193 0000 08B5     		push	{r3, lr}
 1194              		.cfi_def_cfa_offset 8
 1195              		.cfi_offset 3, -8
 1196              		.cfi_offset 14, -4
 338:../source/nbiot_func.c **** 	res = AT_send(AT_CGPADDR, "", "OK");     //Show ip address
 1197              		.loc 1 338 0
 1198 0002 094B     		ldr	r3, .L77
 1199 0004 094A     		ldr	r2, .L77+4
 1200 0006 1868     		ldr	r0, [r3]
 1201 0008 0949     		ldr	r1, .L77+8
 1202 000a FFF7FEFF 		bl	AT_send
 1203              	.LVL102:
 1204 000e 094B     		ldr	r3, .L77+12
 1205 0010 1870     		strb	r0, [r3]
 339:../source/nbiot_func.c **** 
 340:../source/nbiot_func.c **** 	if (res == 0) {
 1206              		.loc 1 340 0
 1207 0012 20B9     		cbnz	r0, .L74
 341:../source/nbiot_func.c **** 		printf("ip  found\r\n");
 1208              		.loc 1 341 0
 1209 0014 0848     		ldr	r0, .L77+16
 1210              	.L76:
 342:../source/nbiot_func.c **** 	} else if (res == 1) {
 343:../source/nbiot_func.c **** 		printf("error\r\n");
 344:../source/nbiot_func.c **** 	}
 345:../source/nbiot_func.c **** }
 1211              		.loc 1 345 0
 1212 0016 BDE80840 		pop	{r3, lr}
 1213              		.cfi_remember_state
 1214              		.cfi_restore 14
 1215              		.cfi_restore 3
 1216              		.cfi_def_cfa_offset 0
 343:../source/nbiot_func.c **** 	}
 1217              		.loc 1 343 0
 1218 001a FFF7FEBF 		b	puts
 1219              	.LVL103:
 1220              	.L74:
 1221              		.cfi_restore_state
 342:../source/nbiot_func.c **** 	} else if (res == 1) {
 1222              		.loc 1 342 0
 1223 001e 0128     		cmp	r0, #1
 1224 0020 01D1     		bne	.L73
 343:../source/nbiot_func.c **** 	}
 1225              		.loc 1 343 0
 1226 0022 0648     		ldr	r0, .L77+20
 1227 0024 F7E7     		b	.L76
 1228              	.L73:
 1229 0026 08BD     		pop	{r3, pc}
 1230              	.L78:
 1231              		.align	2
 1232              	.L77:
 1233 0028 00000000 		.word	AT_CGPADDR
 1234 002c 00000000 		.word	.LC20
 1235 0030 08000000 		.word	.LC14
 1236 0034 00000000 		.word	res
 1237 0038 00000000 		.word	.LC32
 1238 003c 13000000 		.word	.LC16
 1239              		.cfi_endproc
 1240              	.LFE13:
 1242              		.section	.text.NB_create_socket,"ax",%progbits
 1243              		.align	1
 1244              		.global	NB_create_socket
 1245              		.syntax unified
 1246              		.thumb
 1247              		.thumb_func
 1248              		.fpu fpv4-sp-d16
 1250              	NB_create_socket:
 1251              	.LFB14:
 346:../source/nbiot_func.c **** void NB_create_socket() {
 1252              		.loc 1 346 0
 1253              		.cfi_startproc
 1254              		@ args = 0, pretend = 0, frame = 0
 1255              		@ frame_needed = 0, uses_anonymous_args = 0
 1256 0000 08B5     		push	{r3, lr}
 1257              		.cfi_def_cfa_offset 8
 1258              		.cfi_offset 3, -8
 1259              		.cfi_offset 14, -4
 347:../source/nbiot_func.c **** 	res = AT_send(AT_NSOCR, "", "OK");     //Create UDP socket
 1260              		.loc 1 347 0
 1261 0002 094B     		ldr	r3, .L83
 1262 0004 094A     		ldr	r2, .L83+4
 1263 0006 1868     		ldr	r0, [r3]
 1264 0008 0949     		ldr	r1, .L83+8
 1265 000a FFF7FEFF 		bl	AT_send
 1266              	.LVL104:
 1267 000e 094B     		ldr	r3, .L83+12
 1268 0010 1870     		strb	r0, [r3]
 348:../source/nbiot_func.c **** 	if (res == 0) {
 1269              		.loc 1 348 0
 1270 0012 20B9     		cbnz	r0, .L80
 349:../source/nbiot_func.c **** 		printf("Socket ready\r\n");
 1271              		.loc 1 349 0
 1272 0014 0848     		ldr	r0, .L83+16
 1273              	.L82:
 350:../source/nbiot_func.c **** 	} else if (res == 1) {
 351:../source/nbiot_func.c **** 		printf("error\r\n");
 352:../source/nbiot_func.c **** 	}
 353:../source/nbiot_func.c **** }
 1274              		.loc 1 353 0
 1275 0016 BDE80840 		pop	{r3, lr}
 1276              		.cfi_remember_state
 1277              		.cfi_restore 14
 1278              		.cfi_restore 3
 1279              		.cfi_def_cfa_offset 0
 351:../source/nbiot_func.c **** 	}
 1280              		.loc 1 351 0
 1281 001a FFF7FEBF 		b	puts
 1282              	.LVL105:
 1283              	.L80:
 1284              		.cfi_restore_state
 350:../source/nbiot_func.c **** 	} else if (res == 1) {
 1285              		.loc 1 350 0
 1286 001e 0128     		cmp	r0, #1
 1287 0020 01D1     		bne	.L79
 351:../source/nbiot_func.c **** 	}
 1288              		.loc 1 351 0
 1289 0022 0648     		ldr	r0, .L83+20
 1290 0024 F7E7     		b	.L82
 1291              	.L79:
 1292 0026 08BD     		pop	{r3, pc}
 1293              	.L84:
 1294              		.align	2
 1295              	.L83:
 1296 0028 00000000 		.word	AT_NSOCR
 1297 002c 00000000 		.word	.LC20
 1298 0030 08000000 		.word	.LC14
 1299 0034 00000000 		.word	res
 1300 0038 00000000 		.word	.LC33
 1301 003c 13000000 		.word	.LC16
 1302              		.cfi_endproc
 1303              	.LFE14:
 1305              		.section	.text.NB_send_msg,"ax",%progbits
 1306              		.align	1
 1307              		.global	NB_send_msg
 1308              		.syntax unified
 1309              		.thumb
 1310              		.thumb_func
 1311              		.fpu fpv4-sp-d16
 1313              	NB_send_msg:
 1314              	.LFB15:
 354:../source/nbiot_func.c **** uint8_t NB_send_msg(char *mqttMessage, uint8_t msgLen) {
 1315              		.loc 1 354 0
 1316              		.cfi_startproc
 1317              		@ args = 0, pretend = 0, frame = 504
 1318              		@ frame_needed = 0, uses_anonymous_args = 0
 1319              	.LVL106:
 1320 0000 10B5     		push	{r4, lr}
 1321              		.cfi_def_cfa_offset 8
 1322              		.cfi_offset 4, -8
 1323              		.cfi_offset 14, -4
 1324 0002 FEB0     		sub	sp, sp, #504
 1325              		.cfi_def_cfa_offset 512
 355:../source/nbiot_func.c **** 
 356:../source/nbiot_func.c **** 	char nsost_command[500];
 357:../source/nbiot_func.c **** 	uint8_t reSend_msg = 0;
 358:../source/nbiot_func.c **** 
 359:../source/nbiot_func.c **** 	sprintf(nsost_command,"0,\"167.99.207.133\",1884,%d,\"%s\"", msgLen, mqttMessage);
 1326              		.loc 1 359 0
 1327 0004 0346     		mov	r3, r0
 1328 0006 0A46     		mov	r2, r1
 1329 0008 01A8     		add	r0, sp, #4
 1330              	.LVL107:
 1331 000a 0F49     		ldr	r1, .L89
 1332              	.LVL108:
 1333 000c FFF7FEFF 		bl	sprintf
 1334              	.LVL109:
 360:../source/nbiot_func.c **** 
 361:../source/nbiot_func.c **** 	printf("%s\r\n",nsost_command);
 1335              		.loc 1 361 0
 1336 0010 01A9     		add	r1, sp, #4
 1337 0012 0E48     		ldr	r0, .L89+4
 1338 0014 FFF7FEFF 		bl	printf
 1339              	.LVL110:
 362:../source/nbiot_func.c **** 
 363:../source/nbiot_func.c **** 	res = AT_send(AT_NSOST, nsost_command, "OK");     //Send message to server
 1340              		.loc 1 363 0
 1341 0018 0D4B     		ldr	r3, .L89+8
 1342 001a 0E4A     		ldr	r2, .L89+12
 1343 001c 1868     		ldr	r0, [r3]
 1344 001e 01A9     		add	r1, sp, #4
 1345 0020 FFF7FEFF 		bl	AT_send
 1346              	.LVL111:
 1347 0024 0C4B     		ldr	r3, .L89+16
 1348 0026 0446     		mov	r4, r0
 1349 0028 1870     		strb	r0, [r3]
 364:../source/nbiot_func.c **** 
 365:../source/nbiot_func.c **** 	if (res == 0) {
 1350              		.loc 1 365 0
 1351 002a 28B9     		cbnz	r0, .L86
 366:../source/nbiot_func.c **** 		printf("sent");
 1352              		.loc 1 366 0
 1353 002c 0B48     		ldr	r0, .L89+20
 1354 002e FFF7FEFF 		bl	printf
 1355              	.LVL112:
 1356              	.L87:
 367:../source/nbiot_func.c **** 	} else if (res == 1) {
 368:../source/nbiot_func.c **** 		printf("error\r\n");
 369:../source/nbiot_func.c **** 		reSend_msg = 1;
 370:../source/nbiot_func.c **** 		return reSend_msg;
 371:../source/nbiot_func.c **** 	}
 372:../source/nbiot_func.c **** 	return 0;
 373:../source/nbiot_func.c **** }
 1357              		.loc 1 373 0
 1358 0032 2046     		mov	r0, r4
 1359 0034 7EB0     		add	sp, sp, #504
 1360              		.cfi_remember_state
 1361              		.cfi_def_cfa_offset 8
 1362              		@ sp needed
 1363 0036 10BD     		pop	{r4, pc}
 1364              	.LVL113:
 1365              	.L86:
 1366              		.cfi_restore_state
 367:../source/nbiot_func.c **** 	} else if (res == 1) {
 1367              		.loc 1 367 0
 1368 0038 0128     		cmp	r0, #1
 1369 003a 03D1     		bne	.L88
 368:../source/nbiot_func.c **** 		reSend_msg = 1;
 1370              		.loc 1 368 0
 1371 003c 0848     		ldr	r0, .L89+24
 1372 003e FFF7FEFF 		bl	puts
 1373              	.LVL114:
 370:../source/nbiot_func.c **** 	}
 1374              		.loc 1 370 0
 1375 0042 F6E7     		b	.L87
 1376              	.LVL115:
 1377              	.L88:
 372:../source/nbiot_func.c **** }
 1378              		.loc 1 372 0
 1379 0044 0024     		movs	r4, #0
 1380 0046 F4E7     		b	.L87
 1381              	.L90:
 1382              		.align	2
 1383              	.L89:
 1384 0048 00000000 		.word	.LC34
 1385 004c 00000000 		.word	.LC7
 1386 0050 00000000 		.word	AT_NSOST
 1387 0054 00000000 		.word	.LC20
 1388 0058 00000000 		.word	res
 1389 005c 20000000 		.word	.LC35
 1390 0060 13000000 		.word	.LC16
 1391              		.cfi_endproc
 1392              	.LFE15:
 1394              		.section	.text.NB_read_msg,"ax",%progbits
 1395              		.align	1
 1396              		.global	NB_read_msg
 1397              		.syntax unified
 1398              		.thumb
 1399              		.thumb_func
 1400              		.fpu fpv4-sp-d16
 1402              	NB_read_msg:
 1403              	.LFB16:
 374:../source/nbiot_func.c **** void NB_read_msg() {
 1404              		.loc 1 374 0
 1405              		.cfi_startproc
 1406              		@ args = 0, pretend = 0, frame = 0
 1407              		@ frame_needed = 0, uses_anonymous_args = 0
 1408 0000 08B5     		push	{r3, lr}
 1409              		.cfi_def_cfa_offset 8
 1410              		.cfi_offset 3, -8
 1411              		.cfi_offset 14, -4
 375:../source/nbiot_func.c **** 	res = AT_send(AT_NSORF, "", "OK");     //read echo data
 1412              		.loc 1 375 0
 1413 0002 094B     		ldr	r3, .L95
 1414 0004 094A     		ldr	r2, .L95+4
 1415 0006 1868     		ldr	r0, [r3]
 1416 0008 0949     		ldr	r1, .L95+8
 1417 000a FFF7FEFF 		bl	AT_send
 1418              	.LVL116:
 1419 000e 094B     		ldr	r3, .L95+12
 1420 0010 1870     		strb	r0, [r3]
 376:../source/nbiot_func.c **** 	//delay_ms(1000);
 377:../source/nbiot_func.c **** 	if (res == 0) {
 1421              		.loc 1 377 0
 1422 0012 20B9     		cbnz	r0, .L92
 378:../source/nbiot_func.c **** 		printf("echo\r\n");
 1423              		.loc 1 378 0
 1424 0014 0848     		ldr	r0, .L95+16
 1425              	.L94:
 379:../source/nbiot_func.c **** 	} else if (res == 1) {
 380:../source/nbiot_func.c **** 		printf("error\r\n");
 381:../source/nbiot_func.c **** 	}
 382:../source/nbiot_func.c **** }
 1426              		.loc 1 382 0
 1427 0016 BDE80840 		pop	{r3, lr}
 1428              		.cfi_remember_state
 1429              		.cfi_restore 14
 1430              		.cfi_restore 3
 1431              		.cfi_def_cfa_offset 0
 380:../source/nbiot_func.c **** 	}
 1432              		.loc 1 380 0
 1433 001a FFF7FEBF 		b	puts
 1434              	.LVL117:
 1435              	.L92:
 1436              		.cfi_restore_state
 379:../source/nbiot_func.c **** 	} else if (res == 1) {
 1437              		.loc 1 379 0
 1438 001e 0128     		cmp	r0, #1
 1439 0020 01D1     		bne	.L91
 380:../source/nbiot_func.c **** 	}
 1440              		.loc 1 380 0
 1441 0022 0648     		ldr	r0, .L95+20
 1442 0024 F7E7     		b	.L94
 1443              	.L91:
 1444 0026 08BD     		pop	{r3, pc}
 1445              	.L96:
 1446              		.align	2
 1447              	.L95:
 1448 0028 00000000 		.word	AT_NSORF
 1449 002c 00000000 		.word	.LC20
 1450 0030 08000000 		.word	.LC14
 1451 0034 00000000 		.word	res
 1452 0038 00000000 		.word	.LC36
 1453 003c 13000000 		.word	.LC16
 1454              		.cfi_endproc
 1455              	.LFE16:
 1457              		.section	.text.NB_create_pdp_send,"ax",%progbits
 1458              		.align	1
 1459              		.global	NB_create_pdp_send
 1460              		.syntax unified
 1461              		.thumb
 1462              		.thumb_func
 1463              		.fpu fpv4-sp-d16
 1465              	NB_create_pdp_send:
 1466              	.LFB4:
 214:../source/nbiot_func.c **** 
 1467              		.loc 1 214 0
 1468              		.cfi_startproc
 1469              		@ args = 0, pretend = 0, frame = 0
 1470              		@ frame_needed = 0, uses_anonymous_args = 0
 1471              	.LVL118:
 1472 0000 70B5     		push	{r4, r5, r6, lr}
 1473              		.cfi_def_cfa_offset 16
 1474              		.cfi_offset 4, -16
 1475              		.cfi_offset 5, -12
 1476              		.cfi_offset 6, -8
 1477              		.cfi_offset 14, -4
 214:../source/nbiot_func.c **** 
 1478              		.loc 1 214 0
 1479 0002 0E46     		mov	r6, r1
 1480 0004 0546     		mov	r5, r0
 218:../source/nbiot_func.c **** 	  NB_setPin();
 1481              		.loc 1 218 0
 1482 0006 FFF7FEFF 		bl	NB_reboot
 1483              	.LVL119:
 219:../source/nbiot_func.c **** 
 1484              		.loc 1 219 0
 1485 000a FFF7FEFF 		bl	NB_setPin
 1486              	.LVL120:
 221:../source/nbiot_func.c **** 	  NB_cops_register();
 1487              		.loc 1 221 0
 1488 000e 4FF47A70 		mov	r0, #1000
 1489 0012 FFF7FEFF 		bl	delay_ms
 1490              	.LVL121:
 222:../source/nbiot_func.c **** 
 1491              		.loc 1 222 0
 1492 0016 FFF7FEFF 		bl	NB_cops_register
 1493              	.LVL122:
 224:../source/nbiot_func.c **** 	  delay_ms(1000);
 1494              		.loc 1 224 0
 1495 001a FFF7FEFF 		bl	NB_network_status
 1496              	.LVL123:
 225:../source/nbiot_func.c **** 
 1497              		.loc 1 225 0
 1498 001e 4FF47A70 		mov	r0, #1000
 1499 0022 FFF7FEFF 		bl	delay_ms
 1500              	.LVL124:
 227:../source/nbiot_func.c **** 	  delay_ms(1000);
 1501              		.loc 1 227 0
 1502 0026 FFF7FEFF 		bl	NB_define_pdp
 1503              	.LVL125:
 228:../source/nbiot_func.c **** 
 1504              		.loc 1 228 0
 1505 002a 4FF47A70 		mov	r0, #1000
 1506 002e FFF7FEFF 		bl	delay_ms
 1507              	.LVL126:
 216:../source/nbiot_func.c **** 
 1508              		.loc 1 216 0
 1509 0032 0024     		movs	r4, #0
 1510              	.LVL127:
 1511              	.L99:
 232:../source/nbiot_func.c **** 	  delay_ms(2200);
 1512              		.loc 1 232 0
 1513 0034 FFF7FEFF 		bl	NB_cops_deRegister
 1514              	.LVL128:
 233:../source/nbiot_func.c **** 
 1515              		.loc 1 233 0
 1516 0038 40F69800 		movw	r0, #2200
 1517 003c FFF7FEFF 		bl	delay_ms
 1518              	.LVL129:
 235:../source/nbiot_func.c **** 	  delay_ms(3000);
 1519              		.loc 1 235 0
 1520 0040 FFF7FEFF 		bl	NB_active_pdp
 1521              	.LVL130:
 236:../source/nbiot_func.c **** 
 1522              		.loc 1 236 0
 1523 0044 40F6B830 		movw	r0, #3000
 1524 0048 FFF7FEFF 		bl	delay_ms
 1525              	.LVL131:
 238:../source/nbiot_func.c **** 	  NB_network_status();
 1526              		.loc 1 238 0
 1527 004c 012C     		cmp	r4, #1
 1528 004e 05D1     		bne	.L98
 239:../source/nbiot_func.c **** 	  delay_ms(1000);
 1529              		.loc 1 239 0
 1530 0050 FFF7FEFF 		bl	NB_network_status
 1531              	.LVL132:
 240:../source/nbiot_func.c **** 	  }
 1532              		.loc 1 240 0
 1533 0054 4FF47A70 		mov	r0, #1000
 1534 0058 FFF7FEFF 		bl	delay_ms
 1535              	.LVL133:
 1536              	.L98:
 242:../source/nbiot_func.c **** 	  delay_ms(1000);
 1537              		.loc 1 242 0
 1538 005c FFF7FEFF 		bl	NB_show_ip
 1539              	.LVL134:
 243:../source/nbiot_func.c **** 
 1540              		.loc 1 243 0
 1541 0060 4FF47A70 		mov	r0, #1000
 1542 0064 FFF7FEFF 		bl	delay_ms
 1543              	.LVL135:
 245:../source/nbiot_func.c **** 	  delay_ms(1000);
 1544              		.loc 1 245 0
 1545 0068 FFF7FEFF 		bl	NB_create_socket
 1546              	.LVL136:
 246:../source/nbiot_func.c **** 
 1547              		.loc 1 246 0
 1548 006c 4FF47A70 		mov	r0, #1000
 1549 0070 FFF7FEFF 		bl	delay_ms
 1550              	.LVL137:
 248:../source/nbiot_func.c **** 
 1551              		.loc 1 248 0
 1552 0074 3146     		mov	r1, r6
 1553 0076 2846     		mov	r0, r5
 1554 0078 FFF7FEFF 		bl	NB_send_msg
 1555              	.LVL138:
 250:../source/nbiot_func.c **** 
 1556              		.loc 1 250 0
 1557 007c 0128     		cmp	r0, #1
 248:../source/nbiot_func.c **** 
 1558              		.loc 1 248 0
 1559 007e 0446     		mov	r4, r0
 1560              	.LVL139:
 250:../source/nbiot_func.c **** 
 1561              		.loc 1 250 0
 1562 0080 D8D0     		beq	.L99
 253:../source/nbiot_func.c **** 	  NB_read_msg();
 1563              		.loc 1 253 0
 1564 0082 4FF47A60 		mov	r0, #4000
 1565              	.LVL140:
 1566 0086 FFF7FEFF 		bl	delay_ms
 1567              	.LVL141:
 255:../source/nbiot_func.c **** 
 1568              		.loc 1 255 0
 1569 008a BDE87040 		pop	{r4, r5, r6, lr}
 1570              		.cfi_restore 14
 1571              		.cfi_restore 6
 1572              		.cfi_restore 5
 1573              		.cfi_restore 4
 1574              		.cfi_def_cfa_offset 0
 1575              	.LVL142:
 254:../source/nbiot_func.c **** }
 1576              		.loc 1 254 0
 1577 008e FFF7FEBF 		b	NB_read_msg
 1578              	.LVL143:
 1579              		.cfi_endproc
 1580              	.LFE4:
 1582              		.global	passwd
 1583              		.global	username
 1584              		.global	topic
 1585              		.global	client_id
 1586              		.global	postHeader
 1587              		.comm	res,1,1
 1588              		.section	.bss.jsonMessage.6930,"aw",%nobits
 1589              		.set	.LANCHOR4,. + 0
 1592              	jsonMessage.6930:
 1593 0000 00000000 		.space	150
 1593      00000000 
 1593      00000000 
 1593      00000000 
 1593      00000000 
 1594              		.section	.bss.jsonMessage.6943,"aw",%nobits
 1595              		.set	.LANCHOR5,. + 0
 1598              	jsonMessage.6943:
 1599 0000 00000000 		.space	150
 1599      00000000 
 1599      00000000 
 1599      00000000 
 1599      00000000 
 1600              		.section	.data.client_id,"aw",%progbits
 1601              		.align	2
 1602              		.set	.LANCHOR0,. + 0
 1605              	client_id:
 1606 0000 16000000 		.word	.LC39
 1607              		.section	.data.passwd,"aw",%progbits
 1608              		.align	2
 1609              		.set	.LANCHOR1,. + 0
 1612              	passwd:
 1613 0000 00000000 		.word	.LC37
 1614              		.section	.data.topic,"aw",%progbits
 1615              		.align	2
 1616              		.set	.LANCHOR3,. + 0
 1619              	topic:
 1620 0000 0D000000 		.word	.LC38
 1621              		.section	.data.username,"aw",%progbits
 1622              		.align	2
 1623              		.set	.LANCHOR2,. + 0
 1626              	username:
 1627 0000 0D000000 		.word	.LC38
 1628              		.section	.rodata.NB_active_pdp.str1.1,"aMS",%progbits,1
 1629              	.LC30:
 1630 0000 3D312C31 		.ascii	"=1,1\000"
 1630      00
 1631              	.LC31:
 1632 0005 50445020 		.ascii	"PDP 1 activated\015\000"
 1632      31206163 
 1632      74697661 
 1632      7465640D 
 1632      00
 1633              		.section	.rodata.NB_cops_deRegister.str1.1,"aMS",%progbits,1
 1634              	.LC23:
 1635 0000 3D3200   		.ascii	"=2\000"
 1636              	.LC24:
 1637 0003 44652D72 		.ascii	"De-registered\015\000"
 1637      65676973 
 1637      74657265 
 1637      640D00
 1638              		.section	.rodata.NB_cops_readRegister.str1.1,"aMS",%progbits,1
 1639              	.LC25:
 1640 0000 3F00     		.ascii	"?\000"
 1641              	.LC26:
 1642 0002 72656164 		.ascii	"readCOPS\015\000"
 1642      434F5053 
 1642      0D00
 1643              		.section	.rodata.NB_cops_register.str1.1,"aMS",%progbits,1
 1644              	.LC20:
 1645 0000 4F4B00   		.ascii	"OK\000"
 1646              	.LC21:
 1647 0003 3D3000   		.ascii	"=0\000"
 1648              	.LC22:
 1649 0006 52656769 		.ascii	"Registered\015\000"
 1649      73746572 
 1649      65640D00 
 1650              		.section	.rodata.NB_create_socket.str1.1,"aMS",%progbits,1
 1651              	.LC33:
 1652 0000 536F636B 		.ascii	"Socket ready\015\000"
 1652      65742072 
 1652      65616479 
 1652      0D00
 1653              		.section	.rodata.NB_define_pdp.str1.1,"aMS",%progbits,1
 1654              	.LC29:
 1655 0000 50445020 		.ascii	"PDP context 1 defined\015\000"
 1655      636F6E74 
 1655      65787420 
 1655      31206465 
 1655      66696E65 
 1656              		.section	.rodata.NB_network_status.str1.1,"aMS",%progbits,1
 1657              	.LC27:
 1658 0000 2B434552 		.ascii	"+CEREG: 0,1\000"
 1658      45473A20 
 1658      302C3100 
 1659              	.LC28:
 1660 000c 43455245 		.ascii	"CEREG_OK\015\000"
 1660      475F4F4B 
 1660      0D00
 1661              		.section	.rodata.NB_read_msg.str1.1,"aMS",%progbits,1
 1662              	.LC36:
 1663 0000 6563686F 		.ascii	"echo\015\000"
 1663      0D00
 1664              		.section	.rodata.NB_reboot.str1.1,"aMS",%progbits,1
 1665              	.LC13:
 1666 0000 2B55464F 		.ascii	"+UFOTAS\000"
 1666      54415300 
 1667              	.LC14:
 1668 0008 00       		.ascii	"\000"
 1669              	.LC15:
 1670 0009 7265626F 		.ascii	"rebooted\015\000"
 1670      6F746564 
 1670      0D00
 1671              	.LC16:
 1672 0013 6572726F 		.ascii	"error\015\000"
 1672      720D00
 1673              	.LC17:
 1674 001a 74696D65 		.ascii	"timeout error\015\000"
 1674      6F757420 
 1674      6572726F 
 1674      720D00
 1675              		.section	.rodata.NB_received_data.str1.1,"aMS",%progbits,1
 1676              	.LC10:
 1677 0000 4E534F4E 		.ascii	"NSONMI\000"
 1677      4D4900
 1678              	.LC11:
 1679 0007 72656365 		.ascii	"received\015\000"
 1679      69766564 
 1679      0D00
 1680              	.LC12:
 1681 0011 4552524F 		.ascii	"ERROR\000"
 1681      5200
 1682              		.section	.rodata.NB_send_msg.str1.1,"aMS",%progbits,1
 1683              	.LC34:
 1684 0000 302C2231 		.ascii	"0,\"167.99.207.133\",1884,%d,\"%s\"\000"
 1684      36372E39 
 1684      392E3230 
 1684      372E3133 
 1684      33222C31 
 1685              	.LC35:
 1686 0020 73656E74 		.ascii	"sent\000"
 1686      00
 1687              		.section	.rodata.NB_setPin.str1.1,"aMS",%progbits,1
 1688              	.LC18:
 1689 0000 2B4E5049 		.ascii	"+NPIN: \"OK\"\000"
 1689      4E3A2022 
 1689      4F4B2200 
 1690              	.LC19:
 1691 000c 61636B0D 		.ascii	"ack\015\000"
 1691      00
 1692              		.section	.rodata.NB_show_ip.str1.1,"aMS",%progbits,1
 1693              	.LC32:
 1694 0000 69702020 		.ascii	"ip  found\015\000"
 1694      666F756E 
 1694      640D00
 1695              		.section	.rodata.assembleMqtt.str1.1,"aMS",%progbits,1
 1696              	.LC0:
 1697 0000 7B0D0A0D 		.ascii	"{\015\012\015\012    \"serialnumber\":\"%s\",\015\012"
 1697      0A202020 
 1697      20227365 
 1697      7269616C 
 1697      6E756D62 
 1698 001f 00       		.ascii	"\000"
 1699              	.LC1:
 1700 0020 20202020 		.ascii	"    \"lat\":\"%s\",\015\012\000"
 1700      226C6174 
 1700      223A2225 
 1700      73222C0D 
 1700      0A00
 1701              	.LC2:
 1702 0032 20202020 		.ascii	"    \"long\":\"%s\",\015\012\000"
 1702      226C6F6E 
 1702      67223A22 
 1702      2573222C 
 1702      0D0A00
 1703              	.LC3:
 1704 0045 20202020 		.ascii	"    \"status\":\"%s\",\015\012\000"
 1704      22737461 
 1704      74757322 
 1704      3A222573 
 1704      222C0D0A 
 1705              	.LC4:
 1706 005a 20202020 		.ascii	"    \"battery\":\"%d\"\015\012\015\012}\000"
 1706      22626174 
 1706      74657279 
 1706      223A2225 
 1706      64220D0A 
 1707              	.LC5:
 1708 0072 25303278 		.ascii	"%02x\000"
 1708      00
 1709              	.LC6:
 1710 0077 7061636B 		.ascii	"packet length %d\015\012\000"
 1710      6574206C 
 1710      656E6774 
 1710      68202564 
 1710      0D0A00
 1711              		.section	.rodata.assemblePacket.str1.1,"aMS",%progbits,1
 1712              	.LC7:
 1713 0000 25730D0A 		.ascii	"%s\015\012\000"
 1713      00
 1714              	.LC8:
 1715 0005 6C656E67 		.ascii	"length of udp msg %d \015\012Printing UDP message i"
 1715      7468206F 
 1715      66207564 
 1715      70206D73 
 1715      67202564 
 1716 0032 6E206865 		.ascii	"n hex\015\012\000"
 1716      780D0A00 
 1717              	.LC9:
 1718 003a 0D00     		.ascii	"\015\000"
 1719              		.section	.rodata.postHeader,"a",%progbits
 1720              		.set	.LANCHOR6,. + 0
 1723              	postHeader:
 1724 0000 504F5354 		.ascii	"POST /Reindeertracker/API/data/index.php HTTP/1.1\015"
 1724      202F5265 
 1724      696E6465 
 1724      65727472 
 1724      61636B65 
 1725 0032 0A486F73 		.ascii	"\012Host: 168.235.64.81\015\012Content-Length: %d\015"
 1725      743A2031 
 1725      36382E32 
 1725      33352E36 
 1725      342E3831 
 1726 005b 0A436F6E 		.ascii	"\012Content-Type: application/json\015\012Cache-Con"
 1726      74656E74 
 1726      2D547970 
 1726      653A2061 
 1726      70706C69 
 1727 0085 74726F6C 		.ascii	"trol: no-cache\015\012\015\012\000"
 1727      3A206E6F 
 1727      2D636163 
 1727      68650D0A 
 1727      0D0A00
 1728              		.section	.rodata.str1.1,"aMS",%progbits,1
 1729              	.LC37:
 1730 0000 7265696E 		.ascii	"reindeer1234\000"
 1730      64656572 
 1730      31323334 
 1730      00
 1731              	.LC38:
 1732 000d 7265696E 		.ascii	"reindeer\000"
 1732      64656572 
 1732      00
 1733              	.LC39:
 1734 0016 7265696E 		.ascii	"reindeertracker\000"
 1734      64656572 
 1734      74726163 
 1734      6B657200 
 1735              		.text
 1736              	.Letext0:
 1737              		.file 2 "/usr/local/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/machine/_default_type
 1738              		.file 3 "/usr/local/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/sys/_stdint.h"
 1739              		.file 4 "/usr/local/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/sys/lock.h"
 1740              		.file 5 "/usr/local/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/sys/_types.h"
 1741              		.file 6 "/usr/local/gcc-arm-none-eabi-6-2017-q2-update/lib/gcc/arm-none-eabi/6.3.1/include/stddef.
 1742              		.file 7 "/usr/local/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/sys/reent.h"
 1743              		.file 8 "/usr/local/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/stdlib.h"
 1744              		.file 9 "../source/nbiot_func.h"
 1745              		.file 10 "../source/at_func.h"
 1746              		.file 11 "/usr/local/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/stdio.h"
 1747              		.file 12 "../source/timing.h"
 1748              		.file 13 "/usr/local/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/string.h"
 1749              		.file 14 "<built-in>"
