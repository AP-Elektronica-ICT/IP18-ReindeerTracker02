   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"fsl_shell.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HelpCommand,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	HelpCommand:
  25              	.LFB149:
  26              		.file 1 "../utilities/fsl_shell.c"
   1:../utilities/fsl_shell.c **** /*
   2:../utilities/fsl_shell.c ****  * The Clear BSD License
   3:../utilities/fsl_shell.c ****  * Copyright (c) 2015, Freescale Semiconductor, Inc.
   4:../utilities/fsl_shell.c ****  * Copyright 2016-2017 NXP
   5:../utilities/fsl_shell.c ****  * All rights reserved.
   6:../utilities/fsl_shell.c ****  *
   7:../utilities/fsl_shell.c ****  * Redistribution and use in source and binary forms, with or without modification,
   8:../utilities/fsl_shell.c ****  * are permitted (subject to the limitations in the disclaimer below) provided
   9:../utilities/fsl_shell.c ****  * that the following conditions are met:
  10:../utilities/fsl_shell.c ****  *
  11:../utilities/fsl_shell.c ****  * o Redistributions of source code must retain the above copyright notice, this list
  12:../utilities/fsl_shell.c ****  *   of conditions and the following disclaimer.
  13:../utilities/fsl_shell.c ****  *
  14:../utilities/fsl_shell.c ****  * o Redistributions in binary form must reproduce the above copyright notice, this
  15:../utilities/fsl_shell.c ****  *   list of conditions and the following disclaimer in the documentation and/or
  16:../utilities/fsl_shell.c ****  *   other materials provided with the distribution.
  17:../utilities/fsl_shell.c ****  *
  18:../utilities/fsl_shell.c ****  * o Neither the name of the copyright holder nor the names of its
  19:../utilities/fsl_shell.c ****  *   contributors may be used to endorse or promote products derived from this
  20:../utilities/fsl_shell.c ****  *   software without specific prior written permission.
  21:../utilities/fsl_shell.c ****  *
  22:../utilities/fsl_shell.c ****  * NO EXPRESS OR IMPLIED LICENSES TO ANY PARTY'S PATENT RIGHTS ARE GRANTED BY THIS LICENSE.
  23:../utilities/fsl_shell.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
  24:../utilities/fsl_shell.c ****  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  25:../utilities/fsl_shell.c ****  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  26:../utilities/fsl_shell.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
  27:../utilities/fsl_shell.c ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  28:../utilities/fsl_shell.c ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  29:../utilities/fsl_shell.c ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
  30:../utilities/fsl_shell.c ****  * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  31:../utilities/fsl_shell.c ****  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
  32:../utilities/fsl_shell.c ****  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  33:../utilities/fsl_shell.c ****  *
  34:../utilities/fsl_shell.c ****  * POSIX getopt for Windows
  35:../utilities/fsl_shell.c ****  * Code given out at the 1985 UNIFORUM conference in Dallas.
  36:../utilities/fsl_shell.c ****  *
  37:../utilities/fsl_shell.c ****  * From std-unix@ut-sally.UUCP (Moderator, John Quarterman) Sun Nov  3 14:34:15 1985
  38:../utilities/fsl_shell.c ****  * Relay-Version: version B 2.10.3 4.3bsd-beta 6/6/85; site gatech.CSNET
  39:../utilities/fsl_shell.c ****  * Posting-Version: version B 2.10.2 9/18/84; site ut-sally.UUCP
  40:../utilities/fsl_shell.c ****  * Path: gatech!akgua!mhuxv!mhuxt!mhuxr!ulysses!allegra!mit-eddie!genrad!panda!talcott!harvard!seis
  41:../utilities/fsl_shell.c ****  * From: std-unix@ut-sally.UUCP (Moderator, John Quarterman)
  42:../utilities/fsl_shell.c ****  * Newsgroups: mod.std.unix
  43:../utilities/fsl_shell.c ****  * Subject: public domain AT&T getopt source
  44:../utilities/fsl_shell.c ****  * Message-ID: <3352@ut-sally.UUCP>
  45:../utilities/fsl_shell.c ****  * Date: 3 Nov 85 19:34:15 GMT
  46:../utilities/fsl_shell.c ****  * Date-Received: 4 Nov 85 12:25:09 GMT
  47:../utilities/fsl_shell.c ****  * Organization: IEEE/P1003 Portable Operating System Environment Committee
  48:../utilities/fsl_shell.c ****  * Lines: 91
  49:../utilities/fsl_shell.c ****  * Approved: jsq@ut-sally.UUC
  50:../utilities/fsl_shell.c ****  * Here's something you've all been waiting for:  the AT&T public domain
  51:../utilities/fsl_shell.c ****  * source for getopt(3).  It is the code which was given out at the 1985
  52:../utilities/fsl_shell.c ****  * UNIFORUM conference in Dallas.  I obtained it by electronic mail
  53:../utilities/fsl_shell.c ****  * directly from AT&T.  The people there assure me that it is indeed
  54:../utilities/fsl_shell.c ****  * in the public domain
  55:../utilities/fsl_shell.c ****  * There is no manual page.  That is because the one they gave out at
  56:../utilities/fsl_shell.c ****  * UNIFORUM was slightly different from the current System V Release 2
  57:../utilities/fsl_shell.c ****  * manual page.  The difference apparently involved a note about the
  58:../utilities/fsl_shell.c ****  * famous rules 5 and 6, recommending using white space between an option
  59:../utilities/fsl_shell.c ****  * and its first argument, and not grouping options that have arguments.
  60:../utilities/fsl_shell.c ****  * Getopt itself is currently lenient about both of these things White
  61:../utilities/fsl_shell.c ****  * space is allowed, but not mandatory, and the last option in a group can
  62:../utilities/fsl_shell.c ****  * have an argument.  That particular version of the man page evidently
  63:../utilities/fsl_shell.c ****  * has no official existence, and my source at AT&T did not send a copy.
  64:../utilities/fsl_shell.c ****  * The current SVR2 man page reflects the actual behavor of this getopt.
  65:../utilities/fsl_shell.c ****  * However, I am not about to post a copy of anything licensed by AT&T.
  66:../utilities/fsl_shell.c ****  */
  67:../utilities/fsl_shell.c **** 
  68:../utilities/fsl_shell.c **** #include <assert.h>
  69:../utilities/fsl_shell.c **** #include "fsl_shell.h"
  70:../utilities/fsl_shell.c **** 
  71:../utilities/fsl_shell.c **** /*******************************************************************************
  72:../utilities/fsl_shell.c ****  * Definitions
  73:../utilities/fsl_shell.c ****  ******************************************************************************/
  74:../utilities/fsl_shell.c **** #define KEY_ESC (0x1BU)
  75:../utilities/fsl_shell.c **** #define KET_DEL (0x7FU)
  76:../utilities/fsl_shell.c **** 
  77:../utilities/fsl_shell.c **** /*******************************************************************************
  78:../utilities/fsl_shell.c ****  * Prototypes
  79:../utilities/fsl_shell.c ****  ******************************************************************************/
  80:../utilities/fsl_shell.c **** static int32_t HelpCommand(p_shell_context_t context, int32_t argc, char **argv); /*!< help command
  81:../utilities/fsl_shell.c **** 
  82:../utilities/fsl_shell.c **** static int32_t ExitCommand(p_shell_context_t context, int32_t argc, char **argv); /*!< exit command
  83:../utilities/fsl_shell.c **** 
  84:../utilities/fsl_shell.c **** static int32_t ParseLine(const char *cmd, uint32_t len, char *argv[SHELL_MAX_ARGS]); /*!< parse lin
  85:../utilities/fsl_shell.c **** 
  86:../utilities/fsl_shell.c **** static int32_t StrCompare(const char *str1, const char *str2, int32_t count); /*!< compare string c
  87:../utilities/fsl_shell.c **** 
  88:../utilities/fsl_shell.c **** static void ProcessCommand(p_shell_context_t context, const char *cmd); /*!< process a command */
  89:../utilities/fsl_shell.c **** 
  90:../utilities/fsl_shell.c **** static void GetHistoryCommand(p_shell_context_t context, uint8_t hist_pos); /*!< get commands histo
  91:../utilities/fsl_shell.c **** 
  92:../utilities/fsl_shell.c **** static void AutoComplete(p_shell_context_t context); /*!< auto complete command */
  93:../utilities/fsl_shell.c **** 
  94:../utilities/fsl_shell.c **** static uint8_t GetChar(p_shell_context_t context); /*!< get a char from communication interface */
  95:../utilities/fsl_shell.c **** 
  96:../utilities/fsl_shell.c **** static int32_t StrLen(const char *str); /*!< get string length */
  97:../utilities/fsl_shell.c **** 
  98:../utilities/fsl_shell.c **** static char *StrCopy(char *dest, const char *src, int32_t count); /*!< string copy */
  99:../utilities/fsl_shell.c **** 
 100:../utilities/fsl_shell.c **** /*******************************************************************************
 101:../utilities/fsl_shell.c ****  * Variables
 102:../utilities/fsl_shell.c ****  ******************************************************************************/
 103:../utilities/fsl_shell.c **** static const shell_command_context_t xHelpCommand = {"help", "\r\n\"help\": Lists all the registere
 104:../utilities/fsl_shell.c ****                                                      HelpCommand, 0};
 105:../utilities/fsl_shell.c **** 
 106:../utilities/fsl_shell.c **** static const shell_command_context_t xExitCommand = {"exit", "\r\n\"exit\": Exit program\r\n", Exit
 107:../utilities/fsl_shell.c **** 
 108:../utilities/fsl_shell.c **** static shell_command_context_list_t g_RegisteredCommands;
 109:../utilities/fsl_shell.c **** 
 110:../utilities/fsl_shell.c **** static char g_paramBuffer[SHELL_BUFFER_SIZE];
 111:../utilities/fsl_shell.c **** 
 112:../utilities/fsl_shell.c **** /*******************************************************************************
 113:../utilities/fsl_shell.c ****  * Code
 114:../utilities/fsl_shell.c ****  ******************************************************************************/
 115:../utilities/fsl_shell.c **** void SHELL_Init(
 116:../utilities/fsl_shell.c ****     p_shell_context_t context, send_data_cb_t send_cb, recv_data_cb_t recv_cb, printf_data_t shell_
 117:../utilities/fsl_shell.c **** {
 118:../utilities/fsl_shell.c ****     assert(send_cb != NULL);
 119:../utilities/fsl_shell.c ****     assert(recv_cb != NULL);
 120:../utilities/fsl_shell.c ****     assert(prompt != NULL);
 121:../utilities/fsl_shell.c ****     assert(shell_printf != NULL);
 122:../utilities/fsl_shell.c **** 
 123:../utilities/fsl_shell.c ****     /* Memset for context */
 124:../utilities/fsl_shell.c ****     memset(context, 0, sizeof(shell_context_struct));
 125:../utilities/fsl_shell.c ****     context->send_data_func = send_cb;
 126:../utilities/fsl_shell.c ****     context->recv_data_func = recv_cb;
 127:../utilities/fsl_shell.c ****     context->printf_data_func = shell_printf;
 128:../utilities/fsl_shell.c ****     context->prompt = prompt;
 129:../utilities/fsl_shell.c **** 
 130:../utilities/fsl_shell.c ****     SHELL_RegisterCommand(&xHelpCommand);
 131:../utilities/fsl_shell.c ****     SHELL_RegisterCommand(&xExitCommand);
 132:../utilities/fsl_shell.c **** }
 133:../utilities/fsl_shell.c **** 
 134:../utilities/fsl_shell.c **** int32_t SHELL_Main(p_shell_context_t context)
 135:../utilities/fsl_shell.c **** {
 136:../utilities/fsl_shell.c ****     uint8_t ch;
 137:../utilities/fsl_shell.c ****     int32_t i;
 138:../utilities/fsl_shell.c **** 
 139:../utilities/fsl_shell.c ****     if (!context)
 140:../utilities/fsl_shell.c ****     {
 141:../utilities/fsl_shell.c ****         return -1;
 142:../utilities/fsl_shell.c ****     }
 143:../utilities/fsl_shell.c **** 
 144:../utilities/fsl_shell.c ****     context->exit = false;
 145:../utilities/fsl_shell.c ****     context->printf_data_func("\r\nSHELL (build: %s)\r\n", __DATE__);
 146:../utilities/fsl_shell.c ****     context->printf_data_func("Copyright (c) 2017 NXP Semiconductor\r\n");
 147:../utilities/fsl_shell.c ****     context->printf_data_func(context->prompt);
 148:../utilities/fsl_shell.c **** 
 149:../utilities/fsl_shell.c ****     while (1)
 150:../utilities/fsl_shell.c ****     {
 151:../utilities/fsl_shell.c ****         if (context->exit)
 152:../utilities/fsl_shell.c ****         {
 153:../utilities/fsl_shell.c ****             break;
 154:../utilities/fsl_shell.c ****         }
 155:../utilities/fsl_shell.c ****         ch = GetChar(context);
 156:../utilities/fsl_shell.c ****         /* If error occured when getting a char, continue to receive a new char. */
 157:../utilities/fsl_shell.c ****         if ((uint8_t)(-1) == ch)
 158:../utilities/fsl_shell.c ****         {
 159:../utilities/fsl_shell.c ****             continue;
 160:../utilities/fsl_shell.c ****         }
 161:../utilities/fsl_shell.c ****         /* Special key */
 162:../utilities/fsl_shell.c ****         if (ch == KEY_ESC)
 163:../utilities/fsl_shell.c ****         {
 164:../utilities/fsl_shell.c ****             context->stat = kSHELL_Special;
 165:../utilities/fsl_shell.c ****             continue;
 166:../utilities/fsl_shell.c ****         }
 167:../utilities/fsl_shell.c ****         else if (context->stat == kSHELL_Special)
 168:../utilities/fsl_shell.c ****         {
 169:../utilities/fsl_shell.c ****             /* Function key */
 170:../utilities/fsl_shell.c ****             if (ch == '[')
 171:../utilities/fsl_shell.c ****             {
 172:../utilities/fsl_shell.c ****                 context->stat = kSHELL_Function;
 173:../utilities/fsl_shell.c ****                 continue;
 174:../utilities/fsl_shell.c ****             }
 175:../utilities/fsl_shell.c ****             context->stat = kSHELL_Normal;
 176:../utilities/fsl_shell.c ****         }
 177:../utilities/fsl_shell.c ****         else if (context->stat == kSHELL_Function)
 178:../utilities/fsl_shell.c ****         {
 179:../utilities/fsl_shell.c ****             context->stat = kSHELL_Normal;
 180:../utilities/fsl_shell.c **** 
 181:../utilities/fsl_shell.c ****             switch ((uint8_t)ch)
 182:../utilities/fsl_shell.c ****             {
 183:../utilities/fsl_shell.c ****                 /* History operation here */
 184:../utilities/fsl_shell.c ****                 case 'A': /* Up key */
 185:../utilities/fsl_shell.c ****                     GetHistoryCommand(context, context->hist_current);
 186:../utilities/fsl_shell.c ****                     if (context->hist_current < (context->hist_count - 1))
 187:../utilities/fsl_shell.c ****                     {
 188:../utilities/fsl_shell.c ****                         context->hist_current++;
 189:../utilities/fsl_shell.c ****                     }
 190:../utilities/fsl_shell.c ****                     break;
 191:../utilities/fsl_shell.c ****                 case 'B': /* Down key */
 192:../utilities/fsl_shell.c ****                     GetHistoryCommand(context, context->hist_current);
 193:../utilities/fsl_shell.c ****                     if (context->hist_current > 0)
 194:../utilities/fsl_shell.c ****                     {
 195:../utilities/fsl_shell.c ****                         context->hist_current--;
 196:../utilities/fsl_shell.c ****                     }
 197:../utilities/fsl_shell.c ****                     break;
 198:../utilities/fsl_shell.c ****                 case 'D': /* Left key */
 199:../utilities/fsl_shell.c ****                     if (context->c_pos)
 200:../utilities/fsl_shell.c ****                     {
 201:../utilities/fsl_shell.c ****                         context->printf_data_func("\b");
 202:../utilities/fsl_shell.c ****                         context->c_pos--;
 203:../utilities/fsl_shell.c ****                     }
 204:../utilities/fsl_shell.c ****                     break;
 205:../utilities/fsl_shell.c ****                 case 'C': /* Right key */
 206:../utilities/fsl_shell.c ****                     if (context->c_pos < context->l_pos)
 207:../utilities/fsl_shell.c ****                     {
 208:../utilities/fsl_shell.c ****                         context->printf_data_func("%c", context->line[context->c_pos]);
 209:../utilities/fsl_shell.c ****                         context->c_pos++;
 210:../utilities/fsl_shell.c ****                     }
 211:../utilities/fsl_shell.c ****                     break;
 212:../utilities/fsl_shell.c ****                 default:
 213:../utilities/fsl_shell.c ****                     break;
 214:../utilities/fsl_shell.c ****             }
 215:../utilities/fsl_shell.c ****             continue;
 216:../utilities/fsl_shell.c ****         }
 217:../utilities/fsl_shell.c ****         /* Handle tab key */
 218:../utilities/fsl_shell.c ****         else if (ch == '\t')
 219:../utilities/fsl_shell.c ****         {
 220:../utilities/fsl_shell.c **** #if SHELL_AUTO_COMPLETE
 221:../utilities/fsl_shell.c ****             /* Move the cursor to the beginning of line */
 222:../utilities/fsl_shell.c ****             for (i = 0; i < context->c_pos; i++)
 223:../utilities/fsl_shell.c ****             {
 224:../utilities/fsl_shell.c ****                 context->printf_data_func("\b");
 225:../utilities/fsl_shell.c ****             }
 226:../utilities/fsl_shell.c ****             /* Do auto complete */
 227:../utilities/fsl_shell.c ****             AutoComplete(context);
 228:../utilities/fsl_shell.c ****             /* Move position to end */
 229:../utilities/fsl_shell.c ****             context->c_pos = context->l_pos = StrLen(context->line);
 230:../utilities/fsl_shell.c **** #endif
 231:../utilities/fsl_shell.c ****             continue;
 232:../utilities/fsl_shell.c ****         }
 233:../utilities/fsl_shell.c **** #if SHELL_SEARCH_IN_HIST
 234:../utilities/fsl_shell.c ****         /* Search command in history */
 235:../utilities/fsl_shell.c ****         else if ((ch == '`') && (context->l_pos == 0) && (context->line[0] == 0x00))
 236:../utilities/fsl_shell.c ****         {
 237:../utilities/fsl_shell.c ****         }
 238:../utilities/fsl_shell.c **** #endif
 239:../utilities/fsl_shell.c ****         /* Handle backspace key */
 240:../utilities/fsl_shell.c ****         else if ((ch == KET_DEL) || (ch == '\b'))
 241:../utilities/fsl_shell.c ****         {
 242:../utilities/fsl_shell.c ****             /* There must be at last one char */
 243:../utilities/fsl_shell.c ****             if (context->c_pos == 0)
 244:../utilities/fsl_shell.c ****             {
 245:../utilities/fsl_shell.c ****                 continue;
 246:../utilities/fsl_shell.c ****             }
 247:../utilities/fsl_shell.c **** 
 248:../utilities/fsl_shell.c ****             context->l_pos--;
 249:../utilities/fsl_shell.c ****             context->c_pos--;
 250:../utilities/fsl_shell.c **** 
 251:../utilities/fsl_shell.c ****             if (context->l_pos > context->c_pos)
 252:../utilities/fsl_shell.c ****             {
 253:../utilities/fsl_shell.c ****                 memmove(&context->line[context->c_pos], &context->line[context->c_pos + 1],
 254:../utilities/fsl_shell.c ****                         context->l_pos - context->c_pos);
 255:../utilities/fsl_shell.c ****                 context->line[context->l_pos] = 0;
 256:../utilities/fsl_shell.c ****                 context->printf_data_func("\b%s  \b", &context->line[context->c_pos]);
 257:../utilities/fsl_shell.c **** 
 258:../utilities/fsl_shell.c ****                 /* Reset position */
 259:../utilities/fsl_shell.c ****                 for (i = context->c_pos; i <= context->l_pos; i++)
 260:../utilities/fsl_shell.c ****                 {
 261:../utilities/fsl_shell.c ****                     context->printf_data_func("\b");
 262:../utilities/fsl_shell.c ****                 }
 263:../utilities/fsl_shell.c ****             }
 264:../utilities/fsl_shell.c ****             else /* Normal backspace operation */
 265:../utilities/fsl_shell.c ****             {
 266:../utilities/fsl_shell.c ****                 context->printf_data_func("\b \b");
 267:../utilities/fsl_shell.c ****                 context->line[context->l_pos] = 0;
 268:../utilities/fsl_shell.c ****             }
 269:../utilities/fsl_shell.c ****             continue;
 270:../utilities/fsl_shell.c ****         }
 271:../utilities/fsl_shell.c ****         else
 272:../utilities/fsl_shell.c ****         {
 273:../utilities/fsl_shell.c ****         }
 274:../utilities/fsl_shell.c **** 
 275:../utilities/fsl_shell.c ****         /* Input too long */
 276:../utilities/fsl_shell.c ****         if (context->l_pos >= (SHELL_BUFFER_SIZE - 1))
 277:../utilities/fsl_shell.c ****         {
 278:../utilities/fsl_shell.c ****             context->l_pos = 0;
 279:../utilities/fsl_shell.c ****         }
 280:../utilities/fsl_shell.c **** 
 281:../utilities/fsl_shell.c ****         /* Handle end of line, break */
 282:../utilities/fsl_shell.c ****         if ((ch == '\r') || (ch == '\n'))
 283:../utilities/fsl_shell.c ****         {
 284:../utilities/fsl_shell.c ****             static char endoflinechar = 0U;
 285:../utilities/fsl_shell.c **** 
 286:../utilities/fsl_shell.c ****             if ((endoflinechar != 0U) && (endoflinechar != ch))
 287:../utilities/fsl_shell.c ****             {
 288:../utilities/fsl_shell.c ****                 continue;
 289:../utilities/fsl_shell.c ****             }
 290:../utilities/fsl_shell.c ****             else
 291:../utilities/fsl_shell.c ****             {
 292:../utilities/fsl_shell.c ****                 endoflinechar = ch;
 293:../utilities/fsl_shell.c ****                 context->printf_data_func("\r\n");
 294:../utilities/fsl_shell.c ****                 /* If command line is NULL, will start a new transfer */
 295:../utilities/fsl_shell.c ****                 if (0U == StrLen(context->line))
 296:../utilities/fsl_shell.c ****                 {
 297:../utilities/fsl_shell.c ****                     context->printf_data_func(context->prompt);
 298:../utilities/fsl_shell.c ****                     continue;
 299:../utilities/fsl_shell.c ****                 }
 300:../utilities/fsl_shell.c ****                 ProcessCommand(context, context->line);
 301:../utilities/fsl_shell.c ****                 /* Reset all params */
 302:../utilities/fsl_shell.c ****                 context->c_pos = context->l_pos = 0;
 303:../utilities/fsl_shell.c ****                 context->hist_current = 0;
 304:../utilities/fsl_shell.c ****                 context->printf_data_func(context->prompt);
 305:../utilities/fsl_shell.c ****                 memset(context->line, 0, sizeof(context->line));
 306:../utilities/fsl_shell.c ****                 continue;
 307:../utilities/fsl_shell.c ****             }
 308:../utilities/fsl_shell.c ****         }
 309:../utilities/fsl_shell.c **** 
 310:../utilities/fsl_shell.c ****         /* Normal character */
 311:../utilities/fsl_shell.c ****         if (context->c_pos < context->l_pos)
 312:../utilities/fsl_shell.c ****         {
 313:../utilities/fsl_shell.c ****             memmove(&context->line[context->c_pos + 1], &context->line[context->c_pos],
 314:../utilities/fsl_shell.c ****                     context->l_pos - context->c_pos);
 315:../utilities/fsl_shell.c ****             context->line[context->c_pos] = ch;
 316:../utilities/fsl_shell.c ****             context->printf_data_func("%s", &context->line[context->c_pos]);
 317:../utilities/fsl_shell.c ****             /* Move the cursor to new position */
 318:../utilities/fsl_shell.c ****             for (i = context->c_pos; i < context->l_pos; i++)
 319:../utilities/fsl_shell.c ****             {
 320:../utilities/fsl_shell.c ****                 context->printf_data_func("\b");
 321:../utilities/fsl_shell.c ****             }
 322:../utilities/fsl_shell.c ****         }
 323:../utilities/fsl_shell.c ****         else
 324:../utilities/fsl_shell.c ****         {
 325:../utilities/fsl_shell.c ****             context->line[context->l_pos] = ch;
 326:../utilities/fsl_shell.c ****             context->printf_data_func("%c", ch);
 327:../utilities/fsl_shell.c ****         }
 328:../utilities/fsl_shell.c **** 
 329:../utilities/fsl_shell.c ****         ch = 0;
 330:../utilities/fsl_shell.c ****         context->l_pos++;
 331:../utilities/fsl_shell.c ****         context->c_pos++;
 332:../utilities/fsl_shell.c ****     }
 333:../utilities/fsl_shell.c ****     return 0;
 334:../utilities/fsl_shell.c **** }
 335:../utilities/fsl_shell.c **** 
 336:../utilities/fsl_shell.c **** static int32_t HelpCommand(p_shell_context_t context, int32_t argc, char **argv)
 337:../utilities/fsl_shell.c **** {
  27              		.loc 1 337 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  32 0000 70B5     		push	{r4, r5, r6, lr}
  33              		.cfi_def_cfa_offset 16
  34              		.cfi_offset 4, -16
  35              		.cfi_offset 5, -12
  36              		.cfi_offset 6, -8
  37              		.cfi_offset 14, -4
 338:../utilities/fsl_shell.c ****     uint8_t i = 0;
 339:../utilities/fsl_shell.c **** 
 340:../utilities/fsl_shell.c ****     for (i = 0; i < g_RegisteredCommands.numberOfCommandInList; i++)
  38              		.loc 1 340 0
  39 0002 094C     		ldr	r4, .L4
 337:../utilities/fsl_shell.c ****     uint8_t i = 0;
  40              		.loc 1 337 0
  41 0004 0646     		mov	r6, r0
  42              		.loc 1 340 0
  43 0006 0023     		movs	r3, #0
  44              	.LVL1:
  45              	.L2:
  46              		.loc 1 340 0 is_stmt 0 discriminator 1
  47 0008 94F85020 		ldrb	r2, [r4, #80]	@ zero_extendqisi2
  48 000c 5D1C     		adds	r5, r3, #1
  49 000e DBB2     		uxtb	r3, r3
  50 0010 9A42     		cmp	r2, r3
  51 0012 01D8     		bhi	.L3
 341:../utilities/fsl_shell.c ****     {
 342:../utilities/fsl_shell.c ****         context->printf_data_func(g_RegisteredCommands.CommandList[i]->pcHelpString);
 343:../utilities/fsl_shell.c ****     }
 344:../utilities/fsl_shell.c ****     return 0;
 345:../utilities/fsl_shell.c **** }
  52              		.loc 1 345 0 is_stmt 1
  53 0014 0020     		movs	r0, #0
  54 0016 70BD     		pop	{r4, r5, r6, pc}
  55              	.LVL2:
  56              	.L3:
 342:../utilities/fsl_shell.c ****     }
  57              		.loc 1 342 0 discriminator 3
  58 0018 54F82320 		ldr	r2, [r4, r3, lsl #2]
  59 001c 336D     		ldr	r3, [r6, #80]
  60              	.LVL3:
  61 001e 5068     		ldr	r0, [r2, #4]
  62 0020 9847     		blx	r3
  63              	.LVL4:
  64 0022 2B46     		mov	r3, r5
  65 0024 F0E7     		b	.L2
  66              	.L5:
  67 0026 00BF     		.align	2
  68              	.L4:
  69 0028 00000000 		.word	.LANCHOR0
  70              		.cfi_endproc
  71              	.LFE149:
  73              		.section	.text.ExitCommand,"ax",%progbits
  74              		.align	1
  75              		.syntax unified
  76              		.thumb
  77              		.thumb_func
  78              		.fpu fpv4-sp-d16
  80              	ExitCommand:
  81              	.LFB150:
 346:../utilities/fsl_shell.c **** 
 347:../utilities/fsl_shell.c **** static int32_t ExitCommand(p_shell_context_t context, int32_t argc, char **argv)
 348:../utilities/fsl_shell.c **** {
  82              		.loc 1 348 0
  83              		.cfi_startproc
  84              		@ args = 0, pretend = 0, frame = 0
  85              		@ frame_needed = 0, uses_anonymous_args = 0
  86              	.LVL5:
  87 0000 10B5     		push	{r4, lr}
  88              		.cfi_def_cfa_offset 8
  89              		.cfi_offset 4, -8
  90              		.cfi_offset 14, -4
 349:../utilities/fsl_shell.c ****     /* Skip warning */
 350:../utilities/fsl_shell.c ****     context->printf_data_func("\r\nSHELL exited\r\n");
  91              		.loc 1 350 0
  92 0002 036D     		ldr	r3, [r0, #80]
 348:../utilities/fsl_shell.c ****     /* Skip warning */
  93              		.loc 1 348 0
  94 0004 0446     		mov	r4, r0
  95              		.loc 1 350 0
  96 0006 0348     		ldr	r0, .L7
  97              	.LVL6:
  98 0008 9847     		blx	r3
  99              	.LVL7:
 351:../utilities/fsl_shell.c ****     context->exit = true;
 100              		.loc 1 351 0
 101 000a 0123     		movs	r3, #1
 102 000c 84F81831 		strb	r3, [r4, #280]
 352:../utilities/fsl_shell.c ****     return 0;
 353:../utilities/fsl_shell.c **** }
 103              		.loc 1 353 0
 104 0010 0020     		movs	r0, #0
 105 0012 10BD     		pop	{r4, pc}
 106              	.LVL8:
 107              	.L8:
 108              		.align	2
 109              	.L7:
 110 0014 00000000 		.word	.LC0
 111              		.cfi_endproc
 112              	.LFE150:
 114              		.section	.text.StrCopy,"ax",%progbits
 115              		.align	1
 116              		.syntax unified
 117              		.thumb
 118              		.thumb_func
 119              		.fpu fpv4-sp-d16
 121              	StrCopy:
 122              	.LFB154:
 354:../utilities/fsl_shell.c **** 
 355:../utilities/fsl_shell.c **** static void ProcessCommand(p_shell_context_t context, const char *cmd)
 356:../utilities/fsl_shell.c **** {
 357:../utilities/fsl_shell.c ****     static const shell_command_context_t *tmpCommand = NULL;
 358:../utilities/fsl_shell.c ****     static const char *tmpCommandString;
 359:../utilities/fsl_shell.c ****     int32_t argc;
 360:../utilities/fsl_shell.c ****     char *argv[SHELL_BUFFER_SIZE];
 361:../utilities/fsl_shell.c ****     uint8_t flag = 1;
 362:../utilities/fsl_shell.c ****     uint8_t tmpCommandLen;
 363:../utilities/fsl_shell.c ****     uint8_t tmpLen;
 364:../utilities/fsl_shell.c ****     uint8_t i = 0;
 365:../utilities/fsl_shell.c **** 
 366:../utilities/fsl_shell.c ****     tmpLen = StrLen(cmd);
 367:../utilities/fsl_shell.c ****     argc = ParseLine(cmd, tmpLen, argv);
 368:../utilities/fsl_shell.c **** 
 369:../utilities/fsl_shell.c ****     if ((tmpCommand == NULL) && (argc > 0))
 370:../utilities/fsl_shell.c ****     {
 371:../utilities/fsl_shell.c ****         for (i = 0; i < g_RegisteredCommands.numberOfCommandInList; i++)
 372:../utilities/fsl_shell.c ****         {
 373:../utilities/fsl_shell.c ****             tmpCommand = g_RegisteredCommands.CommandList[i];
 374:../utilities/fsl_shell.c ****             tmpCommandString = tmpCommand->pcCommand;
 375:../utilities/fsl_shell.c ****             tmpCommandLen = StrLen(tmpCommandString);
 376:../utilities/fsl_shell.c ****             /* Compare with space or end of string */
 377:../utilities/fsl_shell.c ****             if ((cmd[tmpCommandLen] == ' ') || (cmd[tmpCommandLen] == 0x00))
 378:../utilities/fsl_shell.c ****             {
 379:../utilities/fsl_shell.c ****                 if (StrCompare(tmpCommandString, argv[0], tmpCommandLen) == 0)
 380:../utilities/fsl_shell.c ****                 {
 381:../utilities/fsl_shell.c ****                     /* support commands with optional number of parameters */
 382:../utilities/fsl_shell.c ****                     if (tmpCommand->cExpectedNumberOfParameters == SHELL_OPTIONAL_PARAMS)
 383:../utilities/fsl_shell.c ****                     {
 384:../utilities/fsl_shell.c ****                         flag = 0;
 385:../utilities/fsl_shell.c ****                     }
 386:../utilities/fsl_shell.c ****                     else if ((tmpCommand->cExpectedNumberOfParameters == 0) && (argc == 1))
 387:../utilities/fsl_shell.c ****                     {
 388:../utilities/fsl_shell.c ****                         flag = 0;
 389:../utilities/fsl_shell.c ****                     }
 390:../utilities/fsl_shell.c ****                     else if (tmpCommand->cExpectedNumberOfParameters > 0)
 391:../utilities/fsl_shell.c ****                     {
 392:../utilities/fsl_shell.c ****                         if ((argc - 1) == tmpCommand->cExpectedNumberOfParameters)
 393:../utilities/fsl_shell.c ****                         {
 394:../utilities/fsl_shell.c ****                             flag = 0;
 395:../utilities/fsl_shell.c ****                         }
 396:../utilities/fsl_shell.c ****                     }
 397:../utilities/fsl_shell.c ****                     else
 398:../utilities/fsl_shell.c ****                     {
 399:../utilities/fsl_shell.c ****                         flag = 1;
 400:../utilities/fsl_shell.c ****                     }
 401:../utilities/fsl_shell.c ****                     break;
 402:../utilities/fsl_shell.c ****                 }
 403:../utilities/fsl_shell.c ****             }
 404:../utilities/fsl_shell.c ****         }
 405:../utilities/fsl_shell.c ****     }
 406:../utilities/fsl_shell.c **** 
 407:../utilities/fsl_shell.c ****     if ((tmpCommand != NULL) && (flag == 1U))
 408:../utilities/fsl_shell.c ****     {
 409:../utilities/fsl_shell.c ****         context->printf_data_func(
 410:../utilities/fsl_shell.c ****             "\r\nIncorrect command parameter(s).  Enter \"help\" to view a list of available comman
 411:../utilities/fsl_shell.c ****         tmpCommand = NULL;
 412:../utilities/fsl_shell.c ****     }
 413:../utilities/fsl_shell.c ****     else if (tmpCommand != NULL)
 414:../utilities/fsl_shell.c ****     {
 415:../utilities/fsl_shell.c ****         tmpLen = StrLen(cmd);
 416:../utilities/fsl_shell.c ****         /* Compare with last command. Push back to history buffer if different */
 417:../utilities/fsl_shell.c ****         if (tmpLen != StrCompare(cmd, context->hist_buf[0], StrLen(cmd)))
 418:../utilities/fsl_shell.c ****         {
 419:../utilities/fsl_shell.c ****             for (i = SHELL_HIST_MAX - 1; i > 0; i--)
 420:../utilities/fsl_shell.c ****             {
 421:../utilities/fsl_shell.c ****                 memset(context->hist_buf[i], '\0', SHELL_BUFFER_SIZE);
 422:../utilities/fsl_shell.c ****                 tmpLen = StrLen(context->hist_buf[i - 1]);
 423:../utilities/fsl_shell.c ****                 StrCopy(context->hist_buf[i], context->hist_buf[i - 1], tmpLen);
 424:../utilities/fsl_shell.c ****             }
 425:../utilities/fsl_shell.c ****             memset(context->hist_buf[0], '\0', SHELL_BUFFER_SIZE);
 426:../utilities/fsl_shell.c ****             tmpLen = StrLen(cmd);
 427:../utilities/fsl_shell.c ****             StrCopy(context->hist_buf[0], cmd, tmpLen);
 428:../utilities/fsl_shell.c ****             if (context->hist_count < SHELL_HIST_MAX)
 429:../utilities/fsl_shell.c ****             {
 430:../utilities/fsl_shell.c ****                 context->hist_count++;
 431:../utilities/fsl_shell.c ****             }
 432:../utilities/fsl_shell.c ****         }
 433:../utilities/fsl_shell.c ****         tmpCommand->pFuncCallBack(context, argc, argv);
 434:../utilities/fsl_shell.c ****         tmpCommand = NULL;
 435:../utilities/fsl_shell.c ****     }
 436:../utilities/fsl_shell.c ****     else
 437:../utilities/fsl_shell.c ****     {
 438:../utilities/fsl_shell.c ****         context->printf_data_func(
 439:../utilities/fsl_shell.c ****             "\r\nCommand not recognised.  Enter 'help' to view a list of available commands.\r\n\r\
 440:../utilities/fsl_shell.c ****         tmpCommand = NULL;
 441:../utilities/fsl_shell.c ****     }
 442:../utilities/fsl_shell.c **** }
 443:../utilities/fsl_shell.c **** 
 444:../utilities/fsl_shell.c **** static void GetHistoryCommand(p_shell_context_t context, uint8_t hist_pos)
 445:../utilities/fsl_shell.c **** {
 446:../utilities/fsl_shell.c ****     uint8_t i;
 447:../utilities/fsl_shell.c ****     uint32_t tmp;
 448:../utilities/fsl_shell.c **** 
 449:../utilities/fsl_shell.c ****     if (context->hist_buf[0][0] == '\0')
 450:../utilities/fsl_shell.c ****     {
 451:../utilities/fsl_shell.c ****         context->hist_current = 0;
 452:../utilities/fsl_shell.c ****         return;
 453:../utilities/fsl_shell.c ****     }
 454:../utilities/fsl_shell.c ****     if (hist_pos >= SHELL_HIST_MAX)
 455:../utilities/fsl_shell.c ****     {
 456:../utilities/fsl_shell.c ****         hist_pos = SHELL_HIST_MAX - 1;
 457:../utilities/fsl_shell.c ****     }
 458:../utilities/fsl_shell.c ****     tmp = StrLen(context->line);
 459:../utilities/fsl_shell.c ****     /* Clear current if have */
 460:../utilities/fsl_shell.c ****     if (tmp > 0)
 461:../utilities/fsl_shell.c ****     {
 462:../utilities/fsl_shell.c ****         memset(context->line, '\0', tmp);
 463:../utilities/fsl_shell.c ****         for (i = 0; i < tmp; i++)
 464:../utilities/fsl_shell.c ****         {
 465:../utilities/fsl_shell.c ****             context->printf_data_func("\b \b");
 466:../utilities/fsl_shell.c ****         }
 467:../utilities/fsl_shell.c ****     }
 468:../utilities/fsl_shell.c **** 
 469:../utilities/fsl_shell.c ****     context->l_pos = StrLen(context->hist_buf[hist_pos]);
 470:../utilities/fsl_shell.c ****     context->c_pos = context->l_pos;
 471:../utilities/fsl_shell.c ****     StrCopy(context->line, context->hist_buf[hist_pos], context->l_pos);
 472:../utilities/fsl_shell.c ****     context->printf_data_func(context->hist_buf[hist_pos]);
 473:../utilities/fsl_shell.c **** }
 474:../utilities/fsl_shell.c **** 
 475:../utilities/fsl_shell.c **** static void AutoComplete(p_shell_context_t context)
 476:../utilities/fsl_shell.c **** {
 477:../utilities/fsl_shell.c ****     int32_t len;
 478:../utilities/fsl_shell.c ****     int32_t minLen;
 479:../utilities/fsl_shell.c ****     uint8_t i = 0;
 480:../utilities/fsl_shell.c ****     const shell_command_context_t *tmpCommand = NULL;
 481:../utilities/fsl_shell.c ****     const char *namePtr;
 482:../utilities/fsl_shell.c ****     const char *cmdName;
 483:../utilities/fsl_shell.c **** 
 484:../utilities/fsl_shell.c ****     minLen = 0;
 485:../utilities/fsl_shell.c ****     namePtr = NULL;
 486:../utilities/fsl_shell.c **** 
 487:../utilities/fsl_shell.c ****     if (!StrLen(context->line))
 488:../utilities/fsl_shell.c ****     {
 489:../utilities/fsl_shell.c ****         return;
 490:../utilities/fsl_shell.c ****     }
 491:../utilities/fsl_shell.c ****     context->printf_data_func("\r\n");
 492:../utilities/fsl_shell.c ****     /* Empty tab, list all commands */
 493:../utilities/fsl_shell.c ****     if (context->line[0] == '\0')
 494:../utilities/fsl_shell.c ****     {
 495:../utilities/fsl_shell.c ****         HelpCommand(context, 0, NULL);
 496:../utilities/fsl_shell.c ****         return;
 497:../utilities/fsl_shell.c ****     }
 498:../utilities/fsl_shell.c ****     /* Do auto complete */
 499:../utilities/fsl_shell.c ****     for (i = 0; i < g_RegisteredCommands.numberOfCommandInList; i++)
 500:../utilities/fsl_shell.c ****     {
 501:../utilities/fsl_shell.c ****         tmpCommand = g_RegisteredCommands.CommandList[i];
 502:../utilities/fsl_shell.c ****         cmdName = tmpCommand->pcCommand;
 503:../utilities/fsl_shell.c ****         if (StrCompare(context->line, cmdName, StrLen(context->line)) == 0)
 504:../utilities/fsl_shell.c ****         {
 505:../utilities/fsl_shell.c ****             if (minLen == 0)
 506:../utilities/fsl_shell.c ****             {
 507:../utilities/fsl_shell.c ****                 namePtr = cmdName;
 508:../utilities/fsl_shell.c ****                 minLen = StrLen(namePtr);
 509:../utilities/fsl_shell.c ****                 /* Show possible matches */
 510:../utilities/fsl_shell.c ****                 context->printf_data_func("%s\r\n", cmdName);
 511:../utilities/fsl_shell.c ****                 continue;
 512:../utilities/fsl_shell.c ****             }
 513:../utilities/fsl_shell.c ****             len = StrCompare(namePtr, cmdName, StrLen(namePtr));
 514:../utilities/fsl_shell.c ****             if (len < 0)
 515:../utilities/fsl_shell.c ****             {
 516:../utilities/fsl_shell.c ****                 len = len * (-1);
 517:../utilities/fsl_shell.c ****             }
 518:../utilities/fsl_shell.c ****             if (len < minLen)
 519:../utilities/fsl_shell.c ****             {
 520:../utilities/fsl_shell.c ****                 minLen = len;
 521:../utilities/fsl_shell.c ****             }
 522:../utilities/fsl_shell.c ****         }
 523:../utilities/fsl_shell.c ****     }
 524:../utilities/fsl_shell.c ****     /* Auto complete string */
 525:../utilities/fsl_shell.c ****     if (namePtr)
 526:../utilities/fsl_shell.c ****     {
 527:../utilities/fsl_shell.c ****         StrCopy(context->line, namePtr, minLen);
 528:../utilities/fsl_shell.c ****     }
 529:../utilities/fsl_shell.c ****     context->printf_data_func("%s%s", context->prompt, context->line);
 530:../utilities/fsl_shell.c ****     return;
 531:../utilities/fsl_shell.c **** }
 532:../utilities/fsl_shell.c **** 
 533:../utilities/fsl_shell.c **** static char *StrCopy(char *dest, const char *src, int32_t count)
 534:../utilities/fsl_shell.c **** {
 123              		.loc 1 534 0
 124              		.cfi_startproc
 125              		@ args = 0, pretend = 0, frame = 0
 126              		@ frame_needed = 0, uses_anonymous_args = 0
 127              	.LVL9:
 128 0000 10B5     		push	{r4, lr}
 129              		.cfi_def_cfa_offset 8
 130              		.cfi_offset 4, -8
 131              		.cfi_offset 14, -4
 535:../utilities/fsl_shell.c ****     char *ret = dest;
 536:../utilities/fsl_shell.c ****     int32_t i = 0;
 537:../utilities/fsl_shell.c **** 
 538:../utilities/fsl_shell.c ****     for (i = 0; i < count; i++)
 132              		.loc 1 538 0
 133 0002 0023     		movs	r3, #0
 134              	.LVL10:
 135              	.L10:
 136              		.loc 1 538 0 is_stmt 0 discriminator 1
 137 0004 9342     		cmp	r3, r2
 138 0006 00DB     		blt	.L11
 539:../utilities/fsl_shell.c ****     {
 540:../utilities/fsl_shell.c ****         dest[i] = src[i];
 541:../utilities/fsl_shell.c ****     }
 542:../utilities/fsl_shell.c **** 
 543:../utilities/fsl_shell.c ****     return ret;
 544:../utilities/fsl_shell.c **** }
 139              		.loc 1 544 0 is_stmt 1
 140 0008 10BD     		pop	{r4, pc}
 141              	.L11:
 540:../utilities/fsl_shell.c ****     }
 142              		.loc 1 540 0 discriminator 3
 143 000a CC56     		ldrsb	r4, [r1, r3]
 144 000c C454     		strb	r4, [r0, r3]
 538:../utilities/fsl_shell.c ****     {
 145              		.loc 1 538 0 discriminator 3
 146 000e 0133     		adds	r3, r3, #1
 147              	.LVL11:
 148 0010 F8E7     		b	.L10
 149              		.cfi_endproc
 150              	.LFE154:
 152              		.section	.text.StrLen,"ax",%progbits
 153              		.align	1
 154              		.syntax unified
 155              		.thumb
 156              		.thumb_func
 157              		.fpu fpv4-sp-d16
 159              	StrLen:
 160              	.LFB155:
 545:../utilities/fsl_shell.c **** 
 546:../utilities/fsl_shell.c **** static int32_t StrLen(const char *str)
 547:../utilities/fsl_shell.c **** {
 161              		.loc 1 547 0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 0
 164              		@ frame_needed = 0, uses_anonymous_args = 0
 165              		@ link register save eliminated.
 166              	.LVL12:
 167              		.loc 1 547 0
 168 0000 0246     		mov	r2, r0
 548:../utilities/fsl_shell.c ****     int32_t i = 0;
 549:../utilities/fsl_shell.c **** 
 550:../utilities/fsl_shell.c ****     while (*str)
 169              		.loc 1 550 0
 170 0002 0346     		mov	r3, r0
 171              	.LVL13:
 172              	.L13:
 173 0004 981A     		subs	r0, r3, r2
 174              	.LVL14:
 175 0006 13F9011B 		ldrsb	r1, [r3], #1
 176              	.LVL15:
 177 000a 0029     		cmp	r1, #0
 178 000c FAD1     		bne	.L13
 551:../utilities/fsl_shell.c ****     {
 552:../utilities/fsl_shell.c ****         str++;
 553:../utilities/fsl_shell.c ****         i++;
 554:../utilities/fsl_shell.c ****     }
 555:../utilities/fsl_shell.c ****     return i;
 556:../utilities/fsl_shell.c **** }
 179              		.loc 1 556 0
 180 000e 7047     		bx	lr
 181              		.cfi_endproc
 182              	.LFE155:
 184              		.section	.text.StrCompare,"ax",%progbits
 185              		.align	1
 186              		.syntax unified
 187              		.thumb
 188              		.thumb_func
 189              		.fpu fpv4-sp-d16
 191              	StrCompare:
 192              	.LFB156:
 557:../utilities/fsl_shell.c **** 
 558:../utilities/fsl_shell.c **** static int32_t StrCompare(const char *str1, const char *str2, int32_t count)
 559:../utilities/fsl_shell.c **** {
 193              		.loc 1 559 0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 0
 196              		@ frame_needed = 0, uses_anonymous_args = 0
 197              	.LVL16:
 198 0000 10B5     		push	{r4, lr}
 199              		.cfi_def_cfa_offset 8
 200              		.cfi_offset 4, -8
 201              		.cfi_offset 14, -4
 202 0002 0A44     		add	r2, r2, r1
 203              	.LVL17:
 204              	.L16:
 560:../utilities/fsl_shell.c ****     while (count--)
 205              		.loc 1 560 0
 206 0004 9142     		cmp	r1, r2
 207 0006 01D1     		bne	.L18
 561:../utilities/fsl_shell.c ****     {
 562:../utilities/fsl_shell.c ****         if (*str1++ != *str2++)
 563:../utilities/fsl_shell.c ****         {
 564:../utilities/fsl_shell.c ****             return *(unsigned char *)(str1 - 1) - *(unsigned char *)(str2 - 1);
 565:../utilities/fsl_shell.c ****         }
 566:../utilities/fsl_shell.c ****     }
 567:../utilities/fsl_shell.c ****     return 0;
 208              		.loc 1 567 0
 209 0008 0020     		movs	r0, #0
 210              	.LVL18:
 568:../utilities/fsl_shell.c **** }
 211              		.loc 1 568 0
 212 000a 10BD     		pop	{r4, pc}
 213              	.LVL19:
 214              	.L18:
 562:../utilities/fsl_shell.c ****         {
 215              		.loc 1 562 0
 216 000c 10F9013B 		ldrsb	r3, [r0], #1
 217              	.LVL20:
 218 0010 11F9014B 		ldrsb	r4, [r1], #1
 219              	.LVL21:
 220 0014 A342     		cmp	r3, r4
 221 0016 F5D0     		beq	.L16
 564:../utilities/fsl_shell.c ****         }
 222              		.loc 1 564 0
 223 0018 DBB2     		uxtb	r3, r3
 224 001a E0B2     		uxtb	r0, r4
 225              	.LVL22:
 226 001c 181A     		subs	r0, r3, r0
 227 001e 10BD     		pop	{r4, pc}
 228              		.cfi_endproc
 229              	.LFE156:
 231              		.section	.text.GetHistoryCommand,"ax",%progbits
 232              		.align	1
 233              		.syntax unified
 234              		.thumb
 235              		.thumb_func
 236              		.fpu fpv4-sp-d16
 238              	GetHistoryCommand:
 239              	.LFB152:
 445:../utilities/fsl_shell.c ****     uint8_t i;
 240              		.loc 1 445 0
 241              		.cfi_startproc
 242              		@ args = 0, pretend = 0, frame = 0
 243              		@ frame_needed = 0, uses_anonymous_args = 0
 244              	.LVL23:
 245 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 246              		.cfi_def_cfa_offset 32
 247              		.cfi_offset 4, -32
 248              		.cfi_offset 5, -28
 249              		.cfi_offset 6, -24
 250              		.cfi_offset 7, -20
 251              		.cfi_offset 8, -16
 252              		.cfi_offset 9, -12
 253              		.cfi_offset 10, -8
 254              		.cfi_offset 14, -4
 449:../utilities/fsl_shell.c ****     {
 255              		.loc 1 449 0
 256 0004 90F95830 		ldrsb	r3, [r0, #88]
 445:../utilities/fsl_shell.c ****     uint8_t i;
 257              		.loc 1 445 0
 258 0008 0546     		mov	r5, r0
 449:../utilities/fsl_shell.c ****     {
 259              		.loc 1 449 0
 260 000a 1BB9     		cbnz	r3, .L21
 451:../utilities/fsl_shell.c ****         return;
 261              		.loc 1 451 0
 262 000c A0F85430 		strh	r3, [r0, #84]	@ movhi
 452:../utilities/fsl_shell.c ****     }
 263              		.loc 1 452 0
 264 0010 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 265              	.L21:
 266              	.LVL24:
 267 0014 0229     		cmp	r1, #2
 268              	.LBB4:
 269              	.LBB5:
 458:../utilities/fsl_shell.c ****     /* Clear current if have */
 270              		.loc 1 458 0
 271 0016 00F10506 		add	r6, r0, #5
 272 001a 28BF     		it	cs
 273 001c 0221     		movcs	r1, #2
 274              	.LVL25:
 275 001e 3046     		mov	r0, r6
 276              	.LVL26:
 277 0020 0C46     		mov	r4, r1
 278              	.LVL27:
 279 0022 FFF7FEFF 		bl	StrLen
 280              	.LVL28:
 460:../utilities/fsl_shell.c ****     {
 281              		.loc 1 460 0
 282 0026 8046     		mov	r8, r0
 283 0028 98B9     		cbnz	r0, .L23
 284              	.LVL29:
 285              	.L26:
 469:../utilities/fsl_shell.c ****     context->c_pos = context->l_pos;
 286              		.loc 1 469 0
 287 002a 05EB8414 		add	r4, r5, r4, lsl #6
 288              	.LVL30:
 289 002e 5834     		adds	r4, r4, #88
 290 0030 2046     		mov	r0, r4
 291 0032 FFF7FEFF 		bl	StrLen
 292              	.LVL31:
 293 0036 C2B2     		uxtb	r2, r0
 294 0038 85F84620 		strb	r2, [r5, #70]
 470:../utilities/fsl_shell.c ****     StrCopy(context->line, context->hist_buf[hist_pos], context->l_pos);
 295              		.loc 1 470 0
 296 003c 85F84720 		strb	r2, [r5, #71]
 471:../utilities/fsl_shell.c ****     context->printf_data_func(context->hist_buf[hist_pos]);
 297              		.loc 1 471 0
 298 0040 2146     		mov	r1, r4
 299 0042 3046     		mov	r0, r6
 300 0044 FFF7FEFF 		bl	StrCopy
 301              	.LVL32:
 472:../utilities/fsl_shell.c **** }
 302              		.loc 1 472 0
 303 0048 2B6D     		ldr	r3, [r5, #80]
 304 004a 2046     		mov	r0, r4
 305              	.LBE5:
 306              	.LBE4:
 473:../utilities/fsl_shell.c **** 
 307              		.loc 1 473 0
 308 004c BDE8F047 		pop	{r4, r5, r6, r7, r8, r9, r10, lr}
 309              		.cfi_remember_state
 310              		.cfi_restore 14
 311              		.cfi_restore 10
 312              		.cfi_restore 9
 313              		.cfi_restore 8
 314              		.cfi_restore 7
 315              		.cfi_restore 6
 316              		.cfi_restore 5
 317              		.cfi_restore 4
 318              		.cfi_def_cfa_offset 0
 319              	.LVL33:
 320              	.LBB7:
 321              	.LBB6:
 472:../utilities/fsl_shell.c **** }
 322              		.loc 1 472 0
 323 0050 1847     		bx	r3
 324              	.LVL34:
 325              	.L23:
 326              		.cfi_restore_state
 462:../utilities/fsl_shell.c ****         for (i = 0; i < tmp; i++)
 327              		.loc 1 462 0
 328 0052 0246     		mov	r2, r0
 329 0054 0021     		movs	r1, #0
 330 0056 3046     		mov	r0, r6
 331              	.LVL35:
 332 0058 FFF7FEFF 		bl	memset
 333              	.LVL36:
 465:../utilities/fsl_shell.c ****         }
 334              		.loc 1 465 0
 335 005c DFF81490 		ldr	r9, .L28
 462:../utilities/fsl_shell.c ****         for (i = 0; i < tmp; i++)
 336              		.loc 1 462 0
 337 0060 0027     		movs	r7, #0
 338              	.LVL37:
 339              	.L24:
 340 0062 FBB2     		uxtb	r3, r7
 463:../utilities/fsl_shell.c ****         {
 341              		.loc 1 463 0
 342 0064 9845     		cmp	r8, r3
 343 0066 07F10107 		add	r7, r7, #1
 344              	.LVL38:
 345 006a DED9     		bls	.L26
 465:../utilities/fsl_shell.c ****         }
 346              		.loc 1 465 0
 347 006c 2B6D     		ldr	r3, [r5, #80]
 348              	.LVL39:
 349 006e 4846     		mov	r0, r9
 350 0070 9847     		blx	r3
 351              	.LVL40:
 352 0072 F6E7     		b	.L24
 353              	.L29:
 354              		.align	2
 355              	.L28:
 356 0074 00000000 		.word	.LC1
 357              	.LBE6:
 358              	.LBE7:
 359              		.cfi_endproc
 360              	.LFE152:
 362              		.section	.text.SHELL_Main,"ax",%progbits
 363              		.align	1
 364              		.global	SHELL_Main
 365              		.syntax unified
 366              		.thumb
 367              		.thumb_func
 368              		.fpu fpv4-sp-d16
 370              	SHELL_Main:
 371              	.LFB148:
 135:../utilities/fsl_shell.c ****     uint8_t ch;
 372              		.loc 1 135 0
 373              		.cfi_startproc
 374              		@ args = 0, pretend = 0, frame = 264
 375              		@ frame_needed = 0, uses_anonymous_args = 0
 376              	.LVL41:
 377 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 378              		.cfi_def_cfa_offset 36
 379              		.cfi_offset 4, -36
 380              		.cfi_offset 5, -32
 381              		.cfi_offset 6, -28
 382              		.cfi_offset 7, -24
 383              		.cfi_offset 8, -20
 384              		.cfi_offset 9, -16
 385              		.cfi_offset 10, -12
 386              		.cfi_offset 11, -8
 387              		.cfi_offset 14, -4
 139:../utilities/fsl_shell.c ****     {
 388              		.loc 1 139 0
 389 0004 0446     		mov	r4, r0
 135:../utilities/fsl_shell.c ****     uint8_t ch;
 390              		.loc 1 135 0
 391 0006 C3B0     		sub	sp, sp, #268
 392              		.cfi_def_cfa_offset 304
 139:../utilities/fsl_shell.c ****     {
 393              		.loc 1 139 0
 394 0008 0028     		cmp	r0, #0
 395 000a 00F06B82 		beq	.L94
 144:../utilities/fsl_shell.c ****     context->printf_data_func("\r\nSHELL (build: %s)\r\n", __DATE__);
 396              		.loc 1 144 0
 397 000e 0023     		movs	r3, #0
 398 0010 80F81831 		strb	r3, [r0, #280]
 145:../utilities/fsl_shell.c ****     context->printf_data_func("Copyright (c) 2017 NXP Semiconductor\r\n");
 399              		.loc 1 145 0
 400 0014 B449     		ldr	r1, .L141
 401 0016 036D     		ldr	r3, [r0, #80]
 402 0018 B448     		ldr	r0, .L141+4
 403              	.LVL42:
 404 001a 9847     		blx	r3
 405              	.LVL43:
 146:../utilities/fsl_shell.c ****     context->printf_data_func(context->prompt);
 406              		.loc 1 146 0
 407 001c 236D     		ldr	r3, [r4, #80]
 408 001e B448     		ldr	r0, .L141+8
 409 0020 9847     		blx	r3
 410              	.LVL44:
 411              	.L135:
 147:../utilities/fsl_shell.c **** 
 412              		.loc 1 147 0
 413 0022 236D     		ldr	r3, [r4, #80]
 414 0024 2068     		ldr	r0, [r4]
 415 0026 9847     		blx	r3
 416              	.LVL45:
 417              	.L32:
 151:../utilities/fsl_shell.c ****         {
 418              		.loc 1 151 0
 419 0028 94F81861 		ldrb	r6, [r4, #280]	@ zero_extendqisi2
 420 002c 002E     		cmp	r6, #0
 421 002e 40F05E82 		bne	.L95
 422              	.LVL46:
 423              	.LBB17:
 424              	.LBB18:
 569:../utilities/fsl_shell.c **** 
 570:../utilities/fsl_shell.c **** static int32_t ParseLine(const char *cmd, uint32_t len, char *argv[SHELL_MAX_ARGS])
 571:../utilities/fsl_shell.c **** {
 572:../utilities/fsl_shell.c ****     uint32_t argc;
 573:../utilities/fsl_shell.c ****     char *p;
 574:../utilities/fsl_shell.c ****     uint32_t position;
 575:../utilities/fsl_shell.c **** 
 576:../utilities/fsl_shell.c ****     /* Init params */
 577:../utilities/fsl_shell.c ****     memset(g_paramBuffer, '\0', len + 1);
 578:../utilities/fsl_shell.c ****     StrCopy(g_paramBuffer, cmd, len);
 579:../utilities/fsl_shell.c **** 
 580:../utilities/fsl_shell.c ****     p = g_paramBuffer;
 581:../utilities/fsl_shell.c ****     position = 0;
 582:../utilities/fsl_shell.c ****     argc = 0;
 583:../utilities/fsl_shell.c **** 
 584:../utilities/fsl_shell.c ****     while (position < len)
 585:../utilities/fsl_shell.c ****     {
 586:../utilities/fsl_shell.c ****         /* Skip all blanks */
 587:../utilities/fsl_shell.c ****         while (((char)(*p) == ' ') && (position < len))
 588:../utilities/fsl_shell.c ****         {
 589:../utilities/fsl_shell.c ****             *p = '\0';
 590:../utilities/fsl_shell.c ****             p++;
 591:../utilities/fsl_shell.c ****             position++;
 592:../utilities/fsl_shell.c ****         }
 593:../utilities/fsl_shell.c ****         /* Process begin of a string */
 594:../utilities/fsl_shell.c ****         if (*p == '"')
 595:../utilities/fsl_shell.c ****         {
 596:../utilities/fsl_shell.c ****             p++;
 597:../utilities/fsl_shell.c ****             position++;
 598:../utilities/fsl_shell.c ****             argv[argc] = p;
 599:../utilities/fsl_shell.c ****             argc++;
 600:../utilities/fsl_shell.c ****             /* Skip this string */
 601:../utilities/fsl_shell.c ****             while ((*p != '"') && (position < len))
 602:../utilities/fsl_shell.c ****             {
 603:../utilities/fsl_shell.c ****                 p++;
 604:../utilities/fsl_shell.c ****                 position++;
 605:../utilities/fsl_shell.c ****             }
 606:../utilities/fsl_shell.c ****             /* Skip '"' */
 607:../utilities/fsl_shell.c ****             *p = '\0';
 608:../utilities/fsl_shell.c ****             p++;
 609:../utilities/fsl_shell.c ****             position++;
 610:../utilities/fsl_shell.c ****         }
 611:../utilities/fsl_shell.c ****         else /* Normal char */
 612:../utilities/fsl_shell.c ****         {
 613:../utilities/fsl_shell.c ****             argv[argc] = p;
 614:../utilities/fsl_shell.c ****             argc++;
 615:../utilities/fsl_shell.c ****             while (((char)*p != ' ') && ((char)*p != '\t') && (position < len))
 616:../utilities/fsl_shell.c ****             {
 617:../utilities/fsl_shell.c ****                 p++;
 618:../utilities/fsl_shell.c ****                 position++;
 619:../utilities/fsl_shell.c ****             }
 620:../utilities/fsl_shell.c ****         }
 621:../utilities/fsl_shell.c ****     }
 622:../utilities/fsl_shell.c ****     return argc;
 623:../utilities/fsl_shell.c **** }
 624:../utilities/fsl_shell.c **** 
 625:../utilities/fsl_shell.c **** int32_t SHELL_RegisterCommand(const shell_command_context_t *command_context)
 626:../utilities/fsl_shell.c **** {
 627:../utilities/fsl_shell.c ****     int32_t result = 0;
 628:../utilities/fsl_shell.c **** 
 629:../utilities/fsl_shell.c ****     /* If have room  in command list */
 630:../utilities/fsl_shell.c ****     if (g_RegisteredCommands.numberOfCommandInList < SHELL_MAX_CMD)
 631:../utilities/fsl_shell.c ****     {
 632:../utilities/fsl_shell.c ****         g_RegisteredCommands.CommandList[g_RegisteredCommands.numberOfCommandInList++] = command_co
 633:../utilities/fsl_shell.c ****     }
 634:../utilities/fsl_shell.c ****     else
 635:../utilities/fsl_shell.c ****     {
 636:../utilities/fsl_shell.c ****         result = -1;
 637:../utilities/fsl_shell.c ****     }
 638:../utilities/fsl_shell.c ****     return result;
 639:../utilities/fsl_shell.c **** }
 640:../utilities/fsl_shell.c **** 
 641:../utilities/fsl_shell.c **** static uint8_t GetChar(p_shell_context_t context)
 642:../utilities/fsl_shell.c **** {
 643:../utilities/fsl_shell.c ****     uint8_t ch;
 644:../utilities/fsl_shell.c **** 
 645:../utilities/fsl_shell.c **** #if SHELL_USE_FILE_STREAM
 646:../utilities/fsl_shell.c ****     ch = fgetc(context->STDIN);
 647:../utilities/fsl_shell.c **** #else
 648:../utilities/fsl_shell.c ****     context->recv_data_func(&ch, 1U);
 425              		.loc 1 648 0
 426 0032 E36C     		ldr	r3, [r4, #76]
 427 0034 0121     		movs	r1, #1
 428 0036 02A8     		add	r0, sp, #8
 429 0038 9847     		blx	r3
 430              	.LVL47:
 649:../utilities/fsl_shell.c **** #endif
 650:../utilities/fsl_shell.c ****     return ch;
 431              		.loc 1 650 0
 432 003a 9DF80850 		ldrb	r5, [sp, #8]	@ zero_extendqisi2
 433              	.LBE18:
 434              	.LBE17:
 157:../utilities/fsl_shell.c ****         {
 435              		.loc 1 157 0
 436 003e FF2D     		cmp	r5, #255
 437 0040 F2D0     		beq	.L32
 162:../utilities/fsl_shell.c ****         {
 438              		.loc 1 162 0
 439 0042 1B2D     		cmp	r5, #27
 440 0044 02D1     		bne	.L35
 164:../utilities/fsl_shell.c ****             continue;
 441              		.loc 1 164 0
 442 0046 0123     		movs	r3, #1
 443              	.L136:
 172:../utilities/fsl_shell.c ****                 continue;
 444              		.loc 1 172 0
 445 0048 2371     		strb	r3, [r4, #4]
 173:../utilities/fsl_shell.c ****             }
 446              		.loc 1 173 0
 447 004a EDE7     		b	.L32
 448              	.L35:
 167:../utilities/fsl_shell.c ****         {
 449              		.loc 1 167 0
 450 004c 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 451 004e 012B     		cmp	r3, #1
 452 0050 5AD1     		bne	.L36
 170:../utilities/fsl_shell.c ****             {
 453              		.loc 1 170 0
 454 0052 5B2D     		cmp	r5, #91
 455 0054 01D1     		bne	.L37
 172:../utilities/fsl_shell.c ****                 continue;
 456              		.loc 1 172 0
 457 0056 0223     		movs	r3, #2
 458 0058 F6E7     		b	.L136
 459              	.L37:
 175:../utilities/fsl_shell.c ****         }
 460              		.loc 1 175 0
 461 005a 2671     		strb	r6, [r4, #4]
 462              	.L38:
 276:../utilities/fsl_shell.c ****         {
 463              		.loc 1 276 0
 464 005c 94F84630 		ldrb	r3, [r4, #70]	@ zero_extendqisi2
 465 0060 3E2B     		cmp	r3, #62
 278:../utilities/fsl_shell.c ****         }
 466              		.loc 1 278 0
 467 0062 84BF     		itt	hi
 468 0064 0023     		movhi	r3, #0
 469 0066 84F84630 		strbhi	r3, [r4, #70]
 282:../utilities/fsl_shell.c ****         {
 470              		.loc 1 282 0
 471 006a 0D2D     		cmp	r5, #13
 472 006c 02D0     		beq	.L60
 282:../utilities/fsl_shell.c ****         {
 473              		.loc 1 282 0 is_stmt 0 discriminator 1
 474 006e 0A2D     		cmp	r5, #10
 475 0070 40F00982 		bne	.L61
 476              	.L60:
 477              	.LBB19:
 286:../utilities/fsl_shell.c ****             {
 478              		.loc 1 286 0 is_stmt 1
 479 0074 9F4B     		ldr	r3, .L141+12
 480 0076 93F90030 		ldrsb	r3, [r3]
 481 007a 0BB1     		cbz	r3, .L62
 286:../utilities/fsl_shell.c ****             {
 482              		.loc 1 286 0 is_stmt 0 discriminator 1
 483 007c AB42     		cmp	r3, r5
 484 007e D3D1     		bne	.L32
 485              	.L62:
 292:../utilities/fsl_shell.c ****                 context->printf_data_func("\r\n");
 486              		.loc 1 292 0 is_stmt 1
 487 0080 9C4B     		ldr	r3, .L141+12
 293:../utilities/fsl_shell.c ****                 /* If command line is NULL, will start a new transfer */
 488              		.loc 1 293 0
 489 0082 9D48     		ldr	r0, .L141+16
 292:../utilities/fsl_shell.c ****                 context->printf_data_func("\r\n");
 490              		.loc 1 292 0
 491 0084 1D70     		strb	r5, [r3]
 295:../utilities/fsl_shell.c ****                 {
 492              		.loc 1 295 0
 493 0086 661D     		adds	r6, r4, #5
 293:../utilities/fsl_shell.c ****                 /* If command line is NULL, will start a new transfer */
 494              		.loc 1 293 0
 495 0088 236D     		ldr	r3, [r4, #80]
 496 008a 9847     		blx	r3
 497              	.LVL48:
 295:../utilities/fsl_shell.c ****                 {
 498              		.loc 1 295 0
 499 008c 3046     		mov	r0, r6
 500 008e FFF7FEFF 		bl	StrLen
 501              	.LVL49:
 502 0092 0028     		cmp	r0, #0
 503 0094 C5D0     		beq	.L135
 504              	.LVL50:
 505 0096 C7B2     		uxtb	r7, r0
 506              	.LVL51:
 507              	.LBB20:
 508              	.LBB21:
 509              	.LBB22:
 510              	.LBB23:
 577:../utilities/fsl_shell.c ****     StrCopy(g_paramBuffer, cmd, len);
 511              		.loc 1 577 0
 512 0098 7A1C     		adds	r2, r7, #1
 513 009a 0021     		movs	r1, #0
 514 009c 9748     		ldr	r0, .L141+20
 515              	.LVL52:
 516 009e FFF7FEFF 		bl	memset
 517              	.LVL53:
 578:../utilities/fsl_shell.c **** 
 518              		.loc 1 578 0
 519 00a2 3A46     		mov	r2, r7
 520 00a4 3146     		mov	r1, r6
 521 00a6 9548     		ldr	r0, .L141+20
 522 00a8 FFF7FEFF 		bl	StrCopy
 523              	.LVL54:
 524 00ac 0025     		movs	r5, #0
 580:../utilities/fsl_shell.c ****     position = 0;
 525              		.loc 1 580 0
 526 00ae 934B     		ldr	r3, .L141+20
 581:../utilities/fsl_shell.c ****     argc = 0;
 527              		.loc 1 581 0
 528 00b0 2A46     		mov	r2, r5
 589:../utilities/fsl_shell.c ****             p++;
 529              		.loc 1 589 0
 530 00b2 2846     		mov	r0, r5
 531              	.LVL55:
 532              	.L64:
 584:../utilities/fsl_shell.c ****     {
 533              		.loc 1 584 0
 534 00b4 9742     		cmp	r7, r2
 535 00b6 00F23881 		bhi	.L134
 536              	.LVL56:
 537              	.LBE23:
 538              	.LBE22:
 369:../utilities/fsl_shell.c ****     {
 539              		.loc 1 369 0
 540 00ba DFF85C82 		ldr	r8, .L141+48
 541 00be D8F80070 		ldr	r7, [r8]
 542              	.LVL57:
 543 00c2 002F     		cmp	r7, #0
 544 00c4 00F06181 		beq	.L76
 545              	.LVL58:
 546              	.L78:
 361:../utilities/fsl_shell.c ****     uint8_t tmpCommandLen;
 547              		.loc 1 361 0
 548 00c8 0120     		movs	r0, #1
 549              	.L77:
 550              	.LVL59:
 407:../utilities/fsl_shell.c ****     {
 551              		.loc 1 407 0
 552 00ca D8F800A0 		ldr	r10, [r8]
 553 00ce BAF1000F 		cmp	r10, #0
 554 00d2 00F0D281 		beq	.L83
 555 00d6 0028     		cmp	r0, #0
 556 00d8 00F08C81 		beq	.L84
 557              	.LVL60:
 409:../utilities/fsl_shell.c ****             "\r\nIncorrect command parameter(s).  Enter \"help\" to view a list of available comman
 558              		.loc 1 409 0
 559 00dc 236D     		ldr	r3, [r4, #80]
 560 00de 8848     		ldr	r0, .L141+24
 561 00e0 9847     		blx	r3
 562              	.LVL61:
 563              	.L140:
 434:../utilities/fsl_shell.c ****     }
 564              		.loc 1 434 0
 565 00e2 0023     		movs	r3, #0
 566 00e4 C8F80030 		str	r3, [r8]
 567              	.L85:
 568              	.LVL62:
 569              	.LBE21:
 570              	.LBE20:
 302:../utilities/fsl_shell.c ****                 context->hist_current = 0;
 571              		.loc 1 302 0
 572 00e8 0025     		movs	r5, #0
 573 00ea 84F84650 		strb	r5, [r4, #70]
 574 00ee 84F84750 		strb	r5, [r4, #71]
 303:../utilities/fsl_shell.c ****                 context->printf_data_func(context->prompt);
 575              		.loc 1 303 0
 576 00f2 A4F85450 		strh	r5, [r4, #84]	@ movhi
 304:../utilities/fsl_shell.c ****                 memset(context->line, 0, sizeof(context->line));
 577              		.loc 1 304 0
 578 00f6 236D     		ldr	r3, [r4, #80]
 579 00f8 2068     		ldr	r0, [r4]
 580 00fa 9847     		blx	r3
 581              	.LVL63:
 305:../utilities/fsl_shell.c ****                 continue;
 582              		.loc 1 305 0
 583 00fc 4022     		movs	r2, #64
 584 00fe 2946     		mov	r1, r5
 585 0100 3046     		mov	r0, r6
 586 0102 FFF7FEFF 		bl	memset
 587              	.LVL64:
 306:../utilities/fsl_shell.c ****             }
 588              		.loc 1 306 0
 589 0106 8FE7     		b	.L32
 590              	.L36:
 591              	.LBE19:
 177:../utilities/fsl_shell.c ****         {
 592              		.loc 1 177 0
 593 0108 022B     		cmp	r3, #2
 594 010a 43D1     		bne	.L39
 181:../utilities/fsl_shell.c ****             {
 595              		.loc 1 181 0
 596 010c 413D     		subs	r5, r5, #65
 179:../utilities/fsl_shell.c **** 
 597              		.loc 1 179 0
 598 010e 2671     		strb	r6, [r4, #4]
 181:../utilities/fsl_shell.c ****             {
 599              		.loc 1 181 0
 600 0110 032D     		cmp	r5, #3
 601 0112 89D8     		bhi	.L32
 602 0114 DFE805F0 		tbb	[pc, r5]
 603              	.L41:
 604 0118 02       		.byte	(.L40-.L41)/2
 605 0119 13       		.byte	(.L42-.L41)/2
 606 011a 2D       		.byte	(.L43-.L41)/2
 607 011b 1F       		.byte	(.L44-.L41)/2
 608              		.p2align 1
 609              	.L40:
 185:../utilities/fsl_shell.c ****                     if (context->hist_current < (context->hist_count - 1))
 610              		.loc 1 185 0
 611 011c 94F85410 		ldrb	r1, [r4, #84]	@ zero_extendqisi2
 612 0120 2046     		mov	r0, r4
 613 0122 FFF7FEFF 		bl	GetHistoryCommand
 614              	.LVL65:
 186:../utilities/fsl_shell.c ****                     {
 615              		.loc 1 186 0
 616 0126 B4F85620 		ldrh	r2, [r4, #86]
 617 012a B4F85430 		ldrh	r3, [r4, #84]
 618 012e 013A     		subs	r2, r2, #1
 619 0130 9342     		cmp	r3, r2
 620 0132 BFF679AF 		bge	.L32
 188:../utilities/fsl_shell.c ****                     }
 621              		.loc 1 188 0
 622 0136 0133     		adds	r3, r3, #1
 623              	.L137:
 195:../utilities/fsl_shell.c ****                     }
 624              		.loc 1 195 0
 625 0138 A4F85430 		strh	r3, [r4, #84]	@ movhi
 626 013c 74E7     		b	.L32
 627              	.L42:
 192:../utilities/fsl_shell.c ****                     if (context->hist_current > 0)
 628              		.loc 1 192 0
 629 013e 94F85410 		ldrb	r1, [r4, #84]	@ zero_extendqisi2
 630 0142 2046     		mov	r0, r4
 631 0144 FFF7FEFF 		bl	GetHistoryCommand
 632              	.LVL66:
 193:../utilities/fsl_shell.c ****                     {
 633              		.loc 1 193 0
 634 0148 B4F85430 		ldrh	r3, [r4, #84]
 635 014c 002B     		cmp	r3, #0
 636 014e 3FF46BAF 		beq	.L32
 195:../utilities/fsl_shell.c ****                     }
 637              		.loc 1 195 0
 638 0152 013B     		subs	r3, r3, #1
 639 0154 F0E7     		b	.L137
 640              	.L44:
 199:../utilities/fsl_shell.c ****                     {
 641              		.loc 1 199 0
 642 0156 94F84730 		ldrb	r3, [r4, #71]	@ zero_extendqisi2
 643 015a 002B     		cmp	r3, #0
 644 015c 3FF464AF 		beq	.L32
 201:../utilities/fsl_shell.c ****                         context->c_pos--;
 645              		.loc 1 201 0
 646 0160 236D     		ldr	r3, [r4, #80]
 647 0162 6848     		ldr	r0, .L141+28
 648 0164 9847     		blx	r3
 649              	.LVL67:
 202:../utilities/fsl_shell.c ****                     }
 650              		.loc 1 202 0
 651 0166 94F84730 		ldrb	r3, [r4, #71]	@ zero_extendqisi2
 652 016a 013B     		subs	r3, r3, #1
 653              	.L138:
 331:../utilities/fsl_shell.c ****     }
 654              		.loc 1 331 0
 655 016c 84F84730 		strb	r3, [r4, #71]
 656 0170 5AE7     		b	.L32
 657              	.L43:
 206:../utilities/fsl_shell.c ****                     {
 658              		.loc 1 206 0
 659 0172 94F84730 		ldrb	r3, [r4, #71]	@ zero_extendqisi2
 660 0176 94F84620 		ldrb	r2, [r4, #70]	@ zero_extendqisi2
 661 017a 9A42     		cmp	r2, r3
 662 017c 7FF654AF 		bls	.L32
 208:../utilities/fsl_shell.c ****                         context->c_pos++;
 663              		.loc 1 208 0
 664 0180 2344     		add	r3, r3, r4
 665 0182 226D     		ldr	r2, [r4, #80]
 666 0184 93F90510 		ldrsb	r1, [r3, #5]
 667 0188 5F48     		ldr	r0, .L141+32
 668 018a 9047     		blx	r2
 669              	.LVL68:
 670              	.L139:
 331:../utilities/fsl_shell.c ****     }
 671              		.loc 1 331 0
 672 018c 94F84730 		ldrb	r3, [r4, #71]	@ zero_extendqisi2
 673 0190 0133     		adds	r3, r3, #1
 674 0192 EBE7     		b	.L138
 675              	.L39:
 218:../utilities/fsl_shell.c ****         {
 676              		.loc 1 218 0
 677 0194 092D     		cmp	r5, #9
 678 0196 64D1     		bne	.L45
 224:../utilities/fsl_shell.c ****             }
 679              		.loc 1 224 0 discriminator 1
 680 0198 5A4D     		ldr	r5, .L141+28
 681              	.L46:
 682              	.LVL69:
 222:../utilities/fsl_shell.c ****             {
 683              		.loc 1 222 0 discriminator 1
 684 019a 94F84730 		ldrb	r3, [r4, #71]	@ zero_extendqisi2
 685 019e 9E42     		cmp	r6, r3
 686 01a0 24DB     		blt	.L47
 687              	.LVL70:
 688              	.LBB28:
 689              	.LBB29:
 487:../utilities/fsl_shell.c ****     {
 690              		.loc 1 487 0
 691 01a2 651D     		adds	r5, r4, #5
 692 01a4 2846     		mov	r0, r5
 693 01a6 FFF7FEFF 		bl	StrLen
 694              	.LVL71:
 695 01aa 40B3     		cbz	r0, .L48
 491:../utilities/fsl_shell.c ****     /* Empty tab, list all commands */
 696              		.loc 1 491 0
 697 01ac 236D     		ldr	r3, [r4, #80]
 698 01ae 5248     		ldr	r0, .L141+16
 699 01b0 9847     		blx	r3
 700              	.LVL72:
 493:../utilities/fsl_shell.c ****     {
 701              		.loc 1 493 0
 702 01b2 94F90520 		ldrsb	r2, [r4, #5]
 703 01b6 F2B1     		cbz	r2, .L49
 704 01b8 4FF0000B 		mov	fp, #0
 499:../utilities/fsl_shell.c ****     {
 705              		.loc 1 499 0
 706 01bc DFF85C91 		ldr	r9, .L141+52
 510:../utilities/fsl_shell.c ****                 continue;
 707              		.loc 1 510 0
 708 01c0 DFF85CA1 		ldr	r10, .L141+56
 493:../utilities/fsl_shell.c ****     {
 709              		.loc 1 493 0
 710 01c4 5E46     		mov	r6, fp
 711              	.LVL73:
 712 01c6 5F46     		mov	r7, fp
 713              	.LVL74:
 714              	.L50:
 499:../utilities/fsl_shell.c ****     {
 715              		.loc 1 499 0
 716 01c8 99F85020 		ldrb	r2, [r9, #80]	@ zero_extendqisi2
 717 01cc 5FFA8BF3 		uxtb	r3, fp
 718 01d0 9A42     		cmp	r2, r3
 719 01d2 1DD8     		bhi	.L53
 525:../utilities/fsl_shell.c ****     {
 720              		.loc 1 525 0
 721 01d4 26B1     		cbz	r6, .L54
 527:../utilities/fsl_shell.c ****     }
 722              		.loc 1 527 0
 723 01d6 3A46     		mov	r2, r7
 724 01d8 3146     		mov	r1, r6
 725 01da 2846     		mov	r0, r5
 726 01dc FFF7FEFF 		bl	StrCopy
 727              	.LVL75:
 728              	.L54:
 529:../utilities/fsl_shell.c ****     return;
 729              		.loc 1 529 0
 730 01e0 236D     		ldr	r3, [r4, #80]
 731 01e2 2168     		ldr	r1, [r4]
 732 01e4 4948     		ldr	r0, .L141+36
 733 01e6 2A46     		mov	r2, r5
 734 01e8 9847     		blx	r3
 735              	.LVL76:
 736 01ea 08E0     		b	.L48
 737              	.LVL77:
 738              	.L47:
 739              	.LBE29:
 740              	.LBE28:
 224:../utilities/fsl_shell.c ****             }
 741              		.loc 1 224 0 discriminator 3
 742 01ec 236D     		ldr	r3, [r4, #80]
 743 01ee 2846     		mov	r0, r5
 744 01f0 9847     		blx	r3
 745              	.LVL78:
 222:../utilities/fsl_shell.c ****             {
 746              		.loc 1 222 0 discriminator 3
 747 01f2 0136     		adds	r6, r6, #1
 748              	.LVL79:
 749 01f4 D1E7     		b	.L46
 750              	.LVL80:
 751              	.L49:
 752              	.LBB32:
 753              	.LBB30:
 495:../utilities/fsl_shell.c ****         return;
 754              		.loc 1 495 0
 755 01f6 1146     		mov	r1, r2
 756 01f8 2046     		mov	r0, r4
 757 01fa FFF7FEFF 		bl	HelpCommand
 758              	.LVL81:
 759              	.L48:
 760              	.LBE30:
 761              	.LBE32:
 229:../utilities/fsl_shell.c **** #endif
 762              		.loc 1 229 0
 763 01fe 2846     		mov	r0, r5
 764 0200 FFF7FEFF 		bl	StrLen
 765              	.LVL82:
 766 0204 C0B2     		uxtb	r0, r0
 767 0206 84F84600 		strb	r0, [r4, #70]
 768 020a 84F84700 		strb	r0, [r4, #71]
 231:../utilities/fsl_shell.c ****         }
 769              		.loc 1 231 0
 770 020e 0BE7     		b	.L32
 771              	.LVL83:
 772              	.L53:
 773              	.LBB33:
 774              	.LBB31:
 502:../utilities/fsl_shell.c ****         if (StrCompare(context->line, cmdName, StrLen(context->line)) == 0)
 775              		.loc 1 502 0
 776 0210 59F82330 		ldr	r3, [r9, r3, lsl #2]
 503:../utilities/fsl_shell.c ****         {
 777              		.loc 1 503 0
 778 0214 2846     		mov	r0, r5
 502:../utilities/fsl_shell.c ****         if (StrCompare(context->line, cmdName, StrLen(context->line)) == 0)
 779              		.loc 1 502 0
 780 0216 D3F80080 		ldr	r8, [r3]
 781              	.LVL84:
 503:../utilities/fsl_shell.c ****         {
 782              		.loc 1 503 0
 783 021a FFF7FEFF 		bl	StrLen
 784              	.LVL85:
 785 021e 4146     		mov	r1, r8
 786 0220 0246     		mov	r2, r0
 787 0222 2846     		mov	r0, r5
 788 0224 FFF7FEFF 		bl	StrCompare
 789              	.LVL86:
 790 0228 48B9     		cbnz	r0, .L51
 505:../utilities/fsl_shell.c ****             {
 791              		.loc 1 505 0
 792 022a 5FB9     		cbnz	r7, .L52
 793              	.LVL87:
 508:../utilities/fsl_shell.c ****                 /* Show possible matches */
 794              		.loc 1 508 0
 795 022c 4046     		mov	r0, r8
 796 022e FFF7FEFF 		bl	StrLen
 797              	.LVL88:
 510:../utilities/fsl_shell.c ****                 continue;
 798              		.loc 1 510 0
 799 0232 236D     		ldr	r3, [r4, #80]
 508:../utilities/fsl_shell.c ****                 /* Show possible matches */
 800              		.loc 1 508 0
 801 0234 0746     		mov	r7, r0
 802              	.LVL89:
 510:../utilities/fsl_shell.c ****                 continue;
 803              		.loc 1 510 0
 804 0236 4146     		mov	r1, r8
 805 0238 5046     		mov	r0, r10
 806              	.LVL90:
 807 023a 9847     		blx	r3
 808              	.LVL91:
 507:../utilities/fsl_shell.c ****                 minLen = StrLen(namePtr);
 809              		.loc 1 507 0
 810 023c 4646     		mov	r6, r8
 811              	.LVL92:
 812              	.L51:
 813 023e 0BF1010B 		add	fp, fp, #1
 814              	.LVL93:
 815 0242 C1E7     		b	.L50
 816              	.LVL94:
 817              	.L52:
 513:../utilities/fsl_shell.c ****             if (len < 0)
 818              		.loc 1 513 0
 819 0244 3046     		mov	r0, r6
 820 0246 FFF7FEFF 		bl	StrLen
 821              	.LVL95:
 822 024a 4146     		mov	r1, r8
 823 024c 0246     		mov	r2, r0
 824 024e 3046     		mov	r0, r6
 825 0250 FFF7FEFF 		bl	StrCompare
 826              	.LVL96:
 827 0254 0028     		cmp	r0, #0
 828 0256 B8BF     		it	lt
 829 0258 4042     		rsblt	r0, r0, #0
 830              	.LVL97:
 831 025a 8742     		cmp	r7, r0
 832 025c A8BF     		it	ge
 833 025e 0746     		movge	r7, r0
 834              	.LVL98:
 835 0260 EDE7     		b	.L51
 836              	.LVL99:
 837              	.L45:
 838              	.LBE31:
 839              	.LBE33:
 235:../utilities/fsl_shell.c ****         {
 840              		.loc 1 235 0
 841 0262 602D     		cmp	r5, #96
 842 0264 3FF4FAAE 		beq	.L38
 240:../utilities/fsl_shell.c ****         {
 843              		.loc 1 240 0
 844 0268 7F2D     		cmp	r5, #127
 845 026a 02D0     		beq	.L55
 240:../utilities/fsl_shell.c ****         {
 846              		.loc 1 240 0 is_stmt 0 discriminator 1
 847 026c 082D     		cmp	r5, #8
 848 026e 7FF4F5AE 		bne	.L38
 849              	.L55:
 243:../utilities/fsl_shell.c ****             {
 850              		.loc 1 243 0 is_stmt 1
 851 0272 94F84730 		ldrb	r3, [r4, #71]	@ zero_extendqisi2
 852 0276 002B     		cmp	r3, #0
 853 0278 3FF4D6AE 		beq	.L32
 248:../utilities/fsl_shell.c ****             context->c_pos--;
 854              		.loc 1 248 0
 855 027c 94F84620 		ldrb	r2, [r4, #70]	@ zero_extendqisi2
 249:../utilities/fsl_shell.c **** 
 856              		.loc 1 249 0
 857 0280 013B     		subs	r3, r3, #1
 248:../utilities/fsl_shell.c ****             context->c_pos--;
 858              		.loc 1 248 0
 859 0282 013A     		subs	r2, r2, #1
 860 0284 D2B2     		uxtb	r2, r2
 249:../utilities/fsl_shell.c **** 
 861              		.loc 1 249 0
 862 0286 DBB2     		uxtb	r3, r3
 251:../utilities/fsl_shell.c ****             {
 863              		.loc 1 251 0
 864 0288 9A42     		cmp	r2, r3
 248:../utilities/fsl_shell.c ****             context->c_pos--;
 865              		.loc 1 248 0
 866 028a 84F84620 		strb	r2, [r4, #70]
 249:../utilities/fsl_shell.c **** 
 867              		.loc 1 249 0
 868 028e 84F84730 		strb	r3, [r4, #71]
 251:../utilities/fsl_shell.c ****             {
 869              		.loc 1 251 0
 870 0292 1FD9     		bls	.L56
 253:../utilities/fsl_shell.c ****                         context->l_pos - context->c_pos);
 871              		.loc 1 253 0
 872 0294 991D     		adds	r1, r3, #6
 873 0296 581D     		adds	r0, r3, #5
 874 0298 D21A     		subs	r2, r2, r3
 875 029a 2144     		add	r1, r1, r4
 876 029c 2044     		add	r0, r0, r4
 877 029e FFF7FEFF 		bl	memmove
 878              	.LVL100:
 255:../utilities/fsl_shell.c ****                 context->printf_data_func("\b%s  \b", &context->line[context->c_pos]);
 879              		.loc 1 255 0
 880 02a2 94F84630 		ldrb	r3, [r4, #70]	@ zero_extendqisi2
 256:../utilities/fsl_shell.c **** 
 881              		.loc 1 256 0
 882 02a6 1A48     		ldr	r0, .L141+40
 261:../utilities/fsl_shell.c ****                 }
 883              		.loc 1 261 0
 884 02a8 164E     		ldr	r6, .L141+28
 255:../utilities/fsl_shell.c ****                 context->printf_data_func("\b%s  \b", &context->line[context->c_pos]);
 885              		.loc 1 255 0
 886 02aa 2344     		add	r3, r3, r4
 887 02ac 0022     		movs	r2, #0
 888 02ae 5A71     		strb	r2, [r3, #5]
 256:../utilities/fsl_shell.c **** 
 889              		.loc 1 256 0
 890 02b0 94F84710 		ldrb	r1, [r4, #71]	@ zero_extendqisi2
 891 02b4 236D     		ldr	r3, [r4, #80]
 892 02b6 0531     		adds	r1, r1, #5
 893 02b8 2144     		add	r1, r1, r4
 894 02ba 9847     		blx	r3
 895              	.LVL101:
 259:../utilities/fsl_shell.c ****                 {
 896              		.loc 1 259 0
 897 02bc 94F84750 		ldrb	r5, [r4, #71]	@ zero_extendqisi2
 898              	.LVL102:
 899              	.L57:
 259:../utilities/fsl_shell.c ****                 {
 900              		.loc 1 259 0 is_stmt 0 discriminator 1
 901 02c0 94F84630 		ldrb	r3, [r4, #70]	@ zero_extendqisi2
 902 02c4 9D42     		cmp	r5, r3
 903 02c6 3FF7AFAE 		bgt	.L32
 261:../utilities/fsl_shell.c ****                 }
 904              		.loc 1 261 0 is_stmt 1 discriminator 3
 905 02ca 236D     		ldr	r3, [r4, #80]
 906 02cc 3046     		mov	r0, r6
 907 02ce 9847     		blx	r3
 908              	.LVL103:
 259:../utilities/fsl_shell.c ****                 {
 909              		.loc 1 259 0 discriminator 3
 910 02d0 0135     		adds	r5, r5, #1
 911              	.LVL104:
 912 02d2 F5E7     		b	.L57
 913              	.LVL105:
 914              	.L56:
 266:../utilities/fsl_shell.c ****                 context->line[context->l_pos] = 0;
 915              		.loc 1 266 0
 916 02d4 236D     		ldr	r3, [r4, #80]
 917 02d6 0F48     		ldr	r0, .L141+44
 918 02d8 9847     		blx	r3
 919              	.LVL106:
 267:../utilities/fsl_shell.c ****             }
 920              		.loc 1 267 0
 921 02da 94F84630 		ldrb	r3, [r4, #70]	@ zero_extendqisi2
 922 02de 2344     		add	r3, r3, r4
 923 02e0 0022     		movs	r2, #0
 924 02e2 5A71     		strb	r2, [r3, #5]
 925 02e4 A0E6     		b	.L32
 926              	.L142:
 927 02e6 00BF     		.align	2
 928              	.L141:
 929 02e8 00000000 		.word	.LC2
 930 02ec 0C000000 		.word	.LC3
 931 02f0 22000000 		.word	.LC4
 932 02f4 00000000 		.word	.LANCHOR2
 933 02f8 4E000000 		.word	.LC7
 934 02fc 00000000 		.word	.LANCHOR1
 935 0300 62000000 		.word	.LC11
 936 0304 49000000 		.word	.LC5
 937 0308 4B000000 		.word	.LC6
 938 030c 56000000 		.word	.LC9
 939 0310 5B000000 		.word	.LC10
 940 0314 00000000 		.word	.LC1
 941 0318 00000000 		.word	.LANCHOR3
 942 031c 00000000 		.word	.LANCHOR0
 943 0320 51000000 		.word	.LC8
 944              	.LVL107:
 945              	.L66:
 946              	.LBB34:
 947              	.LBB27:
 948              	.LBB26:
 949              	.LBB25:
 950              	.LBB24:
 589:../utilities/fsl_shell.c ****             p++;
 951              		.loc 1 589 0
 952 0324 03F8010B 		strb	r0, [r3], #1
 953              	.LVL108:
 591:../utilities/fsl_shell.c ****         }
 954              		.loc 1 591 0
 955 0328 0132     		adds	r2, r2, #1
 956              	.LVL109:
 957              	.L134:
 587:../utilities/fsl_shell.c ****         {
 958              		.loc 1 587 0
 959 032a 93F90010 		ldrsb	r1, [r3]
 960 032e 2029     		cmp	r1, #32
 961 0330 12D1     		bne	.L65
 962 0332 9742     		cmp	r7, r2
 963 0334 F6D1     		bne	.L66
 964              	.L67:
 613:../utilities/fsl_shell.c ****             argc++;
 965              		.loc 1 613 0
 966 0336 02A9     		add	r1, sp, #8
 967              	.LVL110:
 968 0338 A2EB030E 		sub	lr, r2, r3
 969 033c 41F82530 		str	r3, [r1, r5, lsl #2]
 970              	.LVL111:
 971              	.L73:
 615:../utilities/fsl_shell.c ****             {
 972              		.loc 1 615 0
 973 0340 93F90010 		ldrsb	r1, [r3]
 974 0344 2029     		cmp	r1, #32
 975 0346 03EB0E02 		add	r2, r3, lr
 976              	.LVL112:
 977 034a 18D0     		beq	.L70
 978 034c 0929     		cmp	r1, #9
 979 034e 16D0     		beq	.L70
 980 0350 9742     		cmp	r7, r2
 981 0352 14D9     		bls	.L70
 617:../utilities/fsl_shell.c ****                 position++;
 982              		.loc 1 617 0
 983 0354 0133     		adds	r3, r3, #1
 984              	.LVL113:
 985 0356 F3E7     		b	.L73
 986              	.LVL114:
 987              	.L65:
 594:../utilities/fsl_shell.c ****         {
 988              		.loc 1 594 0
 989 0358 2229     		cmp	r1, #34
 990 035a ECD1     		bne	.L67
 598:../utilities/fsl_shell.c ****             argc++;
 991              		.loc 1 598 0
 992 035c 0DF1080E 		add	lr, sp, #8
 993              	.LVL115:
 596:../utilities/fsl_shell.c ****             position++;
 994              		.loc 1 596 0
 995 0360 591C     		adds	r1, r3, #1
 996              	.LVL116:
 598:../utilities/fsl_shell.c ****             argc++;
 997              		.loc 1 598 0
 998 0362 4EF82510 		str	r1, [lr, r5, lsl #2]
 999              	.LVL117:
 1000 0366 A2EB030E 		sub	lr, r2, r3
 1001              	.LVL118:
 1002              	.L68:
 601:../utilities/fsl_shell.c ****             {
 1003              		.loc 1 601 0
 1004 036a 0B46     		mov	r3, r1
 1005 036c 01EB0E02 		add	r2, r1, lr
 1006              	.LVL119:
 1007 0370 13F901CB 		ldrsb	ip, [r3], #1
 1008 0374 BCF1220F 		cmp	ip, #34
 1009 0378 03D1     		bne	.L69
 1010              	.L72:
 607:../utilities/fsl_shell.c ****             p++;
 1011              		.loc 1 607 0
 1012 037a 0870     		strb	r0, [r1]
 1013              	.LVL120:
 609:../utilities/fsl_shell.c ****         }
 1014              		.loc 1 609 0
 1015 037c 0132     		adds	r2, r2, #1
 1016              	.LVL121:
 1017              	.L70:
 1018 037e 0135     		adds	r5, r5, #1
 1019 0380 98E6     		b	.L64
 1020              	.LVL122:
 1021              	.L69:
 601:../utilities/fsl_shell.c ****             {
 1022              		.loc 1 601 0
 1023 0382 9742     		cmp	r7, r2
 1024 0384 F9D9     		bls	.L72
 603:../utilities/fsl_shell.c ****                 position++;
 1025              		.loc 1 603 0
 1026 0386 1946     		mov	r1, r3
 1027              	.LVL123:
 1028 0388 EFE7     		b	.L68
 1029              	.LVL124:
 1030              	.L76:
 1031              	.LBE24:
 1032              	.LBE25:
 369:../utilities/fsl_shell.c ****     {
 1033              		.loc 1 369 0
 1034 038a 002D     		cmp	r5, #0
 1035 038c 7FF79CAE 		ble	.L78
 371:../utilities/fsl_shell.c ****         {
 1036              		.loc 1 371 0
 1037 0390 584B     		ldr	r3, .L143
 1038 0392 93F85020 		ldrb	r2, [r3, #80]	@ zero_extendqisi2
 1039 0396 0192     		str	r2, [sp, #4]
 379:../utilities/fsl_shell.c ****                 {
 1040              		.loc 1 379 0
 1041 0398 029A     		ldr	r2, [sp, #8]
 1042 039a 0092     		str	r2, [sp]
 1043 039c 9B46     		mov	fp, r3
 1044              	.LVL125:
 1045              	.L79:
 371:../utilities/fsl_shell.c ****         {
 1046              		.loc 1 371 0
 1047 039e 019A     		ldr	r2, [sp, #4]
 1048 03a0 FBB2     		uxtb	r3, r7
 1049 03a2 9A42     		cmp	r2, r3
 1050 03a4 7FF690AE 		bls	.L78
 373:../utilities/fsl_shell.c ****             tmpCommandString = tmpCommand->pcCommand;
 1051              		.loc 1 373 0
 1052 03a8 5BF82790 		ldr	r9, [fp, r7, lsl #2]
 1053 03ac 524B     		ldr	r3, .L143+4
 374:../utilities/fsl_shell.c ****             tmpCommandLen = StrLen(tmpCommandString);
 1054              		.loc 1 374 0
 1055 03ae D9F800A0 		ldr	r10, [r9]
 373:../utilities/fsl_shell.c ****             tmpCommandString = tmpCommand->pcCommand;
 1056              		.loc 1 373 0
 1057 03b2 C3F80090 		str	r9, [r3]
 375:../utilities/fsl_shell.c ****             /* Compare with space or end of string */
 1058              		.loc 1 375 0
 1059 03b6 5046     		mov	r0, r10
 1060 03b8 FFF7FEFF 		bl	StrLen
 1061              	.LVL126:
 1062 03bc C2B2     		uxtb	r2, r0
 377:../utilities/fsl_shell.c ****             {
 1063              		.loc 1 377 0
 1064 03be B356     		ldrsb	r3, [r6, r2]
 1065 03c0 33F02003 		bics	r3, r3, #32
 1066 03c4 14D1     		bne	.L80
 379:../utilities/fsl_shell.c ****                 {
 1067              		.loc 1 379 0
 1068 03c6 0099     		ldr	r1, [sp]
 1069 03c8 5046     		mov	r0, r10
 1070              	.LVL127:
 1071 03ca FFF7FEFF 		bl	StrCompare
 1072              	.LVL128:
 1073 03ce 78B9     		cbnz	r0, .L80
 382:../utilities/fsl_shell.c ****                     {
 1074              		.loc 1 382 0
 1075 03d0 99F80C30 		ldrb	r3, [r9, #12]	@ zero_extendqisi2
 1076 03d4 FF2B     		cmp	r3, #255
 1077 03d6 3FF478AE 		beq	.L77
 386:../utilities/fsl_shell.c ****                     {
 1078              		.loc 1 386 0
 1079 03da 23B9     		cbnz	r3, .L81
 361:../utilities/fsl_shell.c ****     uint8_t tmpCommandLen;
 1080              		.loc 1 361 0
 1081 03dc 15F1FF30 		adds	r0, r5, #-1
 1082 03e0 18BF     		it	ne
 1083 03e2 0120     		movne	r0, #1
 1084 03e4 71E6     		b	.L77
 1085              	.L81:
 392:../utilities/fsl_shell.c ****                         {
 1086              		.loc 1 392 0
 1087 03e6 681E     		subs	r0, r5, #1
 361:../utilities/fsl_shell.c ****     uint8_t tmpCommandLen;
 1088              		.loc 1 361 0
 1089 03e8 C01A     		subs	r0, r0, r3
 1090 03ea 18BF     		it	ne
 1091 03ec 0120     		movne	r0, #1
 1092 03ee 6CE6     		b	.L77
 1093              	.L80:
 1094              	.LVL129:
 1095 03f0 0137     		adds	r7, r7, #1
 1096              	.LVL130:
 1097 03f2 D4E7     		b	.L79
 1098              	.LVL131:
 1099              	.L84:
 415:../utilities/fsl_shell.c ****         /* Compare with last command. Push back to history buffer if different */
 1100              		.loc 1 415 0
 1101 03f4 3046     		mov	r0, r6
 1102 03f6 FFF7FEFF 		bl	StrLen
 1103              	.LVL132:
 417:../utilities/fsl_shell.c ****         {
 1104              		.loc 1 417 0
 1105 03fa 04F1580B 		add	fp, r4, #88
 415:../utilities/fsl_shell.c ****         /* Compare with last command. Push back to history buffer if different */
 1106              		.loc 1 415 0
 1107 03fe 0746     		mov	r7, r0
 1108              	.LVL133:
 417:../utilities/fsl_shell.c ****         {
 1109              		.loc 1 417 0
 1110 0400 0246     		mov	r2, r0
 1111 0402 5946     		mov	r1, fp
 1112 0404 3046     		mov	r0, r6
 1113              	.LVL134:
 1114 0406 FFF7FEFF 		bl	StrCompare
 1115              	.LVL135:
 1116 040a FFB2     		uxtb	r7, r7
 1117 040c 8742     		cmp	r7, r0
 1118 040e 2BD0     		beq	.L87
 1119 0410 0223     		movs	r3, #2
 1120              	.L88:
 1121              	.LVL136:
 1122 0412 9F01     		lsls	r7, r3, #6
 421:../utilities/fsl_shell.c ****                 tmpLen = StrLen(context->hist_buf[i - 1]);
 1123              		.loc 1 421 0
 1124 0414 07F15809 		add	r9, r7, #88
 1125 0418 A144     		add	r9, r9, r4
 422:../utilities/fsl_shell.c ****                 StrCopy(context->hist_buf[i], context->hist_buf[i - 1], tmpLen);
 1126              		.loc 1 422 0
 1127 041a 1837     		adds	r7, r7, #24
 421:../utilities/fsl_shell.c ****                 tmpLen = StrLen(context->hist_buf[i - 1]);
 1128              		.loc 1 421 0
 1129 041c 4022     		movs	r2, #64
 1130 041e 0021     		movs	r1, #0
 422:../utilities/fsl_shell.c ****                 StrCopy(context->hist_buf[i], context->hist_buf[i - 1], tmpLen);
 1131              		.loc 1 422 0
 1132 0420 2744     		add	r7, r7, r4
 421:../utilities/fsl_shell.c ****                 tmpLen = StrLen(context->hist_buf[i - 1]);
 1133              		.loc 1 421 0
 1134 0422 4846     		mov	r0, r9
 1135 0424 0093     		str	r3, [sp]
 1136 0426 FFF7FEFF 		bl	memset
 1137              	.LVL137:
 422:../utilities/fsl_shell.c ****                 StrCopy(context->hist_buf[i], context->hist_buf[i - 1], tmpLen);
 1138              		.loc 1 422 0
 1139 042a 3846     		mov	r0, r7
 1140 042c FFF7FEFF 		bl	StrLen
 1141              	.LVL138:
 423:../utilities/fsl_shell.c ****             }
 1142              		.loc 1 423 0
 1143 0430 3946     		mov	r1, r7
 1144 0432 C2B2     		uxtb	r2, r0
 1145 0434 4846     		mov	r0, r9
 1146              	.LVL139:
 1147 0436 FFF7FEFF 		bl	StrCopy
 1148              	.LVL140:
 419:../utilities/fsl_shell.c ****             {
 1149              		.loc 1 419 0
 1150 043a 009B     		ldr	r3, [sp]
 1151 043c 012B     		cmp	r3, #1
 1152 043e 1AD1     		bne	.L97
 425:../utilities/fsl_shell.c ****             tmpLen = StrLen(cmd);
 1153              		.loc 1 425 0
 1154 0440 4022     		movs	r2, #64
 1155              	.LVL141:
 1156 0442 0021     		movs	r1, #0
 1157 0444 5846     		mov	r0, fp
 1158 0446 FFF7FEFF 		bl	memset
 1159              	.LVL142:
 426:../utilities/fsl_shell.c ****             StrCopy(context->hist_buf[0], cmd, tmpLen);
 1160              		.loc 1 426 0
 1161 044a 3046     		mov	r0, r6
 1162 044c FFF7FEFF 		bl	StrLen
 1163              	.LVL143:
 427:../utilities/fsl_shell.c ****             if (context->hist_count < SHELL_HIST_MAX)
 1164              		.loc 1 427 0
 1165 0450 3146     		mov	r1, r6
 1166 0452 C2B2     		uxtb	r2, r0
 1167 0454 5846     		mov	r0, fp
 1168              	.LVL144:
 1169 0456 FFF7FEFF 		bl	StrCopy
 1170              	.LVL145:
 428:../utilities/fsl_shell.c ****             {
 1171              		.loc 1 428 0
 1172 045a B4F85630 		ldrh	r3, [r4, #86]
 1173 045e 022B     		cmp	r3, #2
 430:../utilities/fsl_shell.c ****             }
 1174              		.loc 1 430 0
 1175 0460 9CBF     		itt	ls
 1176 0462 0133     		addls	r3, r3, #1
 1177 0464 A4F85630 		strhls	r3, [r4, #86]	@ movhi
 1178              	.LVL146:
 1179              	.L87:
 433:../utilities/fsl_shell.c ****         tmpCommand = NULL;
 1180              		.loc 1 433 0
 1181 0468 DAF80830 		ldr	r3, [r10, #8]
 1182 046c 02AA     		add	r2, sp, #8
 1183 046e 2946     		mov	r1, r5
 1184 0470 2046     		mov	r0, r4
 1185 0472 9847     		blx	r3
 1186              	.LVL147:
 1187 0474 35E6     		b	.L140
 1188              	.LVL148:
 1189              	.L97:
 419:../utilities/fsl_shell.c ****             {
 1190              		.loc 1 419 0
 1191 0476 0123     		movs	r3, #1
 1192 0478 CBE7     		b	.L88
 1193              	.LVL149:
 1194              	.L83:
 438:../utilities/fsl_shell.c ****             "\r\nCommand not recognised.  Enter 'help' to view a list of available commands.\r\n\r\
 1195              		.loc 1 438 0
 1196 047a 236D     		ldr	r3, [r4, #80]
 1197 047c 1F48     		ldr	r0, .L143+8
 1198 047e 9847     		blx	r3
 1199              	.LVL150:
 440:../utilities/fsl_shell.c ****     }
 1200              		.loc 1 440 0
 1201 0480 C8F800A0 		str	r10, [r8]
 1202 0484 30E6     		b	.L85
 1203              	.LVL151:
 1204              	.L61:
 1205              	.LBE26:
 1206              	.LBE27:
 1207              	.LBE34:
 311:../utilities/fsl_shell.c ****         {
 1208              		.loc 1 311 0
 1209 0486 94F84720 		ldrb	r2, [r4, #71]	@ zero_extendqisi2
 1210 048a 94F84630 		ldrb	r3, [r4, #70]	@ zero_extendqisi2
 1211 048e 9A42     		cmp	r2, r3
 1212 0490 21D2     		bcs	.L90
 313:../utilities/fsl_shell.c ****                     context->l_pos - context->c_pos);
 1213              		.loc 1 313 0
 1214 0492 511D     		adds	r1, r2, #5
 1215 0494 901D     		adds	r0, r2, #6
 1216 0496 2144     		add	r1, r1, r4
 1217 0498 9A1A     		subs	r2, r3, r2
 1218 049a 2044     		add	r0, r0, r4
 1219 049c FFF7FEFF 		bl	memmove
 1220              	.LVL152:
 315:../utilities/fsl_shell.c ****             context->printf_data_func("%s", &context->line[context->c_pos]);
 1221              		.loc 1 315 0
 1222 04a0 94F84710 		ldrb	r1, [r4, #71]	@ zero_extendqisi2
 316:../utilities/fsl_shell.c ****             /* Move the cursor to new position */
 1223              		.loc 1 316 0
 1224 04a4 1648     		ldr	r0, .L143+12
 320:../utilities/fsl_shell.c ****             }
 1225              		.loc 1 320 0
 1226 04a6 174E     		ldr	r6, .L143+16
 315:../utilities/fsl_shell.c ****             context->printf_data_func("%s", &context->line[context->c_pos]);
 1227              		.loc 1 315 0
 1228 04a8 6318     		adds	r3, r4, r1
 316:../utilities/fsl_shell.c ****             /* Move the cursor to new position */
 1229              		.loc 1 316 0
 1230 04aa 0531     		adds	r1, r1, #5
 315:../utilities/fsl_shell.c ****             context->printf_data_func("%s", &context->line[context->c_pos]);
 1231              		.loc 1 315 0
 1232 04ac 5D71     		strb	r5, [r3, #5]
 316:../utilities/fsl_shell.c ****             /* Move the cursor to new position */
 1233              		.loc 1 316 0
 1234 04ae 236D     		ldr	r3, [r4, #80]
 1235 04b0 2144     		add	r1, r1, r4
 1236 04b2 9847     		blx	r3
 1237              	.LVL153:
 318:../utilities/fsl_shell.c ****             {
 1238              		.loc 1 318 0
 1239 04b4 94F84750 		ldrb	r5, [r4, #71]	@ zero_extendqisi2
 1240              	.LVL154:
 1241              	.L91:
 318:../utilities/fsl_shell.c ****             {
 1242              		.loc 1 318 0 is_stmt 0 discriminator 1
 1243 04b8 94F84630 		ldrb	r3, [r4, #70]	@ zero_extendqisi2
 1244 04bc 9D42     		cmp	r5, r3
 1245 04be 05DB     		blt	.L92
 1246              	.LVL155:
 1247              	.L93:
 330:../utilities/fsl_shell.c ****         context->c_pos++;
 1248              		.loc 1 330 0 is_stmt 1
 1249 04c0 94F84630 		ldrb	r3, [r4, #70]	@ zero_extendqisi2
 1250 04c4 0133     		adds	r3, r3, #1
 1251 04c6 84F84630 		strb	r3, [r4, #70]
 1252 04ca 5FE6     		b	.L139
 1253              	.LVL156:
 1254              	.L92:
 320:../utilities/fsl_shell.c ****             }
 1255              		.loc 1 320 0 discriminator 3
 1256 04cc 236D     		ldr	r3, [r4, #80]
 1257 04ce 3046     		mov	r0, r6
 1258 04d0 9847     		blx	r3
 1259              	.LVL157:
 318:../utilities/fsl_shell.c ****             {
 1260              		.loc 1 318 0 discriminator 3
 1261 04d2 0135     		adds	r5, r5, #1
 1262              	.LVL158:
 1263 04d4 F0E7     		b	.L91
 1264              	.LVL159:
 1265              	.L90:
 325:../utilities/fsl_shell.c ****             context->printf_data_func("%c", ch);
 1266              		.loc 1 325 0
 1267 04d6 2344     		add	r3, r3, r4
 326:../utilities/fsl_shell.c ****         }
 1268              		.loc 1 326 0
 1269 04d8 2946     		mov	r1, r5
 325:../utilities/fsl_shell.c ****             context->printf_data_func("%c", ch);
 1270              		.loc 1 325 0
 1271 04da 5D71     		strb	r5, [r3, #5]
 326:../utilities/fsl_shell.c ****         }
 1272              		.loc 1 326 0
 1273 04dc 236D     		ldr	r3, [r4, #80]
 1274 04de 0A48     		ldr	r0, .L143+20
 1275 04e0 9847     		blx	r3
 1276              	.LVL160:
 1277 04e2 EDE7     		b	.L93
 1278              	.LVL161:
 1279              	.L94:
 141:../utilities/fsl_shell.c ****     }
 1280              		.loc 1 141 0
 1281 04e4 4FF0FF30 		mov	r0, #-1
 1282              	.LVL162:
 1283              	.L30:
 334:../utilities/fsl_shell.c **** 
 1284              		.loc 1 334 0
 1285 04e8 43B0     		add	sp, sp, #268
 1286              		.cfi_remember_state
 1287              		.cfi_def_cfa_offset 36
 1288              		@ sp needed
 1289 04ea BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1290              	.LVL163:
 1291              	.L95:
 1292              		.cfi_restore_state
 333:../utilities/fsl_shell.c **** }
 1293              		.loc 1 333 0
 1294 04ee 0020     		movs	r0, #0
 1295 04f0 FAE7     		b	.L30
 1296              	.L144:
 1297 04f2 00BF     		.align	2
 1298              	.L143:
 1299 04f4 00000000 		.word	.LANCHOR0
 1300 04f8 00000000 		.word	.LANCHOR3
 1301 04fc BC000000 		.word	.LC12
 1302 0500 0E010000 		.word	.LC13
 1303 0504 49000000 		.word	.LC5
 1304 0508 4B000000 		.word	.LC6
 1305              		.cfi_endproc
 1306              	.LFE148:
 1308              		.section	.text.SHELL_RegisterCommand,"ax",%progbits
 1309              		.align	1
 1310              		.global	SHELL_RegisterCommand
 1311              		.syntax unified
 1312              		.thumb
 1313              		.thumb_func
 1314              		.fpu fpv4-sp-d16
 1316              	SHELL_RegisterCommand:
 1317              	.LFB158:
 626:../utilities/fsl_shell.c ****     int32_t result = 0;
 1318              		.loc 1 626 0
 1319              		.cfi_startproc
 1320              		@ args = 0, pretend = 0, frame = 0
 1321              		@ frame_needed = 0, uses_anonymous_args = 0
 1322              		@ link register save eliminated.
 1323              	.LVL164:
 630:../utilities/fsl_shell.c ****     {
 1324              		.loc 1 630 0
 1325 0000 074B     		ldr	r3, .L148
 1326 0002 93F85020 		ldrb	r2, [r3, #80]	@ zero_extendqisi2
 1327 0006 132A     		cmp	r2, #19
 632:../utilities/fsl_shell.c ****     }
 1328              		.loc 1 632 0
 1329 0008 9FBF     		itttt	ls
 1330 000a 511C     		addls	r1, r2, #1
 1331 000c 43F82200 		strls	r0, [r3, r2, lsl #2]
 1332 0010 83F85010 		strbls	r1, [r3, #80]
 627:../utilities/fsl_shell.c **** 
 1333              		.loc 1 627 0
 1334 0014 0020     		movls	r0, #0
 1335              	.LVL165:
 636:../utilities/fsl_shell.c ****     }
 1336              		.loc 1 636 0
 1337 0016 88BF     		it	hi
 1338 0018 4FF0FF30 		movhi	r0, #-1
 1339              	.LVL166:
 639:../utilities/fsl_shell.c **** 
 1340              		.loc 1 639 0
 1341 001c 7047     		bx	lr
 1342              	.L149:
 1343 001e 00BF     		.align	2
 1344              	.L148:
 1345 0020 00000000 		.word	.LANCHOR0
 1346              		.cfi_endproc
 1347              	.LFE158:
 1349              		.section	.text.SHELL_Init,"ax",%progbits
 1350              		.align	1
 1351              		.global	SHELL_Init
 1352              		.syntax unified
 1353              		.thumb
 1354              		.thumb_func
 1355              		.fpu fpv4-sp-d16
 1357              	SHELL_Init:
 1358              	.LFB147:
 117:../utilities/fsl_shell.c ****     assert(send_cb != NULL);
 1359              		.loc 1 117 0
 1360              		.cfi_startproc
 1361              		@ args = 4, pretend = 0, frame = 0
 1362              		@ frame_needed = 0, uses_anonymous_args = 0
 1363              	.LVL167:
 1364 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1365              		.cfi_def_cfa_offset 24
 1366              		.cfi_offset 4, -24
 1367              		.cfi_offset 5, -20
 1368              		.cfi_offset 6, -16
 1369              		.cfi_offset 7, -12
 1370              		.cfi_offset 8, -8
 1371              		.cfi_offset 14, -4
 117:../utilities/fsl_shell.c ****     assert(send_cb != NULL);
 1372              		.loc 1 117 0
 1373 0004 0446     		mov	r4, r0
 1374 0006 1E46     		mov	r6, r3
 1375 0008 8846     		mov	r8, r1
 1376 000a 1746     		mov	r7, r2
 1377 000c 069D     		ldr	r5, [sp, #24]
 124:../utilities/fsl_shell.c ****     context->send_data_func = send_cb;
 1378              		.loc 1 124 0
 1379 000e 4FF48E72 		mov	r2, #284
 1380              	.LVL168:
 1381 0012 0021     		movs	r1, #0
 1382              	.LVL169:
 1383 0014 FFF7FEFF 		bl	memset
 1384              	.LVL170:
 125:../utilities/fsl_shell.c ****     context->recv_data_func = recv_cb;
 1385              		.loc 1 125 0
 1386 0018 C4F84880 		str	r8, [r4, #72]
 126:../utilities/fsl_shell.c ****     context->printf_data_func = shell_printf;
 1387              		.loc 1 126 0
 1388 001c E764     		str	r7, [r4, #76]
 127:../utilities/fsl_shell.c ****     context->prompt = prompt;
 1389              		.loc 1 127 0
 1390 001e 2665     		str	r6, [r4, #80]
 128:../utilities/fsl_shell.c **** 
 1391              		.loc 1 128 0
 1392 0020 2560     		str	r5, [r4]
 130:../utilities/fsl_shell.c ****     SHELL_RegisterCommand(&xExitCommand);
 1393              		.loc 1 130 0
 1394 0022 0448     		ldr	r0, .L151
 1395 0024 FFF7FEFF 		bl	SHELL_RegisterCommand
 1396              	.LVL171:
 131:../utilities/fsl_shell.c **** }
 1397              		.loc 1 131 0
 1398 0028 0348     		ldr	r0, .L151+4
 132:../utilities/fsl_shell.c **** 
 1399              		.loc 1 132 0
 1400 002a BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 1401              		.cfi_restore 14
 1402              		.cfi_restore 8
 1403              		.cfi_restore 7
 1404              		.cfi_restore 6
 1405              		.cfi_restore 5
 1406              		.cfi_restore 4
 1407              		.cfi_def_cfa_offset 0
 1408              	.LVL172:
 131:../utilities/fsl_shell.c **** }
 1409              		.loc 1 131 0
 1410 002e FFF7FEBF 		b	SHELL_RegisterCommand
 1411              	.LVL173:
 1412              	.L152:
 1413 0032 00BF     		.align	2
 1414              	.L151:
 1415 0034 00000000 		.word	.LANCHOR4
 1416 0038 00000000 		.word	.LANCHOR5
 1417              		.cfi_endproc
 1418              	.LFE147:
 1420              		.section	.bss.endoflinechar.8116,"aw",%nobits
 1421              		.set	.LANCHOR2,. + 0
 1424              	endoflinechar.8116:
 1425 0000 00       		.space	1
 1426              		.section	.bss.g_RegisteredCommands,"aw",%nobits
 1427              		.align	2
 1428              		.set	.LANCHOR0,. + 0
 1431              	g_RegisteredCommands:
 1432 0000 00000000 		.space	84
 1432      00000000 
 1432      00000000 
 1432      00000000 
 1432      00000000 
 1433              		.section	.bss.g_paramBuffer,"aw",%nobits
 1434              		.set	.LANCHOR1,. + 0
 1437              	g_paramBuffer:
 1438 0000 00000000 		.space	64
 1438      00000000 
 1438      00000000 
 1438      00000000 
 1438      00000000 
 1439              		.section	.bss.tmpCommand.8139,"aw",%nobits
 1440              		.align	2
 1441              		.set	.LANCHOR3,. + 0
 1444              	tmpCommand.8139:
 1445 0000 00000000 		.space	4
 1446              		.section	.rodata.ExitCommand.str1.1,"aMS",%progbits,1
 1447              	.LC0:
 1448 0000 0D0A5348 		.ascii	"\015\012SHELL exited\015\012\000"
 1448      454C4C20 
 1448      65786974 
 1448      65640D0A 
 1448      00
 1449              		.section	.rodata.GetHistoryCommand.str1.1,"aMS",%progbits,1
 1450              	.LC1:
 1451 0000 08200800 		.ascii	"\010 \010\000"
 1452              		.section	.rodata.SHELL_Main.str1.1,"aMS",%progbits,1
 1453              	.LC2:
 1454 0000 41707220 		.ascii	"Apr  3 2018\000"
 1454      20332032 
 1454      30313800 
 1455              	.LC3:
 1456 000c 0D0A5348 		.ascii	"\015\012SHELL (build: %s)\015\012\000"
 1456      454C4C20 
 1456      28627569 
 1456      6C643A20 
 1456      2573290D 
 1457              	.LC4:
 1458 0022 436F7079 		.ascii	"Copyright (c) 2017 NXP Semiconductor\015\012\000"
 1458      72696768 
 1458      74202863 
 1458      29203230 
 1458      3137204E 
 1459              	.LC5:
 1460 0049 0800     		.ascii	"\010\000"
 1461              	.LC6:
 1462 004b 256300   		.ascii	"%c\000"
 1463              	.LC7:
 1464 004e 0D0A00   		.ascii	"\015\012\000"
 1465              	.LC8:
 1466 0051 25730D0A 		.ascii	"%s\015\012\000"
 1466      00
 1467              	.LC9:
 1468 0056 25732573 		.ascii	"%s%s\000"
 1468      00
 1469              	.LC10:
 1470 005b 08257320 		.ascii	"\010%s  \010\000"
 1470      200800
 1471              	.LC11:
 1472 0062 0D0A496E 		.ascii	"\015\012Incorrect command parameter(s).  Enter \"he"
 1472      636F7272 
 1472      65637420 
 1472      636F6D6D 
 1472      616E6420 
 1473 008e 6C702220 		.ascii	"lp\" to view a list of available commands.\015\012\015"
 1473      746F2076 
 1473      69657720 
 1473      61206C69 
 1473      7374206F 
 1474 00ba 0A00     		.ascii	"\012\000"
 1475              	.LC12:
 1476 00bc 0D0A436F 		.ascii	"\015\012Command not recognised.  Enter 'help' to vi"
 1476      6D6D616E 
 1476      64206E6F 
 1476      74207265 
 1476      636F676E 
 1477 00e9 65772061 		.ascii	"ew a list of available commands.\015\012\015\012\000"
 1477      206C6973 
 1477      74206F66 
 1477      20617661 
 1477      696C6162 
 1478              	.LC13:
 1479 010e 257300   		.ascii	"%s\000"
 1480              		.section	.rodata.str1.1,"aMS",%progbits,1
 1481              	.LC14:
 1482 0000 65786974 		.ascii	"exit\000"
 1482      00
 1483              	.LC15:
 1484 0005 0D0A2265 		.ascii	"\015\012\"exit\": Exit program\015\012\000"
 1484      78697422 
 1484      3A204578 
 1484      69742070 
 1484      726F6772 
 1485              	.LC16:
 1486 001e 68656C70 		.ascii	"help\000"
 1486      00
 1487              	.LC17:
 1488 0023 0D0A2268 		.ascii	"\015\012\"help\": Lists all the registered commands"
 1488      656C7022 
 1488      3A204C69 
 1488      73747320 
 1488      616C6C20 
 1489 004e 0D0A00   		.ascii	"\015\012\000"
 1490              		.section	.rodata.xExitCommand,"a",%progbits
 1491              		.align	2
 1492              		.set	.LANCHOR5,. + 0
 1495              	xExitCommand:
 1496 0000 00000000 		.word	.LC14
 1497 0004 05000000 		.word	.LC15
 1498 0008 00000000 		.word	ExitCommand
 1499 000c 00       		.byte	0
 1500 000d 000000   		.space	3
 1501              		.section	.rodata.xHelpCommand,"a",%progbits
 1502              		.align	2
 1503              		.set	.LANCHOR4,. + 0
 1506              	xHelpCommand:
 1507 0000 1E000000 		.word	.LC16
 1508 0004 23000000 		.word	.LC17
 1509 0008 00000000 		.word	HelpCommand
 1510 000c 00       		.byte	0
 1511 000d 000000   		.space	3
 1512              		.text
 1513              	.Letext0:
 1514              		.file 2 "/usr/local/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/machine/_default_type
 1515              		.file 3 "/usr/local/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/sys/_stdint.h"
 1516              		.file 4 "/usr/local/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/sys/lock.h"
 1517              		.file 5 "/usr/local/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/sys/_types.h"
 1518              		.file 6 "/usr/local/gcc-arm-none-eabi-6-2017-q2-update/lib/gcc/arm-none-eabi/6.3.1/include/stddef.
 1519              		.file 7 "/usr/local/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/sys/reent.h"
 1520              		.file 8 "../CMSIS/core_cm4.h"
 1521              		.file 9 "../CMSIS/system_MK64F12.h"
 1522              		.file 10 "../drivers/fsl_clock.h"
 1523              		.file 11 "../utilities/fsl_shell.h"
 1524              		.file 12 "../drivers/fsl_common.h"
 1525              		.file 13 "/usr/local/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/string.h"
