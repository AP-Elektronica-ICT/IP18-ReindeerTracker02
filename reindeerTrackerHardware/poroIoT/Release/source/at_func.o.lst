   1              		.cpu cortex-m0plus
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"at_func.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.breakIfAtOk,"ax",%progbits
  16              		.align	1
  17              		.global	breakIfAtOk
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	breakIfAtOk:
  24              	.LFB3:
  25              		.file 1 "../source/at_func.c"
   1:../source/at_func.c **** #include <stdint.h>
   2:../source/at_func.c **** #include <stdio.h>
   3:../source/at_func.c **** #include <stdlib.h>
   4:../source/at_func.c **** 
   5:../source/at_func.c **** #include "at_func.h"
   6:../source/at_func.c **** #include <string.h>
   7:../source/at_func.c **** #include "timing.h"
   8:../source/at_func.c **** 
   9:../source/at_func.c **** extern void NB_send(char* data);
  10:../source/at_func.c **** 
  11:../source/at_func.c **** extern uint8_t PCprint(char *data);
  12:../source/at_func.c **** 
  13:../source/at_func.c **** extern volatile uint8_t NB_strReady;
  14:../source/at_func.c **** 
  15:../source/at_func.c **** extern char NB_recBuf[];
  16:../source/at_func.c **** extern volatile uint16_t NB_bufPtr;
  17:../source/at_func.c **** 
  18:../source/at_func.c **** char* AT_REQ = "AT";
  19:../source/at_func.c **** 
  20:../source/at_func.c **** char* AT_CGMI = "CGMI";  // check manufacturer
  21:../source/at_func.c **** char* AT_NPIN = "NPIN=0,\"1234\"";  // sets, the PIN-code
  22:../source/at_func.c **** char* AT_COPS = "COPS";            //Register to operator network
  23:../source/at_func.c **** char* AT_CEREG = "CEREG?";  //connection status
  24:../source/at_func.c **** char* AT_NRB = "NRB";
  25:../source/at_func.c **** char* AT_CGDCONT = "CGDCONT=1,\"IP\",\"\",\"\"";
  26:../source/at_func.c **** char* AT_CGACT = "CGACT";
  27:../source/at_func.c **** char* AT_CSQ = "CSQ";  //Signal quality
  28:../source/at_func.c **** char* AT_CGPADDR = "CGPADDR";        //shows module ip address
  29:../source/at_func.c **** char* AT_NSOCR = "NSOCR=\"DGRAM\",17,42000,1"; //create UDP socket, port 420000
  30:../source/at_func.c **** //char AT_NSOST[] = "NSOST=0,\"195.34.89.241\",7,2,\"f8f8\"";
  31:../source/at_func.c **** char* AT_NSOST = "NSOST=";
  32:../source/at_func.c **** 
  33:../source/at_func.c **** char* AT_NSORF = "NSORF=0,2";    //show received data, =<socket>, <data_length>
  34:../source/at_func.c **** char* AT_CMEE = "CMEE=";
  35:../source/at_func.c **** char* AT_CFUN = "CFUN"; // sets functionality mode, edit this to change power mode
  36:../source/at_func.c **** 
  37:../source/at_func.c **** char* AT_CCLK = "CCLK"; // sets and reads rtc example: AT+CCLK="14/07/01,15:00:00+01"
  38:../source/at_func.c **** 
  39:../source/at_func.c **** /*
  40:../source/at_func.c ****  * Small function to check if NBiot receive buffer contains OK
  41:../source/at_func.c ****  * we can use this to break from response waiting loop if we already got OK answer
  42:../source/at_func.c ****  */
  43:../source/at_func.c **** uint8_t breakIfAtOk() {
  26              		.loc 1 43 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 10B5     		push	{r4, lr}
  31              		.cfi_def_cfa_offset 8
  32              		.cfi_offset 4, -8
  33              		.cfi_offset 14, -4
  44:../source/at_func.c **** 	if (strstr(NB_recBuf, "OK") != NULL) {
  34              		.loc 1 44 0
  35 0002 0449     		ldr	r1, .L2
  36 0004 0448     		ldr	r0, .L2+4
  37 0006 FFF7FEFF 		bl	strstr
  38              	.LVL0:
  39 000a 431E     		subs	r3, r0, #1
  40 000c 9841     		sbcs	r0, r0, r3
  45:../source/at_func.c **** 		return 1;
  46:../source/at_func.c **** 	}
  47:../source/at_func.c **** 	return 0;
  48:../source/at_func.c **** }
  41              		.loc 1 48 0
  42              		@ sp needed
  43 000e C0B2     		uxtb	r0, r0
  44 0010 10BD     		pop	{r4, pc}
  45              	.L3:
  46 0012 C046     		.align	2
  47              	.L2:
  48 0014 00000000 		.word	.LC0
  49 0018 00000000 		.word	NB_recBuf
  50              		.cfi_endproc
  51              	.LFE3:
  53              		.section	.text.AT_checkResult,"ax",%progbits
  54              		.align	1
  55              		.global	AT_checkResult
  56              		.syntax unified
  57              		.code	16
  58              		.thumb_func
  59              		.fpu softvfp
  61              	AT_checkResult:
  62              	.LFB4:
  49:../source/at_func.c **** 
  50:../source/at_func.c **** /*
  51:../source/at_func.c ****  * Check AT command return result and print related ok message or error message.
  52:../source/at_func.c ****  *
  53:../source/at_func.c ****  * res = AT command return code. 0 = command succeeded, 1 = module responded with ERROR, 2 = there 
  54:../source/at_func.c ****  * *subject = string that specifies the command
  55:../source/at_func.c ****  */
  56:../source/at_func.c **** 
  57:../source/at_func.c **** void AT_checkResult(uint8_t res, char *subject) {
  63              		.loc 1 57 0
  64              		.cfi_startproc
  65              		@ args = 0, pretend = 0, frame = 0
  66              		@ frame_needed = 0, uses_anonymous_args = 0
  67              		@ link register save eliminated.
  68              	.LVL1:
  58:../source/at_func.c **** 
  59:../source/at_func.c **** 	if (res == 0) {
  60:../source/at_func.c **** 		//PCprint("%s OK\r\n", subject);
  61:../source/at_func.c **** 	} else if (res == 1) {
  62:../source/at_func.c **** 		//PCprint("%s ERROR\r\n", subject);
  63:../source/at_func.c **** 	} else {
  64:../source/at_func.c **** 		//PCprint("%s NO RESPONSE\r\n", subject);
  65:../source/at_func.c **** 	}
  66:../source/at_func.c **** }
  69              		.loc 1 66 0
  70              		@ sp needed
  71 0000 7047     		bx	lr
  72              		.cfi_endproc
  73              	.LFE4:
  75              		.section	.text.AT_send,"ax",%progbits
  76              		.align	1
  77              		.global	AT_send
  78              		.syntax unified
  79              		.code	16
  80              		.thumb_func
  81              		.fpu softvfp
  83              	AT_send:
  84              	.LFB5:
  67:../source/at_func.c **** 
  68:../source/at_func.c **** /*
  69:../source/at_func.c ****  *
  70:../source/at_func.c ****  * Send AT command to module.
  71:../source/at_func.c ****  * Parameter:
  72:../source/at_func.c ****  *
  73:../source/at_func.c ****  * *AT_cmd = pointer to AT command suffix (the part after "AT+"
  74:../source/at_func.c ****  * *AT_parameter = parameters to add to the command
  75:../source/at_func.c ****  * *AT_exptAnswer = expected answer string that module should answer to the command
  76:../source/at_func.c ****  *
  77:../source/at_func.c ****  */
  78:../source/at_func.c **** uint8_t AT_send(char *AT_cmd, char *AT_parameter, char *AT_exptAnswer) {
  85              		.loc 1 78 0
  86              		.cfi_startproc
  87              		@ args = 0, pretend = 0, frame = 512
  88              		@ frame_needed = 0, uses_anonymous_args = 0
  89              	.LVL2:
  90 0000 F3B5     		push	{r0, r1, r4, r5, r6, r7, lr}
  91              		.cfi_def_cfa_offset 28
  92              		.cfi_offset 0, -28
  93              		.cfi_offset 1, -24
  94              		.cfi_offset 4, -20
  95              		.cfi_offset 5, -16
  96              		.cfi_offset 6, -12
  97              		.cfi_offset 7, -8
  98              		.cfi_offset 14, -4
  99 0002 1700     		movs	r7, r2
  79:../source/at_func.c **** 
  80:../source/at_func.c **** 	char cmd_buf[500];
  81:../source/at_func.c **** 	uint8_t result = 2;
  82:../source/at_func.c **** 	uint32_t time_limit = 1000;
  83:../source/at_func.c **** 
  84:../source/at_func.c **** 	NB_bufPtr = 0;
 100              		.loc 1 84 0
 101 0004 0022     		movs	r2, #0
 102              	.LVL3:
 103 0006 254D     		ldr	r5, .L16
  78:../source/at_func.c **** 
 104              		.loc 1 78 0
 105 0008 FFB0     		sub	sp, sp, #508
 106              		.cfi_def_cfa_offset 536
  78:../source/at_func.c **** 
 107              		.loc 1 78 0
 108 000a 0B00     		movs	r3, r1
 109              		.loc 1 84 0
 110 000c 2A80     		strh	r2, [r5]
  85:../source/at_func.c **** 
  86:../source/at_func.c **** 	sprintf(cmd_buf, "AT+%s%s\r\n", AT_cmd, AT_parameter);
 111              		.loc 1 86 0
 112 000e 2449     		ldr	r1, .L16+4
 113              	.LVL4:
 114 0010 0200     		movs	r2, r0
 115 0012 03A8     		add	r0, sp, #12
 116              	.LVL5:
 117 0014 FFF7FEFF 		bl	sprintf
 118              	.LVL6:
  87:../source/at_func.c **** 	NB_send(cmd_buf);
 119              		.loc 1 87 0
 120 0018 03A8     		add	r0, sp, #12
 121 001a FFF7FEFF 		bl	NB_send
 122              	.LVL7:
  88:../source/at_func.c **** 
  89:../source/at_func.c **** 	PCprint("send to module: \r\n");
 123              		.loc 1 89 0
 124 001e 2148     		ldr	r0, .L16+8
 125 0020 FFF7FEFF 		bl	PCprint
 126              	.LVL8:
  90:../source/at_func.c **** 	PCprint(cmd_buf);
 127              		.loc 1 90 0
 128 0024 03A8     		add	r0, sp, #12
 129 0026 FFF7FEFF 		bl	PCprint
 130              	.LVL9:
  91:../source/at_func.c **** 
  92:../source/at_func.c **** 	if (strstr(cmd_buf, "NRB") != NULL) {
 131              		.loc 1 92 0
 132 002a 1F49     		ldr	r1, .L16+12
 133 002c 03A8     		add	r0, sp, #12
 134 002e FFF7FEFF 		bl	strstr
 135              	.LVL10:
  93:../source/at_func.c **** 		time_limit = 10000;
 136              		.loc 1 93 0
 137 0032 4442     		rsbs	r4, r0, #0
 138 0034 4441     		adcs	r4, r4, r0
 139 0036 1D48     		ldr	r0, .L16+16
 140 0038 1D4B     		ldr	r3, .L16+20
 141 003a 6442     		rsbs	r4, r4, #0
 142 003c 0440     		ands	r4, r0
 143 003e E418     		adds	r4, r4, r3
 144              	.LVL11:
  94:../source/at_func.c **** 	}
  95:../source/at_func.c **** 
  96:../source/at_func.c **** 	time_limit = millis() + time_limit;
 145              		.loc 1 96 0
 146 0040 FFF7FEFF 		bl	millis
 147              	.LVL12:
 148 0044 0319     		adds	r3, r0, r4
 149 0046 0193     		str	r3, [sp, #4]
 150              	.LVL13:
 151              	.L8:
  97:../source/at_func.c **** 	while (millis() < time_limit) {
 152              		.loc 1 97 0
 153 0048 FFF7FEFF 		bl	millis
 154              	.LVL14:
 155 004c 019B     		ldr	r3, [sp, #4]
 156 004e 9842     		cmp	r0, r3
 157 0050 01D3     		bcc	.L11
  81:../source/at_func.c **** 	uint32_t time_limit = 1000;
 158              		.loc 1 81 0
 159 0052 0224     		movs	r4, #2
 160 0054 0EE0     		b	.L10
 161              	.L11:
  98:../source/at_func.c **** 		if (NB_strReady) {
 162              		.loc 1 98 0
 163 0056 174E     		ldr	r6, .L16+24
 164 0058 3378     		ldrb	r3, [r6]
 165 005a 002B     		cmp	r3, #0
 166 005c F4D0     		beq	.L8
  99:../source/at_func.c **** 
 100:../source/at_func.c **** 			if (strstr(NB_recBuf, AT_exptAnswer) != NULL) //if received buffer contains expected answer
 167              		.loc 1 100 0
 168 005e 164C     		ldr	r4, .L16+28
 169 0060 3900     		movs	r1, r7
 170 0062 2000     		movs	r0, r4
 171 0064 FFF7FEFF 		bl	strstr
 172              	.LVL15:
 173 0068 0028     		cmp	r0, #0
 174 006a 0DD0     		beq	.L9
 101:../source/at_func.c **** 			{
 102:../source/at_func.c **** 				PCprint(NB_recBuf);
 175              		.loc 1 102 0
 176 006c 2000     		movs	r0, r4
 177 006e FFF7FEFF 		bl	PCprint
 178              	.LVL16:
 103:../source/at_func.c **** 				result = 0;
 179              		.loc 1 103 0
 180 0072 0024     		movs	r4, #0
 181              	.LVL17:
 182              	.L10:
 104:../source/at_func.c **** 				break;
 105:../source/at_func.c **** 			} else if (strstr(NB_recBuf, "ERROR") != NULL) {
 106:../source/at_func.c **** 
 107:../source/at_func.c **** 				result = 1;
 108:../source/at_func.c **** 				break;
 109:../source/at_func.c **** 			}
 110:../source/at_func.c **** 			NB_strReady = 0;
 111:../source/at_func.c **** 		}
 112:../source/at_func.c **** 	}
 113:../source/at_func.c **** 	NB_bufPtr = 0;
 114:../source/at_func.c **** 	memset(NB_recBuf, 0, 600);
 183              		.loc 1 114 0
 184 0074 9622     		movs	r2, #150
 113:../source/at_func.c **** 	memset(NB_recBuf, 0, 600);
 185              		.loc 1 113 0
 186 0076 0021     		movs	r1, #0
 187              		.loc 1 114 0
 188 0078 9200     		lsls	r2, r2, #2
 189 007a 0F48     		ldr	r0, .L16+28
 113:../source/at_func.c **** 	memset(NB_recBuf, 0, 600);
 190              		.loc 1 113 0
 191 007c 2980     		strh	r1, [r5]
 192              		.loc 1 114 0
 193 007e FFF7FEFF 		bl	memset
 194              	.LVL18:
 115:../source/at_func.c **** 
 116:../source/at_func.c **** 	return result;
 117:../source/at_func.c **** }
 195              		.loc 1 117 0
 196 0082 2000     		movs	r0, r4
 197 0084 7FB0     		add	sp, sp, #508
 198              		@ sp needed
 199              	.LVL19:
 200              	.LVL20:
 201 0086 F6BD     		pop	{r1, r2, r4, r5, r6, r7, pc}
 202              	.LVL21:
 203              	.L9:
 105:../source/at_func.c **** 
 204              		.loc 1 105 0
 205 0088 0C49     		ldr	r1, .L16+32
 206 008a 2000     		movs	r0, r4
 207 008c FFF7FEFF 		bl	strstr
 208              	.LVL22:
 209 0090 0028     		cmp	r0, #0
 210 0092 01D1     		bne	.L13
 110:../source/at_func.c **** 		}
 211              		.loc 1 110 0
 212 0094 3070     		strb	r0, [r6]
 213 0096 D7E7     		b	.L8
 214              	.L13:
 107:../source/at_func.c **** 				break;
 215              		.loc 1 107 0
 216 0098 0124     		movs	r4, #1
 217 009a EBE7     		b	.L10
 218              	.L17:
 219              		.align	2
 220              	.L16:
 221 009c 00000000 		.word	NB_bufPtr
 222 00a0 00000000 		.word	.LC4
 223 00a4 0A000000 		.word	.LC6
 224 00a8 1D000000 		.word	.LC8
 225 00ac D8DCFFFF 		.word	-9000
 226 00b0 10270000 		.word	10000
 227 00b4 00000000 		.word	NB_strReady
 228 00b8 00000000 		.word	NB_recBuf
 229 00bc 21000000 		.word	.LC12
 230              		.cfi_endproc
 231              	.LFE5:
 233              		.global	AT_CCLK
 234              		.global	AT_CFUN
 235              		.global	AT_CMEE
 236              		.global	AT_NSORF
 237              		.global	AT_NSOST
 238              		.global	AT_NSOCR
 239              		.global	AT_CGPADDR
 240              		.global	AT_CSQ
 241              		.global	AT_CGACT
 242              		.global	AT_CGDCONT
 243              		.global	AT_NRB
 244              		.global	AT_CEREG
 245              		.global	AT_COPS
 246              		.global	AT_NPIN
 247              		.global	AT_CGMI
 248              		.global	AT_REQ
 249              		.section	.data.AT_CCLK,"aw",%progbits
 250              		.align	2
 253              	AT_CCLK:
 254 0000 00000000 		.word	.LC14
 255              		.section	.data.AT_CEREG,"aw",%progbits
 256              		.align	2
 259              	AT_CEREG:
 260 0000 61000000 		.word	.LC24
 261              		.section	.data.AT_CFUN,"aw",%progbits
 262              		.align	2
 265              	AT_CFUN:
 266 0000 05000000 		.word	.LC15
 267              		.section	.data.AT_CGACT,"aw",%progbits
 268              		.align	2
 271              	AT_CGACT:
 272 0000 46000000 		.word	.LC22
 273              		.section	.data.AT_CGDCONT,"aw",%progbits
 274              		.align	2
 277              	AT_CGDCONT:
 278 0000 4C000000 		.word	.LC23
 279              		.section	.data.AT_CGMI,"aw",%progbits
 280              		.align	2
 283              	AT_CGMI:
 284 0000 7B000000 		.word	.LC27
 285              		.section	.data.AT_CGPADDR,"aw",%progbits
 286              		.align	2
 289              	AT_CGPADDR:
 290 0000 3A000000 		.word	.LC20
 291              		.section	.data.AT_CMEE,"aw",%progbits
 292              		.align	2
 295              	AT_CMEE:
 296 0000 0A000000 		.word	.LC16
 297              		.section	.data.AT_COPS,"aw",%progbits
 298              		.align	2
 301              	AT_COPS:
 302 0000 68000000 		.word	.LC25
 303              		.section	.data.AT_CSQ,"aw",%progbits
 304              		.align	2
 307              	AT_CSQ:
 308 0000 42000000 		.word	.LC21
 309              		.section	.data.AT_NPIN,"aw",%progbits
 310              		.align	2
 313              	AT_NPIN:
 314 0000 6D000000 		.word	.LC26
 315              		.section	.data.AT_NRB,"aw",%progbits
 316              		.align	2
 319              	AT_NRB:
 320 0000 1D000000 		.word	.LC8
 321              		.section	.data.AT_NSOCR,"aw",%progbits
 322              		.align	2
 325              	AT_NSOCR:
 326 0000 21000000 		.word	.LC19
 327              		.section	.data.AT_NSORF,"aw",%progbits
 328              		.align	2
 331              	AT_NSORF:
 332 0000 10000000 		.word	.LC17
 333              		.section	.data.AT_NSOST,"aw",%progbits
 334              		.align	2
 337              	AT_NSOST:
 338 0000 1A000000 		.word	.LC18
 339              		.section	.data.AT_REQ,"aw",%progbits
 340              		.align	2
 343              	AT_REQ:
 344 0000 80000000 		.word	.LC28
 345              		.section	.rodata.AT_send.str1.1,"aMS",%progbits,1
 346              	.LC4:
 347 0000 41542B25 		.ascii	"AT+%s%s\015\012\000"
 347      7325730D 
 347      0A00
 348              	.LC6:
 349 000a 73656E64 		.ascii	"send to module: \015\012\000"
 349      20746F20 
 349      6D6F6475 
 349      6C653A20 
 349      0D0A00
 350              	.LC8:
 351 001d 4E524200 		.ascii	"NRB\000"
 352              	.LC12:
 353 0021 4552524F 		.ascii	"ERROR\000"
 353      5200
 354              		.section	.rodata.breakIfAtOk.str1.1,"aMS",%progbits,1
 355              	.LC0:
 356 0000 4F4B00   		.ascii	"OK\000"
 357              		.section	.rodata.str1.1,"aMS",%progbits,1
 358              	.LC14:
 359 0000 43434C4B 		.ascii	"CCLK\000"
 359      00
 360              	.LC15:
 361 0005 4346554E 		.ascii	"CFUN\000"
 361      00
 362              	.LC16:
 363 000a 434D4545 		.ascii	"CMEE=\000"
 363      3D00
 364              	.LC17:
 365 0010 4E534F52 		.ascii	"NSORF=0,2\000"
 365      463D302C 
 365      3200
 366              	.LC18:
 367 001a 4E534F53 		.ascii	"NSOST=\000"
 367      543D00
 368              	.LC19:
 369 0021 4E534F43 		.ascii	"NSOCR=\"DGRAM\",17,42000,1\000"
 369      523D2244 
 369      4752414D 
 369      222C3137 
 369      2C343230 
 370              	.LC20:
 371 003a 43475041 		.ascii	"CGPADDR\000"
 371      44445200 
 372              	.LC21:
 373 0042 43535100 		.ascii	"CSQ\000"
 374              	.LC22:
 375 0046 43474143 		.ascii	"CGACT\000"
 375      5400
 376              	.LC23:
 377 004c 43474443 		.ascii	"CGDCONT=1,\"IP\",\"\",\"\"\000"
 377      4F4E543D 
 377      312C2249 
 377      50222C22 
 377      222C2222 
 378              	.LC24:
 379 0061 43455245 		.ascii	"CEREG?\000"
 379      473F00
 380              	.LC25:
 381 0068 434F5053 		.ascii	"COPS\000"
 381      00
 382              	.LC26:
 383 006d 4E50494E 		.ascii	"NPIN=0,\"1234\"\000"
 383      3D302C22 
 383      31323334 
 383      2200
 384              	.LC27:
 385 007b 43474D49 		.ascii	"CGMI\000"
 385      00
 386              	.LC28:
 387 0080 415400   		.ascii	"AT\000"
 388              		.text
 389              	.Letext0:
 390              		.file 2 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/machine/_default_types.h"
 391              		.file 3 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_stdint.h"
 392              		.file 4 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/lock.h"
 393              		.file 5 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_types.h"
 394              		.file 6 "/opt/gcc-arm-none-eabi-7-2017-q4-major/lib/gcc/arm-none-eabi/7.2.1/include/stddef.h"
 395              		.file 7 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/reent.h"
 396              		.file 8 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/stdlib.h"
 397              		.file 9 "../source/at_func.h"
 398              		.file 10 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/stdio.h"
 399              		.file 11 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/string.h"
 400              		.file 12 "../source/timing.h"
 401              		.file 13 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 at_func.c
     /tmp/ccpp0C3F.s:16     .text.breakIfAtOk:0000000000000000 $t
     /tmp/ccpp0C3F.s:23     .text.breakIfAtOk:0000000000000000 breakIfAtOk
     /tmp/ccpp0C3F.s:48     .text.breakIfAtOk:0000000000000014 $d
     /tmp/ccpp0C3F.s:54     .text.AT_checkResult:0000000000000000 $t
     /tmp/ccpp0C3F.s:61     .text.AT_checkResult:0000000000000000 AT_checkResult
     /tmp/ccpp0C3F.s:76     .text.AT_send:0000000000000000 $t
     /tmp/ccpp0C3F.s:83     .text.AT_send:0000000000000000 AT_send
     /tmp/ccpp0C3F.s:221    .text.AT_send:000000000000009c $d
     /tmp/ccpp0C3F.s:253    .data.AT_CCLK:0000000000000000 AT_CCLK
     /tmp/ccpp0C3F.s:265    .data.AT_CFUN:0000000000000000 AT_CFUN
     /tmp/ccpp0C3F.s:295    .data.AT_CMEE:0000000000000000 AT_CMEE
     /tmp/ccpp0C3F.s:331    .data.AT_NSORF:0000000000000000 AT_NSORF
     /tmp/ccpp0C3F.s:337    .data.AT_NSOST:0000000000000000 AT_NSOST
     /tmp/ccpp0C3F.s:325    .data.AT_NSOCR:0000000000000000 AT_NSOCR
     /tmp/ccpp0C3F.s:289    .data.AT_CGPADDR:0000000000000000 AT_CGPADDR
     /tmp/ccpp0C3F.s:307    .data.AT_CSQ:0000000000000000 AT_CSQ
     /tmp/ccpp0C3F.s:271    .data.AT_CGACT:0000000000000000 AT_CGACT
     /tmp/ccpp0C3F.s:277    .data.AT_CGDCONT:0000000000000000 AT_CGDCONT
     /tmp/ccpp0C3F.s:319    .data.AT_NRB:0000000000000000 AT_NRB
     /tmp/ccpp0C3F.s:259    .data.AT_CEREG:0000000000000000 AT_CEREG
     /tmp/ccpp0C3F.s:301    .data.AT_COPS:0000000000000000 AT_COPS
     /tmp/ccpp0C3F.s:313    .data.AT_NPIN:0000000000000000 AT_NPIN
     /tmp/ccpp0C3F.s:283    .data.AT_CGMI:0000000000000000 AT_CGMI
     /tmp/ccpp0C3F.s:343    .data.AT_REQ:0000000000000000 AT_REQ
     /tmp/ccpp0C3F.s:250    .data.AT_CCLK:0000000000000000 $d
     /tmp/ccpp0C3F.s:256    .data.AT_CEREG:0000000000000000 $d
     /tmp/ccpp0C3F.s:262    .data.AT_CFUN:0000000000000000 $d
     /tmp/ccpp0C3F.s:268    .data.AT_CGACT:0000000000000000 $d
     /tmp/ccpp0C3F.s:274    .data.AT_CGDCONT:0000000000000000 $d
     /tmp/ccpp0C3F.s:280    .data.AT_CGMI:0000000000000000 $d
     /tmp/ccpp0C3F.s:286    .data.AT_CGPADDR:0000000000000000 $d
     /tmp/ccpp0C3F.s:292    .data.AT_CMEE:0000000000000000 $d
     /tmp/ccpp0C3F.s:298    .data.AT_COPS:0000000000000000 $d
     /tmp/ccpp0C3F.s:304    .data.AT_CSQ:0000000000000000 $d
     /tmp/ccpp0C3F.s:310    .data.AT_NPIN:0000000000000000 $d
     /tmp/ccpp0C3F.s:316    .data.AT_NRB:0000000000000000 $d
     /tmp/ccpp0C3F.s:322    .data.AT_NSOCR:0000000000000000 $d
     /tmp/ccpp0C3F.s:328    .data.AT_NSORF:0000000000000000 $d
     /tmp/ccpp0C3F.s:334    .data.AT_NSOST:0000000000000000 $d
     /tmp/ccpp0C3F.s:340    .data.AT_REQ:0000000000000000 $d

UNDEFINED SYMBOLS
strstr
NB_recBuf
sprintf
NB_send
PCprint
millis
memset
NB_bufPtr
NB_strReady
